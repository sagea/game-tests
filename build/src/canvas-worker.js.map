{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_isPlaceholder.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_curry1.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_curry2.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_concat.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_arity.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_curryN.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/curryN.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_curry3.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_isArray.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_isTransformer.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_dispatchable.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xfBase.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_map.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_isString.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_isArrayLike.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xwrap.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/bind.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_reduce.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xmap.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_has.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_isArguments.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/keys.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/map.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_isInteger.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/reduce.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/ap.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/isNil.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/liftN.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/lift.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/not.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/complement.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_pipe.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_checkForMethod.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/slice.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/tail.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/pipe.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_toISOString.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/curry.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/forEach.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_objectAssign.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/mergeLeft.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/trim.js", "../../src/Vector.ts", "../../src/draw.ts", "../../node_modules/.pnpm/baconjs@3.0.17/node_modules/baconjs/dist/Bacon.mjs", "../../src/State/GlobalState.ts", "../../src/util.ts", "../../src/draw2.ts", "../../src/canvas-worker.ts"],
  "sourcesContent": ["export default function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}", "import _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}", "import _curry1 from \"./_curry1.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}", "/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n  idx = 0;\n\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n\n  idx = 0;\n\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n\n  return result;\n}", "export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}", "import _arity from \"./_arity.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}", "import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _curryN from \"./internal/_curryN.js\";\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nexport default curryN;", "import _curry1 from \"./_curry1.js\";\nimport _curry2 from \"./_curry2.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}", "/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};", "export default function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}", "import _isArray from \"./_isArray.js\";\nimport _isTransformer from \"./_isTransformer.js\";\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer created by [transducerCreator] to return a new transformer\n * (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} transducerCreator transducer factory if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\nexport default function _dispatchable(methodNames, transducerCreator, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[arguments.length - 1];\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, Array.prototype.slice.call(arguments, 0, -1));\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = transducerCreator.apply(null, Array.prototype.slice.call(arguments, 0, -1));\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n}", "export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};", "export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n}", "export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}", "import _curry1 from \"./_curry1.js\";\nimport _isArray from \"./_isArray.js\";\nimport _isString from \"./_isString.js\";\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n *      _isArrayLike({nodeType: 1, length: 1}) // => false\n */\n\nvar _isArrayLike =\n/*#__PURE__*/\n_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});\n\nexport default _isArrayLike;", "var XWrap =\n/*#__PURE__*/\nfunction () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}", "import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\nvar bind =\n/*#__PURE__*/\n_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\nexport default bind;", "import _isArrayLike from \"./_isArrayLike.js\";\nimport _xwrap from \"./_xwrap.js\";\nimport bind from \"../bind.js\";\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}", "import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XMap =\n/*#__PURE__*/\nfunction () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap =\n/*#__PURE__*/\n_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\n\nexport default _xmap;", "export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}", "import _has from \"./_has.js\";\nvar toString = Object.prototype.toString;\n\nvar _isArguments =\n/*#__PURE__*/\nfunction () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nexport default _isArguments;", "import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\nimport _isArguments from \"./internal/_isArguments.js\"; // cover IE < 9 keys issues\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values, R.toPairs\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ?\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) :\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n});\nexport default keys;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _map from \"./internal/_map.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xmap from \"./internal/_xmap.js\";\nimport curryN from \"./curryN.js\";\nimport keys from \"./keys.js\";\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex, R.pluck, R.project\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\nvar map =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));\n\nexport default map;", "/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};", "import _curry3 from \"./internal/_curry3.js\";\nimport _reduce from \"./internal/_reduce.js\";\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\nvar reduce =\n/*#__PURE__*/\n_curry3(_reduce);\n\nexport default reduce;", "import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport map from \"./map.js\";\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (r -> a -> b) -> (r -> a) -> (r -> b)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\n\nvar ap =\n/*#__PURE__*/\n_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } : _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\n\nexport default ap;", "import _curry1 from \"./internal/_curry1.js\";\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\nvar isNil =\n/*#__PURE__*/\n_curry1(function isNil(x) {\n  return x == null;\n});\n\nexport default isNil;", "import _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport ap from \"./ap.js\";\nimport curryN from \"./curryN.js\";\nimport map from \"./map.js\";\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      const madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\n\nvar liftN =\n/*#__PURE__*/\n_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\n\nexport default liftN;", "import _curry1 from \"./internal/_curry1.js\";\nimport liftN from \"./liftN.js\";\n/**\n * \"lifts\" a function of arity >= 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      const madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([100, 200], [30, 40], [5, 6, 7]); //=> [135, 136, 137, 145, 146, 147, 235, 236, 237, 245, 246, 247]\n *\n *      const madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([10, 20], [1], [2, 3], [4], [100, 200]); //=> [117, 217, 118, 218, 127, 227, 128, 228]\n */\n\nvar lift =\n/*#__PURE__*/\n_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\n\nexport default lift;", "import _curry1 from \"./internal/_curry1.js\";\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\n\nvar not =\n/*#__PURE__*/\n_curry1(function not(a) {\n  return !a;\n});\n\nexport default not;", "import lift from \"./lift.js\";\nimport not from \"./not.js\";\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      const isNotNil = R.complement(R.isNil);\n *      R.isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      R.isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\n\nvar complement =\n/*#__PURE__*/\nlift(not);\nexport default complement;", "export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}", "import _isArray from \"./_isArray.js\";\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implementation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}", "import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nexport default slice;", "import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\n\nvar tail =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_checkForMethod('tail',\n/*#__PURE__*/\nslice(1, Infinity)));\n\nexport default tail;", "import _arity from \"./internal/_arity.js\";\nimport _pipe from \"./internal/_pipe.js\";\nimport reduce from \"./reduce.js\";\nimport tail from \"./tail.js\";\n/**\n * Performs left-to-right function composition. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n * @symb R.pipe(f, g, h)(a)(b) = h(g(f(a)))(b)\n */\n\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}", "/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;", "import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curry =\n/*#__PURE__*/\n_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\nexport default curry;", "import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      const printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\n\nvar forEach =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n\n  return list;\n}));\n\nexport default forEach;", "import _has from \"./_has.js\"; // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n\n  while (idx < length) {\n    var source = arguments[idx];\n\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n\n    idx += 1;\n  }\n\n  return output;\n}\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;", "import _objectAssign from \"./internal/_objectAssign.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepLeft, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeLeft({ 'age': 40 }, { 'name': 'fred', 'age': 10 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const resetToDefault = R.mergeLeft({x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeLeft(a, b) = {...b, ...a}\n */\n\nvar mergeLeft =\n/*#__PURE__*/\n_curry2(function mergeLeft(l, r) {\n  return _objectAssign({}, r, l);\n});\n\nexport default mergeLeft;", "import _curry1 from \"./internal/_curry1.js\";\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\n\nvar trim = !hasProtoTrim ||\n/*#__PURE__*/\nws.trim() || !\n/*#__PURE__*/\nzeroWidth.trim() ?\n/*#__PURE__*/\n_curry1(function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n}) :\n/*#__PURE__*/\n_curry1(function trim(str) {\n  return str.trim();\n});\nexport default trim;", "import { set, lensProp, view, curry } from 'ramda'\n\n\nconst getX = ([x]) => x;\nconst setX = ([_x, _y], value) => [value, _y];\nconst getY = ([_, y]) => y;\nconst setY = ([_x], value) => [_x, value];\n\nexport const from = (x = 0, y = x) => {\n    if (Array.isArray(x)) return from(x[0], x[1]);\n    return [x, y];\n}\n\nexport const zero = () => from(0)\nexport const x = (...args) => {\n    if (args.length === 0) throw new Error('X requires a method')\n    if (args.length === 1) return getX(...args);\n    if (args.length === 2) return setX(...args)\n}\nexport const y = (...args) => {\n    if (args.length === 0) throw new Error('X requires a method')\n    if (args.length === 1) return getY(...args)\n    if (args.length === 2) return setY(...args);\n}\n\nexport const add = curry((_1, _2) => {\n    const [x1, y1] = from(_1);\n    const [x2, y2] = from(_2);\n    return [x1 + x2, y1 + y2];\n})\n\nexport const up = (value) => from(0, value * -1)\nexport const down = (value) => from(0, value)\nexport const left = (value) => from(value * -1, 0)\nexport const right = (value) => from(value, 0)", "import { append, curry, forEach, mergeLeft, pipe } from 'ramda'\nimport { x, y } from './Vector'\n\nconst createHandler = (type, creator) => (...args) => ({ type, ...creator(...args) })\nconst createStyleMethod = (key) => curry((value, renderState) => mergeLeft(renderState, { [key]: value }))\nexport const fillStyle = createStyleMethod('fillStyle')\nexport const font = createStyleMethod('font')\nexport const lineWidth = createStyleMethod('lineWidth')\nexport const strokeStyle = createStyleMethod('strokeStyle')\n\nexport const attachStyles = (styles) => {\n    if (styles.length === 0) return {}\n    return pipe(...styles)({})\n}\n\n\nexport const rect = createHandler('fillRect', (pos, size, ...styles) => ({ args: [...pos, ...size], styles: attachStyles(styles) }))\nexport const text = createHandler('fillText', (text, pos, ...styles) => ({ args: [text, ...pos], styles: attachStyles(styles) }))\nexport const path = createHandler('__path__', (paths, ...styles) => ({ paths, styles: attachStyles(styles) }))\nexport const clearRect = createHandler('clearRect', (pos, size) => ({ args: [...pos, ...size] }))\n\nexport const handleRenders = (...items) => {\n    if (items.length === 0) {\n        return gs => gs\n    }\n    return pipe(...items.map(item => append(item)))\n}\n\nconst addStyleKey = curry((key, state) => mergeLeft(state, {\n    [key]: (ctx, value) => Object.assign(ctx, { [key]: value })\n}))\n\nconst styleHandlers = pipe(\n    addStyleKey('strokeStyle'),\n    addStyleKey('lineWidth'),\n    addStyleKey('fillStyle'),\n    addStyleKey('font'),\n)({})\n\nexport const renderState = (ctx, state) => {\n\n    state.forEach(({ type, args, paths, styles = {} }) => {\n        ctx.save()\n        Object.entries(styles)\n            .forEach(([key, value]) => styleHandlers[key](ctx, value))\n        if (type === '__path__') {\n            const first = paths[0]\n            ctx.beginPath()\n            ctx.moveTo(x(first), y(first))\n            forEach((path) => ctx.lineTo(x(path), y(path)), paths.slice(1))\n            ctx.stroke()\n            ctx.closePath()\n        } else {\n            ctx[type](...args)\n        }\n        ctx.restore()\n    })\n}\n", "/** @hidden */\nfunction nop() { }\n/** @hidden */\nconst isArray = Array.isArray || function (xs) { return xs instanceof Array; };\n/** @hidden */\nfunction isObservable(x) {\n    return x && x._isObservable;\n}\n\n/** @hidden */\nfunction all(xs, f) {\n    for (var i = 0, x; i < xs.length; i++) {\n        x = xs[i];\n        if (!f(x)) {\n            return false;\n        }\n    }\n    return true;\n}\n/** @hidden */\nfunction always(x) { return () => x; }\n/** @hidden */\nfunction any(xs, f) {\n    for (var i = 0, x; i < xs.length; i++) {\n        x = xs[i];\n        if (f(x)) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @hidden */\nfunction bind(fn, me) {\n    return function () { return fn.apply(me, arguments); };\n}\n/** @hidden */\nfunction contains(xs, x) { return indexOf(xs, x) !== -1; }\n/** @hidden */\nfunction each(xs, f) {\n    for (var key in xs) {\n        if (Object.prototype.hasOwnProperty.call(xs, key)) {\n            var value = xs[key];\n            f(key, value);\n        }\n    }\n}\n/** @hidden */\nfunction empty(xs) { return xs.length === 0; }\n/** @hidden */\nfunction filter(f, xs) {\n    var filtered = [];\n    for (var i = 0, x; i < xs.length; i++) {\n        x = xs[i];\n        if (f(x)) {\n            filtered.push(x);\n        }\n    }\n    return filtered;\n}\n/** @hidden */\nfunction flatMap(f, xs) {\n    return fold(xs, [], (function (ys, x) {\n        return ys.concat(f(x));\n    }));\n}\n/** @hidden */\nfunction flip(f) {\n    return (a, b) => f(b, a);\n}\n/** @hidden */\nfunction fold(xs, seed, f) {\n    for (var i = 0, x; i < xs.length; i++) {\n        x = xs[i];\n        seed = f(seed, x);\n    }\n    return seed;\n}\n/** @hidden */\nfunction head(xs) {\n    return xs[0];\n}\n/** @hidden */\nfunction id(x) { return x; }\n/** @hidden */\nfunction indexOfDefault(xs, x) { return xs.indexOf(x); }\n/** @hidden */\nfunction indexOfFallback(xs, x) {\n    for (var i = 0, y; i < xs.length; i++) {\n        y = xs[i];\n        if (x === y) {\n            return i;\n        }\n    }\n    return -1;\n}\n/** @hidden */\nconst indexOf = Array.prototype.indexOf ? indexOfDefault : indexOfFallback;\n/** @hidden */\nfunction indexWhere(xs, f) {\n    for (var i = 0, y; i < xs.length; i++) {\n        y = xs[i];\n        if (f(y)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/** @hidden */\nfunction isFunction(f) { return typeof f === \"function\"; }\n/** @hidden */\nfunction last(xs) { return xs[xs.length - 1]; }\n/** @hidden */\nfunction map(f, xs) {\n    var result = [];\n    for (var i = 0, x; i < xs.length; i++) {\n        x = xs[i];\n        result.push(f(x));\n    }\n    return result;\n}\n/** @hidden */\nfunction negate(f) { return function (x) { return !f(x); }; }\n/** @hidden */\nfunction remove(x, xs) {\n    var i = indexOf(xs, x);\n    if (i >= 0) {\n        return xs.splice(i, 1);\n    }\n}\n/** @hidden */\nfunction tail(xs) {\n    return xs.slice(1, xs.length);\n}\n/** @hidden */\nfunction toArray(xs) { return (isArray(xs) ? xs : [xs]); }\n/** @hidden */\nfunction toFunction(f) {\n    if (typeof f == \"function\") {\n        return f;\n    }\n    return x => f;\n}\n/** @hidden */\nfunction toString(obj) {\n    var hasProp = {}.hasOwnProperty;\n    try {\n        recursionDepth++;\n        if (obj == null) {\n            return \"undefined\";\n        }\n        else if (isFunction(obj)) {\n            return \"function\";\n        }\n        else if (isArray(obj)) {\n            if (recursionDepth > 5) {\n                return \"[..]\";\n            }\n            return \"[\" + map(toString, obj).toString() + \"]\";\n        }\n        else if (((obj != null ? obj.toString : void 0) != null) && obj.toString !== Object.prototype.toString) {\n            return obj.toString();\n        }\n        else if (typeof obj === \"object\") {\n            if (recursionDepth > 5) {\n                return \"{..}\";\n            }\n            var results = [];\n            for (var key in obj) {\n                if (!hasProp.call(obj, key))\n                    continue;\n                let value = (function () {\n                    try {\n                        return obj[key];\n                    }\n                    catch (error) {\n                        return error;\n                    }\n                })();\n                results.push(toString(key) + \":\" + toString(value));\n            }\n            return \"{\" + results + \"}\";\n        }\n        else {\n            return obj;\n        }\n    }\n    finally {\n        recursionDepth--;\n    }\n}\n/** @hidden */\nfunction without(x, xs) {\n    return filter((function (y) { return y !== x; }), xs);\n}\nvar _ = {\n    indexOf,\n    indexWhere,\n    head,\n    always,\n    negate,\n    empty,\n    tail,\n    filter,\n    map,\n    each,\n    toArray,\n    contains,\n    id,\n    last,\n    all,\n    any,\n    without,\n    remove,\n    fold,\n    flatMap,\n    bind,\n    isFunction,\n    toFunction,\n    toString\n};\nvar recursionDepth = 0;\n\n/**\n * Reply for \"more data, please\".\n */\nconst more = undefined;\n/**\n * Reply for \"no more data, please\".\n */\nconst noMore = \"<no-more>\";\n\n/** @hidden */\nfunction assert(message, condition) {\n    if (!condition) {\n        throw new Error(message);\n    }\n}\n/** @hidden */\nfunction assertEventStream(event) {\n    if (!(event != null ? event._isEventStream : void 0)) {\n        throw new Error(\"not an EventStream : \" + event);\n    }\n}\n/** @hidden */\nfunction assertObservable(observable) {\n    if (!(observable != null ? observable._isObservable : void 0)) {\n        throw new Error(\"not an Observable : \" + observable);\n    }\n}\n/** @hidden */\nfunction assertFunction(f) {\n    return assert(\"not a function : \" + f, _.isFunction(f));\n}\n/** @hidden */\nfunction assertArray(xs) {\n    if (!isArray(xs)) {\n        throw new Error(\"not an array : \" + xs);\n    }\n}\n/** @hidden */\nfunction assertNoArguments(args) {\n    return assert(\"no arguments supported\", args.length === 0);\n}\n\n/** @hidden */\nconst defaultScheduler = {\n    setTimeout(f, d) { return setTimeout(f, d); },\n    setInterval(f, i) { return setInterval(f, i); },\n    clearInterval(id) { return clearInterval(id); },\n    clearTimeout(id) { return clearTimeout(id); },\n    now() { return new Date().getTime(); }\n};\nconst GlobalScheduler = {\n    scheduler: defaultScheduler\n};\nfunction getScheduler() {\n    return GlobalScheduler.scheduler;\n}\nfunction setScheduler(newScheduler) {\n    GlobalScheduler.scheduler = newScheduler;\n}\n\nvar rootEvent = undefined;\nvar waiterObs = [];\nvar waiters = {};\nvar aftersStack = [];\nvar aftersStackHeight = 0;\nvar flushed = {};\nvar processingAfters = false;\nfunction toString$1() {\n    return _.toString({ rootEvent, processingAfters, waiterObs, waiters, aftersStack, aftersStackHeight, flushed });\n}\nfunction ensureStackHeight(h) {\n    if (h <= aftersStackHeight)\n        return;\n    if (!aftersStack[h - 1]) {\n        aftersStack[h - 1] = [[], 0];\n    }\n    aftersStackHeight = h;\n}\nfunction isInTransaction() {\n    return rootEvent !== undefined;\n}\nfunction soonButNotYet(obs, f) {\n    if (rootEvent) {\n        // If in transaction -> perform within transaction\n        //console.log('in tx')\n        whenDoneWith(obs, f);\n    }\n    else {\n        // Otherwise -> perform with timeout\n        //console.log('with timeout')\n        GlobalScheduler.scheduler.setTimeout(f, 0);\n    }\n}\nfunction afterTransaction(obs, f) {\n    if (rootEvent || processingAfters) {\n        ensureStackHeight(1);\n        var stackIndexForThisObs = 0;\n        while (stackIndexForThisObs < aftersStackHeight - 1) {\n            if (containsObs(obs, aftersStack[stackIndexForThisObs][0])) {\n                // this observable is already being processed at this stack index -> use this index\n                break;\n            }\n            stackIndexForThisObs++;\n        }\n        var listFromStack = aftersStack[stackIndexForThisObs][0];\n        listFromStack.push([obs, f]);\n        if (!rootEvent) {\n            processAfters(); // wouldn't be called otherwise\n        }\n    }\n    else {\n        return f();\n    }\n}\nfunction containsObs(obs, aftersList) {\n    for (var i = 0; i < aftersList.length; i++) {\n        if (aftersList[i][0].id == obs.id)\n            return true;\n    }\n    return false;\n}\nfunction processAfters() {\n    let stackSizeAtStart = aftersStackHeight;\n    if (!stackSizeAtStart)\n        return;\n    let isRoot = !processingAfters;\n    processingAfters = true;\n    try {\n        while (aftersStackHeight >= stackSizeAtStart) { // to prevent sinking to levels started by others\n            var topOfStack = aftersStack[aftersStackHeight - 1];\n            if (!topOfStack)\n                throw new Error(\"Unexpected stack top: \" + topOfStack);\n            var [topAfters, index] = topOfStack;\n            if (index < topAfters.length) {\n                var [, after] = topAfters[index];\n                topOfStack[1]++; // increase index already here to indicate that this level is being processed\n                ensureStackHeight(aftersStackHeight + 1); // to ensure there's a new level for recursively added afters\n                var callSuccess = false;\n                try {\n                    after();\n                    callSuccess = true;\n                    while (aftersStackHeight > stackSizeAtStart && aftersStack[aftersStackHeight - 1][0].length == 0) {\n                        aftersStackHeight--;\n                    }\n                }\n                finally {\n                    if (!callSuccess) {\n                        aftersStack = [];\n                        aftersStackHeight = 0; // reset state to prevent stale updates after error\n                    }\n                }\n            }\n            else {\n                topOfStack[0] = [];\n                topOfStack[1] = 0; // reset this level\n                break;\n            }\n        }\n    }\n    finally {\n        if (isRoot)\n            processingAfters = false;\n    }\n}\nfunction whenDoneWith(obs, f) {\n    if (rootEvent) {\n        var obsWaiters = waiters[obs.id];\n        if (obsWaiters === undefined) {\n            obsWaiters = waiters[obs.id] = [f];\n            return waiterObs.push(obs);\n        }\n        else {\n            return obsWaiters.push(f);\n        }\n    }\n    else {\n        return f();\n    }\n}\nfunction flush() {\n    while (waiterObs.length > 0) {\n        flushWaiters(0, true);\n    }\n    flushed = {};\n}\nfunction flushWaiters(index, deps) {\n    var obs = waiterObs[index];\n    var obsId = obs.id;\n    var obsWaiters = waiters[obsId];\n    waiterObs.splice(index, 1);\n    delete waiters[obsId];\n    if (deps && waiterObs.length > 0) {\n        flushDepsOf(obs);\n    }\n    for (var i = 0, f; i < obsWaiters.length; i++) {\n        f = obsWaiters[i];\n        f();\n    }\n}\nfunction flushDepsOf(obs) {\n    if (flushed[obs.id])\n        return;\n    var deps = obs.internalDeps();\n    for (var i = 0, dep; i < deps.length; i++) {\n        dep = deps[i];\n        flushDepsOf(dep);\n        if (waiters[dep.id]) {\n            var index = _.indexOf(waiterObs, dep);\n            flushWaiters(index, false);\n        }\n    }\n    flushed[obs.id] = true;\n}\nfunction inTransaction(event, context, f, args) {\n    if (rootEvent) {\n        //console.log(\"in tx\")\n        return f.apply(context, args);\n    }\n    else {\n        //console.log(\"start tx\")\n        rootEvent = event;\n        try {\n            var result = f.apply(context, args);\n            //console.log(\"done with tx\")\n            flush();\n        }\n        finally {\n            rootEvent = undefined;\n            processAfters();\n        }\n        return result;\n    }\n}\nfunction currentEventId() {\n    return rootEvent ? rootEvent.id : undefined;\n}\nfunction wrappedSubscribe(obs, subscribe, sink) {\n    assertFunction(sink);\n    let unsubd = false;\n    let shouldUnsub = false;\n    let doUnsub = () => {\n        shouldUnsub = true;\n    };\n    let unsub = () => {\n        unsubd = true;\n        doUnsub();\n    };\n    doUnsub = subscribe(function (event) {\n        afterTransaction(obs, function () {\n            if (!unsubd) {\n                var reply = sink(event);\n                if (reply === noMore) {\n                    unsub();\n                }\n            }\n        });\n        return more;\n    });\n    if (shouldUnsub) {\n        doUnsub();\n    }\n    return unsub;\n}\nfunction hasWaiters() { return waiterObs.length > 0; }\nvar UpdateBarrier = { toString: toString$1, whenDoneWith, hasWaiters, inTransaction, currentEventId, wrappedSubscribe, afterTransaction, soonButNotYet, isInTransaction };\n\nclass Desc {\n    constructor(context, method, args = []) {\n        /** @hidden */\n        this._isDesc = true;\n        //assert(\"context missing\", context)\n        //assert(\"method missing\", method)\n        //assert(\"args missing\", args)\n        this.context = context;\n        this.method = method;\n        this.args = args;\n    }\n    deps() {\n        if (!this.cachedDeps) {\n            this.cachedDeps = findDeps([this.context].concat(this.args));\n        }\n        return this.cachedDeps;\n    }\n    toString() {\n        let args = _.map(_.toString, this.args);\n        return _.toString(this.context) + \".\" + _.toString(this.method) + \"(\" + args + \")\";\n    }\n}\n/** @hidden */\nfunction describe(context, method, ...args) {\n    const ref = context || method;\n    if (ref && ref._isDesc) {\n        return context || method;\n    }\n    else {\n        return new Desc(context, method, args);\n    }\n}\n/** @hidden */\nfunction findDeps(x) {\n    if (isArray(x)) {\n        return _.flatMap(findDeps, x);\n    }\n    else if (isObservable(x)) {\n        return [x];\n    }\n    else if ((typeof x !== \"undefined\" && x !== null) ? x._isSource : undefined) {\n        return [x.obs];\n    }\n    else {\n        return [];\n    }\n}\n\n/** @hidden */\nconst nullSink = () => more;\n/** @hidden */\nconst nullVoidSink = () => more;\n\n/** @hidden */\nfunction withStateMachine(initState, f, src) {\n    return src.transform(withStateMachineT(initState, f), new Desc(src, \"withStateMachine\", [initState, f]));\n}\nfunction withStateMachineT(initState, f) {\n    let state = initState;\n    return (event, sink) => {\n        var fromF = f(state, event);\n        var [newState, outputs] = fromF;\n        state = newState;\n        var reply = more;\n        for (var i = 0; i < outputs.length; i++) {\n            let output = outputs[i];\n            reply = sink(output);\n            if (reply === noMore) {\n                return reply;\n            }\n        }\n        return reply;\n    };\n}\n\n/** @hidden */\nclass Some {\n    constructor(value) {\n        this._isSome = true;\n        this.isDefined = true;\n        this.value = value;\n    }\n    getOrElse(arg) { return this.value; }\n    get() { return this.value; }\n    filter(f) {\n        if (f(this.value)) {\n            return new Some(this.value);\n        }\n        else {\n            return None;\n        }\n    }\n    map(f) {\n        return new Some(f(this.value));\n    }\n    forEach(f) {\n        f(this.value);\n    }\n    toArray() { return [this.value]; }\n    inspect() { return \"Some(\" + this.value + \")\"; }\n    toString() { return this.inspect(); }\n}\n/** @hidden */\nconst None = {\n    _isNone: true,\n    getOrElse(value) { return value; },\n    get() { throw new Error(\"None.get()\"); },\n    filter() { return None; },\n    map() { return None; },\n    forEach() { },\n    isDefined: false,\n    toArray() { return []; },\n    inspect() { return \"None\"; },\n    toString() { return this.inspect(); }\n};\nfunction none() { return None; }\nfunction toOption(v) {\n    if (v && (v._isSome || v._isNone)) {\n        return v;\n    }\n    else {\n        return new Some(v);\n    }\n}\nfunction isNone(object) {\n    return ((typeof object !== \"undefined\" && object !== null) ? object._isNone : false);\n}\n\n/** @hidden */\nvar eventIdCounter = 0;\n/**\n * Base class for all events passed through [EventStreams](eventstream.html) and [Properties](property.html).\n */\nclass Event {\n    constructor() {\n        this.id = ++eventIdCounter;\n        /** @hidden */\n        this.isEvent = true;\n        /** @hidden */\n        this._isEvent = true;\n        this.isEnd = false;\n        this.isInitial = false;\n        this.isNext = false;\n        this.isError = false;\n        this.hasValue = false;\n    }\n    /** @hidden */\n    filter(f) { return true; }\n    /** @hidden */\n    inspect() { return this.toString(); }\n    /** @hidden */\n    log() { return this.toString(); }\n    /** @hidden */\n    toNext() { return this; }\n}\n/**\n *  Base class for all [Events](event.html) carrying a value.\n *\n *  Can be distinguished from other events using [hasValue](../globals.html#hasvalue)\n **/\nclass Value extends Event {\n    constructor(value) {\n        super();\n        this.hasValue = true;\n        if (value instanceof Event) {\n            throw new Error$1(\"Wrapping an event inside other event\");\n        }\n        this.value = value;\n    }\n    /** @hidden */\n    fmap(f) {\n        return this.apply(f(this.value));\n    }\n    /** @hidden */\n    filter(f) { return f(this.value); }\n    /** @hidden */\n    toString() { return _.toString(this.value); }\n    //toString(): string { return \"<value \" + this.id + \">\" + _.toString(this.value) }\n    /** @hidden */\n    log() { return this.value; }\n}\n/**\n *  Indicates a new value in an [EventStream](eventstream.html) or a [Property](property.html).\n *\n *  Can be distinguished from other events using [isNext](../globals.html#isnext)\n */\nclass Next extends Value {\n    constructor(value) {\n        super(value);\n        this.isNext = true;\n        /** @hidden */\n        this._isNext = true; // some compatibility stuff?\n    }\n    /** @hidden */\n    apply(value) { return new Next(value); }\n}\n/**\n * An event carrying the initial value of a [Property](classes/property.html). This event can be emitted by a property\n * immediately when subscribing to it.\n *\n * Can be distinguished from other events using [isInitial](../globals.html#isinitial)\n */\nclass Initial extends Value {\n    constructor(value) {\n        super(value);\n        this.isInitial = true;\n        /** @hidden */\n        this._isInitial = true;\n    }\n    /** @hidden */\n    apply(value) { return new Initial(value); }\n    /** @hidden */\n    toNext() { return new Next(this.value); }\n}\n/**\n * Base class for events not carrying a value.\n */\nclass NoValue extends Event {\n    constructor() {\n        super(...arguments);\n        this.hasValue = false;\n    }\n    /** @hidden */\n    fmap(f) {\n        return this;\n    }\n}\n/**\n * An event that indicates the end of an [EventStream](classes/eventstream.html) or a [Property](classes/property.html).\n * No more events can be emitted after this one.\n *\n * Can be distinguished from other events using [isEnd](../globals.html#isend)\n */\nclass End extends NoValue {\n    constructor() {\n        super(...arguments);\n        this.isEnd = true;\n    }\n    /** @hidden */\n    toString() { return \"<end>\"; }\n}\n/**\n *  An event carrying an error. You can use [onError](observable.html#onerror) to subscribe to errors.\n */\nclass Error$1 extends NoValue {\n    constructor(error) {\n        super();\n        this.isError = true;\n        this.error = error;\n    }\n    /** @hidden */\n    toString() {\n        return \"<error> \" + _.toString(this.error);\n    }\n}\n/** @hidden */\nfunction initialEvent(value) { return new Initial(value); }\n/** @hidden */\nfunction nextEvent(value) { return new Next(value); }\n/** @hidden */\nfunction endEvent() { return new End(); }\n/** @hidden */\nfunction toEvent(x) {\n    if (x && x._isEvent) {\n        return x;\n    }\n    else {\n        return nextEvent(x);\n    }\n}\n/**\n * Returns true if the given object is an [Event](classes/event.html).\n */\nfunction isEvent(e) {\n    return e && e._isEvent;\n}\n/**\n * Returns true if the given event is an [Initial](classes/initial.html) value of a [Property](classes/property.html).\n */\nfunction isInitial(e) {\n    return e && e._isInitial;\n}\n/**\n * Returns true if the given event is an [Error](classes/error.html) event of an [Observable](classes/observable.html).\n */\nfunction isError(e) {\n    return e.isError;\n}\n/**\n * Returns true if the given event is a [Value](classes/value.html), i.e. a [Next](classes/next.html) or\n * an [Initial](classes/error.html) value of an [Observable](classes/observable.html).\n */\nfunction hasValue(e) {\n    return e.hasValue;\n}\n/**\n * Returns true if the given event is an [End](classes/end.html)\n */\nfunction isEnd(e) {\n    return e.isEnd;\n}\n/**\n * Returns true if the given event is a [Next](classes/next.html)\n */\nfunction isNext(e) {\n    return e.isNext;\n}\n\n/** @hidden */\nfunction equals(a, b) { return a === b; }\n/** @hidden */\nfunction skipDuplicates(src, isEqual = equals) {\n    let desc = new Desc(src, \"skipDuplicates\", []);\n    return withStateMachine(none(), function (prev, event) {\n        if (!hasValue(event)) {\n            return [prev, [event]];\n        }\n        else if (event.isInitial || isNone(prev) || !isEqual(prev.get(), event.value)) {\n            return [new Some(event.value), [event]];\n        }\n        else {\n            return [prev, []];\n        }\n    }, src).withDesc(desc);\n}\n\n/** @hidden */\nfunction take(count, src, desc) {\n    return src.transform(takeT(count), desc || new Desc(src, \"take\", [count]));\n}\n/** @hidden */\nfunction takeT(count) {\n    return (e, sink) => {\n        if (!e.hasValue) {\n            return sink(e);\n        }\n        else {\n            count--;\n            if (count > 0) {\n                return sink(e);\n            }\n            else {\n                if (count === 0) {\n                    sink(e);\n                }\n                sink(endEvent());\n                return noMore;\n            }\n        }\n    };\n}\n\n/** @hidden */\nfunction log(args, src) {\n    src.subscribe(function (event) {\n        if (typeof console !== \"undefined\" && typeof console.log === \"function\") {\n            console.log(...args.concat([event.log()]));\n        }\n        return more;\n    });\n}\n\n/** @hidden */\nfunction doLogT(args) {\n    return (event, sink) => {\n        if (typeof console !== \"undefined\" && console !== null && typeof console.log === \"function\") {\n            console.log(...args.concat([event.log()]));\n        }\n        return sink(event);\n    };\n}\n\n/** @hidden */\nfunction doErrorT(f) {\n    return (event, sink) => {\n        if (isError(event)) {\n            f(event.error);\n        }\n        return sink(event);\n    };\n}\n\n/** @hidden */\nfunction doActionT(f) {\n    return (event, sink) => {\n        if (hasValue(event)) {\n            f(event.value);\n        }\n        return sink(event);\n    };\n}\n\n/** @hidden */\nfunction doEndT(f) {\n    return (event, sink) => {\n        if (isEnd(event)) {\n            f();\n        }\n        return sink(event);\n    };\n}\n\n/** @hidden */\nfunction scan(src, seed, f) {\n    let resultProperty;\n    let acc = seed;\n    let initHandled = false;\n    const subscribe = (sink) => {\n        var initSent = false;\n        var unsub = nop;\n        var reply = more;\n        const sendInit = function () {\n            if (!initSent) {\n                initSent = initHandled = true;\n                reply = sink(new Initial(acc));\n                if (reply === noMore) {\n                    unsub();\n                    unsub = nop;\n                }\n            }\n            return reply;\n        };\n        unsub = src.subscribeInternal(function (event) {\n            if (hasValue(event)) {\n                if (initHandled && event.isInitial) {\n                    //console.log \"skip INITIAL\"\n                    return more; // init already sent, skip this one\n                }\n                else {\n                    if (!event.isInitial) {\n                        sendInit();\n                    }\n                    initSent = initHandled = true;\n                    var prev = acc;\n                    var next = f(prev, event.value);\n                    //console.log prev , \",\", event.value, \"->\", next\n                    acc = next;\n                    return sink(event.apply(next));\n                }\n            }\n            else {\n                if (event.isEnd) {\n                    reply = sendInit();\n                }\n                if (reply !== noMore) {\n                    return sink(event);\n                }\n                return reply;\n            }\n        });\n        UpdateBarrier.whenDoneWith(resultProperty, sendInit);\n        return unsub;\n    };\n    return resultProperty = new Property(new Desc(src, \"scan\", [seed, f]), subscribe);\n}\n\n/** @hidden */\nfunction mapEndT(f) {\n    let theF = _.toFunction(f);\n    return function (event, sink) {\n        if (isEnd(event)) {\n            sink(nextEvent(theF(event)));\n            sink(endEvent());\n            return noMore;\n        }\n        else {\n            return sink(event);\n        }\n    };\n}\n\n/** @hidden */\nfunction mapErrorT(f) {\n    let theF = _.toFunction(f);\n    return function (event, sink) {\n        if (isError(event)) {\n            return sink(nextEvent(theF(event.error)));\n        }\n        else {\n            return sink(event);\n        }\n    };\n}\n\n/** @hidden */\nfunction skipErrors(src) {\n    return src.transform(function (event, sink) {\n        if (isError(event)) {\n            return more;\n        }\n        else {\n            return sink(event);\n        }\n    }, new Desc(src, \"skipErrors\", []));\n}\n\n/** @hidden */\nfunction last$1(src) {\n    var lastEvent;\n    return src.transform(function (event, sink) {\n        if (isEnd(event)) {\n            if (lastEvent) {\n                sink(lastEvent);\n            }\n            sink(endEvent());\n            return noMore;\n        }\n        else if (hasValue(event)) {\n            lastEvent = event;\n            return more;\n        }\n        else {\n            return sink(event);\n        }\n    }).withDesc(new Desc(src, \"last\", []));\n}\n\n/** @hidden */\nclass CompositeUnsubscribe {\n    constructor(ss = []) {\n        this.unsubscribed = false;\n        this.unsubscribe = _.bind(this.unsubscribe, this);\n        this.unsubscribed = false;\n        this.subscriptions = [];\n        this.starting = [];\n        for (var i = 0, s; i < ss.length; i++) {\n            s = ss[i];\n            this.add(s);\n        }\n    }\n    add(subscription) {\n        if (!this.unsubscribed) {\n            var ended = false;\n            var unsub = nop;\n            this.starting.push(subscription);\n            var unsubMe = () => {\n                if (this.unsubscribed) {\n                    return;\n                }\n                ended = true;\n                this.remove(unsub);\n                _.remove(subscription, this.starting);\n            };\n            unsub = subscription(this.unsubscribe, unsubMe);\n            if (!(this.unsubscribed || ended)) {\n                this.subscriptions.push(unsub);\n            }\n            else {\n                unsub();\n            }\n            _.remove(subscription, this.starting);\n        }\n    }\n    remove(unsub) {\n        if (this.unsubscribed) {\n            return;\n        }\n        if ((_.remove(unsub, this.subscriptions)) !== undefined) {\n            return unsub();\n        }\n    }\n    unsubscribe() {\n        if (this.unsubscribed) {\n            return;\n        }\n        this.unsubscribed = true;\n        var iterable = this.subscriptions;\n        for (var i = 0; i < iterable.length; i++) {\n            iterable[i]();\n        }\n        this.subscriptions = [];\n        this.starting = [];\n    }\n    count() {\n        if (this.unsubscribed) {\n            return 0;\n        }\n        return this.subscriptions.length + this.starting.length;\n    }\n    empty() {\n        return this.count() === 0;\n    }\n}\n\n/** @hidden */\nfunction streamSubscribeToPropertySubscribe(initValue, streamSubscribe) {\n    //assertFunction(streamSubscribe)\n    return function (sink) {\n        var initSent = false;\n        var subbed = false;\n        var unsub = nop;\n        var reply = more;\n        var sendInit = function () {\n            if (!initSent) {\n                return initValue.forEach(function (value) {\n                    initSent = true;\n                    reply = sink(new Initial(value));\n                    if (reply === noMore) {\n                        unsub();\n                        unsub = nop;\n                        return nop;\n                    }\n                });\n            }\n        };\n        unsub = streamSubscribe(function (event) {\n            if (event instanceof Value) {\n                if (event.isInitial && !subbed) {\n                    initValue = new Some(event.value);\n                    return more;\n                }\n                else {\n                    if (!event.isInitial) {\n                        sendInit();\n                    }\n                    initSent = true;\n                    initValue = new Some(event.value);\n                    return sink(event);\n                }\n            }\n            else {\n                if (event.isEnd) {\n                    reply = sendInit();\n                }\n                if (reply !== noMore) {\n                    return sink(event);\n                }\n                return reply;\n            }\n        });\n        subbed = true;\n        sendInit();\n        return unsub;\n    };\n}\n\n/** @hidden */\nfunction propertyFromStreamSubscribe(desc, subscribe) {\n    assertFunction(subscribe);\n    return new Property(desc, streamSubscribeToPropertySubscribe(none(), subscribe));\n}\n\n/**\n Creates an EventStream that delivers the given\n single value for the first subscriber. The stream will end immediately\n after this value. You can also send an [`Bacon.Error`](#bacon-error) event instead of a\n value: `Bacon.once(new Bacon.Error(\"fail\"))`.\n\n @param   value   the value or event to emit\n @typeparam V Type of stream elements\n */\nfunction once(value) {\n    const s = new EventStream(new Desc(\"Bacon\", \"once\", [value]), function (sink) {\n        UpdateBarrier.soonButNotYet(s, function () {\n            sink(toEvent(value));\n            sink(endEvent());\n        });\n        return nop;\n    });\n    return s;\n}\n\n/** @hidden */\nfunction flatMap_(spawner, src, params = {}) {\n    const root = src;\n    const rootDep = [root];\n    const childDeps = [];\n    const isProperty = src._isProperty;\n    const ctor = (isProperty ? propertyFromStreamSubscribe : newEventStreamAllowSync);\n    let initialSpawned = false;\n    const desc = params.desc || new Desc(src, \"flatMap_\", [spawner]);\n    const result = ctor(desc, function (sink) {\n        const composite = new CompositeUnsubscribe();\n        const queue = [];\n        function spawn(event) {\n            if (isProperty && event.isInitial) {\n                if (initialSpawned) {\n                    return more;\n                }\n                initialSpawned = true;\n            }\n            const child = makeObservable(spawner(event));\n            childDeps.push(child);\n            return composite.add(function (unsubAll, unsubMe) {\n                return child.subscribeInternal(function (event) {\n                    if (event.isEnd) {\n                        _.remove(child, childDeps);\n                        checkQueue();\n                        checkEnd(unsubMe);\n                        return noMore;\n                    }\n                    else {\n                        event = event.toNext(); // To support Property as the spawned stream\n                        const reply = sink(event);\n                        if (reply === noMore) {\n                            unsubAll();\n                        }\n                        return reply;\n                    }\n                });\n            });\n        }\n        function checkQueue() {\n            const event = queue.shift();\n            if (event) {\n                spawn(event);\n            }\n        }\n        function checkEnd(unsub) {\n            unsub();\n            if (composite.empty()) {\n                return sink(endEvent());\n            }\n            return more;\n        }\n        composite.add(function (__, unsubRoot) {\n            return root.subscribeInternal(function (event) {\n                if (event.isEnd) {\n                    return checkEnd(unsubRoot);\n                }\n                else if (event.isError && !params.mapError) {\n                    return sink(event);\n                }\n                else if (params.firstOnly && composite.count() > 1) {\n                    return more;\n                }\n                else {\n                    if (composite.unsubscribed) {\n                        return noMore;\n                    }\n                    if (params.limit && composite.count() > params.limit) {\n                        queue.push(event);\n                    }\n                    else {\n                        spawn(event);\n                    }\n                    return more;\n                }\n            });\n        });\n        return composite.unsubscribe;\n    });\n    result.internalDeps = function () {\n        if (childDeps.length) {\n            return rootDep.concat(childDeps);\n        }\n        else {\n            return rootDep;\n        }\n    };\n    return result;\n}\n/** @hidden */\nfunction handleEventValueWith(f) {\n    if (typeof f == \"function\") {\n        return ((event) => {\n            if (hasValue(event)) {\n                return f(event.value);\n            }\n            return event;\n        });\n    }\n    return ((event) => f);\n}\n/** @hidden */\nfunction makeObservable(x) {\n    if (isObservable(x)) {\n        return x;\n    }\n    else {\n        return once(x);\n    }\n}\n\n/** @hidden */\nfunction flatMapEvent(src, f) {\n    return flatMap_(f, src, {\n        mapError: true,\n        desc: new Desc(src, \"flatMapEvent\", [f])\n    });\n}\n\n/** @hidden */\nfunction endAsValue(src) {\n    return src.transform((event, sink) => {\n        if (isEnd(event)) {\n            sink(nextEvent({}));\n            sink(endEvent());\n            return noMore;\n        }\n        return more;\n    });\n}\n\n/** @hidden */\nfunction endOnError(src, predicate = x => true) {\n    return src.transform((event, sink) => {\n        if (isError(event) && predicate(event.error)) {\n            sink(event);\n            return sink(endEvent());\n        }\n        else {\n            return sink(event);\n        }\n    }, new Desc(src, \"endOnError\", []));\n}\n\n/** @hidden */\nclass Source {\n    constructor(obs, sync) {\n        this._isSource = true;\n        this.flatten = true;\n        this.ended = false;\n        this.obs = obs;\n        this.sync = sync;\n    }\n    subscribe(sink) {\n        return this.obs.subscribeInternal(sink);\n    }\n    toString() {\n        return this.obs.toString();\n    }\n    markEnded() {\n        this.ended = true;\n    }\n    mayHave(count) { return true; }\n}\n/** @hidden */\nclass DefaultSource extends Source {\n    consume() {\n        return this.value;\n    }\n    push(x) {\n        this.value = x;\n    }\n    hasAtLeast(c) {\n        return !!this.value;\n    }\n}\n/** @hidden */\nclass ConsumingSource extends Source {\n    constructor(obs, sync) {\n        super(obs, sync);\n        this.flatten = false;\n        this.queue = [];\n    }\n    consume() {\n        return this.queue.shift();\n    }\n    push(x) {\n        this.queue.push(x);\n    }\n    mayHave(count) {\n        return !this.ended || this.queue.length >= count;\n    }\n    hasAtLeast(count) {\n        return this.queue.length >= count;\n    }\n}\n/** @hidden */\nclass BufferingSource extends Source {\n    constructor(obs) {\n        super(obs, true);\n        this.queue = [];\n    }\n    consume() {\n        const values = this.queue;\n        this.queue = [];\n        return {\n            value: values\n        };\n    }\n    push(x) {\n        return this.queue.push(x.value);\n    }\n    hasAtLeast(count) {\n        return true;\n    }\n}\n/** @hidden */\nfunction isTrigger(s) {\n    if (s == null)\n        return false;\n    if (s._isSource) {\n        return s.sync;\n    }\n    else {\n        return s._isEventStream;\n    }\n}\n/** @hidden */\nfunction fromObservable(s) {\n    if (s != null && s._isSource) {\n        return s;\n    }\n    else if (s != null && s._isProperty) {\n        return new DefaultSource(s, false);\n    }\n    else {\n        return new ConsumingSource(s, true);\n    }\n}\n\n/**\n Creates an EventStream that immediately ends.\n @typeparam V Type of stream elements\n */\nfunction never() {\n    return new EventStream(describe(\"Bacon\", \"never\"), (sink) => {\n        sink(endEvent());\n        return nop;\n    });\n}\n\n/**\n The `when` method provides a generalization of the [`zip`](classes/observable.html#zip) function. While zip\n synchronizes events from multiple streams pairwse, the join patterns used in `when` allow\n the implementation of more advanced synchronization patterns.\n\n Consider implementing a game with discrete time ticks. We want to\n handle key-events synchronized on tick-events, with at most one key\n event handled per tick. If there are no key events, we want to just\n process a tick.\n\n ```js\n Bacon.when(\n [tick, keyEvent, function(_, k) { handleKeyEvent(k); return handleTick(); }],\n [tick, handleTick])\n ```\n\n Order is important here. If the [tick] patterns had been written\n first, this would have been tried first, and preferred at each tick.\n\n Join patterns are indeed a generalization of zip, and for EventStreams, zip is\n equivalent to a single-rule join pattern. The following observables\n have the same output, assuming that all sources are EventStreams.\n\n ```js\n Bacon.zipWith(a,b,c, combine)\n Bacon.when([a,b,c], combine)\n ```\n\n Note that [`Bacon.when`](#bacon-when) does not trigger updates for events from Properties though;\n if you use a Property in your pattern, its value will be just sampled when all the\n other sources (EventStreams) have a value. This is useful when you need a value of a Property\n in your calculations. If you want your pattern to fire for a Property too, you can\n convert it into an EventStream using [`property.changes()`](#property-changes) or [`property.toEventStream()`](#property-toeventstream)\n\n * @param {Pattern<O>} patterns Join patterns\n * @typeparam O result type\n */\nfunction when(...patterns) {\n    return when_(newEventStream, patterns);\n}\n/** @hidden */\nfunction whenP(...patterns) {\n    return when_(propertyFromStreamSubscribe, patterns);\n}\n/** @hidden */\nfunction when_(ctor, patterns) {\n    if (patterns.length === 0) {\n        return never();\n    }\n    var [sources, ixPats] = processRawPatterns(extractRawPatterns(patterns));\n    if (!sources.length) {\n        return never();\n    }\n    var needsBarrier = (any(sources, (s) => s.flatten)) && containsDuplicateDeps(map(((s) => s.obs), sources));\n    var desc = new Desc(\"Bacon\", \"when\", Array.prototype.slice.call(patterns));\n    var resultStream = ctor(desc, function (sink) {\n        var triggers = [];\n        var ends = false;\n        function match(p) {\n            for (var i = 0; i < p.ixs.length; i++) {\n                let ix = p.ixs[i];\n                if (!sources[ix.index].hasAtLeast(ix.count)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        function cannotMatch(p) {\n            for (var i = 0; i < p.ixs.length; i++) {\n                let ix = p.ixs[i];\n                if (!sources[ix.index].mayHave(ix.count)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function nonFlattened(trigger) { return !trigger.source.flatten; }\n        function part(source) {\n            return function (unsubAll) {\n                function flushLater() {\n                    return UpdateBarrier.whenDoneWith(resultStream, flush);\n                }\n                function flushWhileTriggers() {\n                    var trigger;\n                    if ((trigger = triggers.pop()) !== undefined) {\n                        var reply = more;\n                        for (var i = 0, p; i < ixPats.length; i++) {\n                            p = ixPats[i];\n                            if (match(p)) {\n                                const values = [];\n                                for (var j = 0; j < p.ixs.length; j++) {\n                                    let event = sources[p.ixs[j].index].consume();\n                                    if (!event)\n                                        throw new Error(\"Event was undefined\");\n                                    values.push(event.value);\n                                }\n                                //console.log(\"flushing values\", values)\n                                let applied = p.f.apply(null, values);\n                                //console.log('sinking', applied)\n                                reply = sink((trigger).e.apply(applied));\n                                if (triggers.length) {\n                                    triggers = filter(nonFlattened, triggers);\n                                }\n                                if (reply === noMore) {\n                                    return reply;\n                                }\n                                else {\n                                    return flushWhileTriggers();\n                                }\n                            }\n                        }\n                    }\n                    return more;\n                }\n                function flush() {\n                    //console.log \"flushing\", _.toString(resultStream)\n                    var reply = flushWhileTriggers();\n                    if (ends) {\n                        //console.log \"ends detected\"\n                        if (all(sources, cannotSync) || all(ixPats, cannotMatch)) {\n                            //console.log \"actually ending\"\n                            reply = noMore;\n                            sink(endEvent());\n                        }\n                    }\n                    if (reply === noMore) {\n                        unsubAll();\n                    }\n                }\n                return source.subscribe(function (e) {\n                    var reply = more;\n                    if (e.isEnd) {\n                        //console.log \"got end\"\n                        ends = true;\n                        source.markEnded();\n                        flushLater();\n                    }\n                    else if (e.isError) {\n                        reply = sink(e);\n                    }\n                    else {\n                        let valueEvent = e;\n                        //console.log \"got value\", e.value\n                        source.push(valueEvent);\n                        if (source.sync) {\n                            //console.log \"queuing\", e.toString(), toString(resultStream)\n                            triggers.push({ source: source, e: valueEvent });\n                            if (needsBarrier || UpdateBarrier.hasWaiters()) {\n                                flushLater();\n                            }\n                            else {\n                                flush();\n                            }\n                        }\n                    }\n                    if (reply === noMore) {\n                        unsubAll();\n                    }\n                    return reply;\n                });\n            };\n        }\n        return new CompositeUnsubscribe(map(part, sources)).unsubscribe;\n    });\n    return resultStream;\n}\nfunction processRawPatterns(rawPatterns) {\n    var sources = [];\n    var pats = [];\n    for (let i = 0; i < rawPatterns.length; i++) {\n        let [patSources, f] = rawPatterns[i];\n        var pat = { f, ixs: [] };\n        var triggerFound = false;\n        for (var j = 0, s; j < patSources.length; j++) {\n            s = patSources[j];\n            var index = indexOf(sources, s);\n            if (!triggerFound) {\n                triggerFound = isTrigger(s);\n            }\n            if (index < 0) {\n                sources.push(s);\n                index = sources.length - 1;\n            }\n            for (var k = 0; k < pat.ixs.length; k++) {\n                let ix = pat.ixs[k];\n                if (ix.index === index) {\n                    ix.count++;\n                }\n            }\n            pat.ixs.push({ index: index, count: 1 });\n        }\n        if (patSources.length > 0 && !triggerFound) {\n            throw new Error(\"At least one EventStream required, none found in \" + patSources);\n        }\n        if (patSources.length > 0) {\n            pats.push(pat);\n        }\n    }\n    return [map(fromObservable /* sorry */, sources), pats];\n}\nfunction extractLegacyPatterns(sourceArgs) {\n    var i = 0;\n    var len = sourceArgs.length;\n    var rawPatterns = [];\n    while (i < len) {\n        let patSources = toArray(sourceArgs[i++]);\n        let f = toFunction(sourceArgs[i++]);\n        rawPatterns.push([patSources, f]);\n    }\n    var usage = \"when: expecting arguments in the form (Observable+,function)+\";\n    assert(usage, (len % 2 === 0));\n    return rawPatterns;\n}\nfunction isTypedOrRawPattern(pattern) {\n    return (pattern instanceof Array) && (!isObservable(pattern[pattern.length - 1]));\n}\nfunction isRawPattern(pattern) {\n    return pattern[0] instanceof Array;\n}\n/** @hidden */\nfunction extractRawPatterns(patterns) {\n    let rawPatterns = [];\n    for (let i = 0; i < patterns.length; i++) {\n        let pattern = patterns[i];\n        if (!isTypedOrRawPattern(pattern)) {\n            // Fallback to legacy patterns\n            return extractLegacyPatterns(patterns);\n        }\n        if (isRawPattern(pattern)) {\n            rawPatterns.push([pattern[0], toFunction(pattern[1])]);\n        }\n        else { // typed pattern, then\n            let sources = pattern.slice(0, pattern.length - 1);\n            let f = toFunction(pattern[pattern.length - 1]);\n            rawPatterns.push([sources, f]);\n        }\n    }\n    return rawPatterns;\n}\nfunction containsDuplicateDeps(observables, state = []) {\n    function checkObservable(obs) {\n        if (contains(state, obs)) {\n            return true;\n        }\n        else {\n            var deps = obs.internalDeps();\n            if (deps.length) {\n                state.push(obs);\n                return any(deps, checkObservable);\n            }\n            else {\n                state.push(obs);\n                return false;\n            }\n        }\n    }\n    return any(observables, checkObservable);\n}\nfunction cannotSync(source) {\n    return !source.sync || source.ended;\n}\n\n/** @hidden */\nfunction withLatestFromE(sampler, samplee, f) {\n    var result = when([new DefaultSource(samplee.toProperty(), false), new DefaultSource(sampler, true), flip(f)]);\n    return result.withDesc(new Desc(sampler, \"withLatestFrom\", [samplee, f]));\n}\n/** @hidden */\nfunction withLatestFromP(sampler, samplee, f) {\n    var result = whenP([new DefaultSource(samplee.toProperty(), false), new DefaultSource(sampler, true), flip(f)]);\n    return result.withDesc(new Desc(sampler, \"withLatestFrom\", [samplee, f]));\n}\n/** @hidden */\nfunction withLatestFrom(sampler, samplee, f) {\n    if (sampler instanceof Property) {\n        return withLatestFromP(sampler, samplee, f);\n    }\n    else if (sampler instanceof EventStream) {\n        return withLatestFromE(sampler, samplee, f);\n    }\n    else {\n        throw new Error(\"Unknown observable: \" + sampler);\n    }\n}\n\n/** @hidden */\nfunction map$1(src, f) {\n    if (f instanceof Property) {\n        return withLatestFrom(src, f, (a, b) => b);\n    }\n    return src.transform(mapT(f), new Desc(src, \"map\", [f]));\n}\n/** @hidden */\nfunction mapT(f) {\n    let theF = _.toFunction(f);\n    return (e, sink) => {\n        return sink(e.fmap(theF));\n    };\n}\n\n/**\n Creates a constant property with value `x`.\n */\nfunction constant(x) {\n    return new Property(new Desc(\"Bacon\", \"constant\", [x]), function (sink) {\n        sink(initialEvent(x));\n        sink(endEvent());\n        return nop;\n    });\n}\n\n/** @hidden */\nfunction argumentsToObservables(args) {\n    args = (Array.prototype.slice.call(args));\n    return _.flatMap(singleToObservables, args);\n}\nfunction singleToObservables(x) {\n    if (isObservable(x)) {\n        return [x];\n    }\n    else if (isArray(x)) {\n        return argumentsToObservables(x);\n    }\n    else {\n        return [constant(x)];\n    }\n}\n/** @hidden */\nfunction argumentsToObservablesAndFunction(args) {\n    if (_.isFunction(args[0])) {\n        return [argumentsToObservables(Array.prototype.slice.call(args, 1)), args[0]];\n    }\n    else {\n        return [argumentsToObservables(Array.prototype.slice.call(args, 0, args.length - 1)), _.last(args)];\n    }\n}\n\n/** @hidden */\nfunction groupSimultaneous(...streams) {\n    return groupSimultaneous_(argumentsToObservables(streams));\n}\n// TODO: type is not exactly correct, because different inputs may have different types.\n// Result values are arrays where each element is the list from each input observable. Type this.\n/** @hidden */\nfunction groupSimultaneous_(streams, options) {\n    let sources = _.map((stream) => new BufferingSource(stream), streams);\n    let ctor = (desc, subscribe) => new EventStream(desc, subscribe, undefined, options);\n    return when_(ctor, [sources, (function (...xs) {\n            return xs;\n        })]).withDesc(new Desc(\"Bacon\", \"groupSimultaneous\", streams));\n}\n\n/** @hidden */\nfunction awaiting(src, other) {\n    return groupSimultaneous_([src, other], allowSync)\n        .map((values) => values[1].length === 0)\n        .toProperty(false)\n        .skipDuplicates()\n        .withDesc(new Desc(src, \"awaiting\", [other]));\n}\n\n/**\n Combines Properties, EventStreams and constant values so that the result Property will have an array of the latest\n values from all sources as its value. The inputs may contain both Properties and EventStreams.\n\n\n ```js\n property = Bacon.constant(1)\n stream = Bacon.once(2)\n constant = 3\n Bacon.combineAsArray(property, stream, constant)\n # produces the value [1,2,3]\n ```\n\n * @param streams streams and properties to combine\n */\nfunction combineAsArray(...streams) {\n    streams = argumentsToObservables(streams);\n    if (streams.length) {\n        var sources = [];\n        for (var i = 0; i < streams.length; i++) {\n            let stream = (isObservable(streams[i])\n                ? streams[i]\n                : constant(streams[i]));\n            sources.push(wrap(stream));\n        }\n        return whenP([sources, (...xs) => xs]).withDesc(new Desc(\"Bacon\", \"combineAsArray\", streams));\n    }\n    else {\n        return constant([]);\n    }\n}\nfunction combineWith(...args) {\n    // TODO: untyped\n    var [streams, f] = argumentsToObservablesAndFunction(arguments);\n    var desc = new Desc(\"Bacon\", \"combineWith\", [f, ...streams]);\n    return combineAsArray(streams).map(function (values) {\n        return f(...values);\n    }).withDesc(desc);\n}\nconst combine = combineWith;\n/** @hidden */\nfunction combineTwo(left, right, f) {\n    return whenP([[wrap(left), wrap(right)], f]).withDesc(new Desc(left, \"combine\", [right, f]));\n}\nfunction wrap(obs) {\n    return new DefaultSource(obs, true);\n}\n\n/** @hidden */\nfunction skip(src, count) {\n    return src.transform((event, sink) => {\n        if (!event.hasValue) {\n            return sink(event);\n        }\n        else if (count > 0) {\n            count--;\n            return more;\n        }\n        else {\n            return sink(event);\n        }\n    }, new Desc(src, \"skip\", [count]));\n}\n\n/** @hidden */\nfunction flatMapConcat(src, f) {\n    return flatMap_(handleEventValueWith(f), src, {\n        desc: new Desc(src, \"flatMapConcat\", [f]),\n        limit: 1\n    });\n}\n\n/**\n If none of the other factory methods above apply, you may of course roll your own EventStream by using `fromBinder`.\n\n <a name=\"bacon-frombinder\"></a>\n [`Bacon.fromBinder(subscribe)`](#bacon-frombinder \"Bacon.fromBinder(subscribe)\") The parameter `subscribe` is a function that accepts a `sink` which is a function that your `subscribe` function can \"push\" events to.\n\n For example:\n\n ```js\n var stream = Bacon.fromBinder(function(sink) {\n  sink(\"first value\")\n  sink([new Bacon.Next(\"2nd\"), new Bacon.Next(\"3rd\")])\n  sink(new Bacon.Error(\"oops, an error\"))\n  sink(new Bacon.End())\n  return function() {\n     // unsub functionality here, this one's a no-op\n  }\n})\n stream.log()\n ```\n\n As shown in the example, you can push\n\n - A plain value, like `\"first value\"`\n - An [`Event`](#event) object including [`Bacon.Error`](#bacon-error) (wraps an error) and [`Bacon.End`](#bacon-end) (indicates\n stream end).\n - An array of [event](#event) objects at once\n\n Other examples can be found on [JSFiddle](http://jsfiddle.net/PG4c4/) and the\n [Bacon.js blog](http://baconjs.blogspot.fi/2013/12/wrapping-things-in-bacon.html).\n\n The `subscribe` function must return a function. Let's call that function\n `unsubscribe`. The returned function can be used by the subscriber (directly or indirectly) to\n unsubscribe from the EventStream. It should release all resources that the subscribe function reserved.\n\n The `sink` function may return [`Bacon.noMore`](#bacon-nomore) (as well as [`Bacon.more`](#bacon-more)\n or any other value). If it returns [`Bacon.noMore`](#bacon-nomore), no further events will be consumed\n by the subscriber. The `subscribe` function may choose to clean up all resources at this point (e.g.,\n by calling `unsubscribe`). This is usually not necessary, because further calls to `sink` are ignored,\n but doing so can increase performance in [rare cases](https://github.com/baconjs/bacon.js/issues/484).\n\n The EventStream will wrap your `subscribe` function so that it will\n only be called when the first stream listener is added, and the `unsubscribe`\n function is called only after the last listener has been removed.\n The subscribe-unsubscribe cycle may of course be repeated indefinitely,\n so prepare for multiple calls to the subscribe function.\n\n\n @param  binder\n @param  eventTransformer\n @typeparam V Type of stream elements\n\n */\nfunction fromBinder(binder, eventTransformer = _.id) {\n    var desc = new Desc(\"Bacon\", \"fromBinder\", [binder, eventTransformer]);\n    return new EventStream(desc, function (sink) {\n        var unbound = false;\n        var shouldUnbind = false;\n        var unbind = function () {\n            if (!unbound) {\n                if ((typeof unbinder !== \"undefined\" && unbinder !== null)) {\n                    unbinder();\n                    return unbound = true;\n                }\n                else {\n                    return shouldUnbind = true;\n                }\n            }\n        };\n        var unbinder = binder(function (...args) {\n            var value_ = eventTransformer(...args);\n            let valueArray = isArray(value_) && isEvent(_.last(value_))\n                ? value_\n                : [value_];\n            var reply = more;\n            for (var i = 0; i < valueArray.length; i++) {\n                let event = toEvent(valueArray[i]);\n                reply = sink(event);\n                if (reply === noMore || event.isEnd) {\n                    // defer if binder calls handler in sync before returning unbinder\n                    unbind();\n                    return reply;\n                }\n            }\n            return reply;\n        });\n        if (shouldUnbind) {\n            unbind();\n        }\n        return unbind;\n    });\n}\n\n/**\n Polls given function with given interval.\n Function should return Events: either [`Bacon.Next`](classes/next.html) or [`Bacon.End`](classes/end.html). Polling occurs only\n when there are subscribers to the stream. Polling ends permanently when\n `f` returns [`Bacon.End`](classes/end.html).\n * @param delay poll interval in milliseconds\n * @param poll function to be polled\n * @typeparam V Type of stream elements\n */\nfunction fromPoll(delay, poll) {\n    var desc = new Desc(\"Bacon\", \"fromPoll\", [delay, poll]);\n    return fromBinder((function (handler) {\n        var id = GlobalScheduler.scheduler.setInterval(handler, delay);\n        return function () {\n            return GlobalScheduler.scheduler.clearInterval(id);\n        };\n    }), poll).withDesc(desc);\n}\n\n/**\n Repeats the single element indefinitely with the given interval (in milliseconds)\n\n @param   delay   Repeat delay in milliseconds\n @param   value   The single value to repeat\n @typeparam V Type of stream elements\n */\nfunction interval(delay, value) {\n    return fromPoll(delay, function () {\n        return nextEvent(value);\n    }).withDesc(new Desc(\"Bacon\", \"interval\", [delay, value]));\n}\n\nfunction makeCombinator(combinator) {\n    if (typeof combinator == \"function\") {\n        return combinator;\n    }\n    else {\n        return _.id;\n    }\n}\n/** @hidden */\nfunction sampledBy(samplee, sampler, f) {\n    if (samplee instanceof EventStream) {\n        return sampledByE(samplee, sampler, f);\n    }\n    else {\n        return sampledByP(samplee, sampler, f);\n    }\n}\n/** @hidden */\nfunction sampledByP(samplee, sampler, f) {\n    let combinator = makeCombinator(f);\n    var result = withLatestFrom(sampler, samplee, flip(combinator));\n    return result.withDesc(new Desc(samplee, \"sampledBy\", [sampler]));\n}\n/** @hidden */\nfunction sampledByE(samplee, sampler, f) {\n    return sampledByP(samplee.toProperty(), sampler, f).withDesc(new Desc(samplee, \"sampledBy\", [sampler]));\n}\n/** @hidden */\nfunction sampleP(samplee, samplingInterval) {\n    return sampledByP(samplee, interval(samplingInterval, {}), (a, b) => a).withDesc(new Desc(samplee, \"sample\", [samplingInterval]));\n}\n\n/** @hidden */\nfunction transformP(src, transformer, desc) {\n    return new Property(new Desc(src, \"transform\", [transformer]), sink => src.subscribeInternal(e => transformer(e, sink))).withDesc(desc);\n}\n/** @hidden */\nfunction transformE(src, transformer, desc) {\n    return new EventStream(new Desc(src, \"transform\", [transformer]), sink => src.subscribeInternal(e => transformer(e, sink)), undefined, allowSync).withDesc(desc);\n}\n/** @hidden */\nfunction composeT(t1, t2) {\n    let finalSink; // mutation used to avoid closure creation while dispatching events\n    const sink2 = (event) => {\n        return t2(event, finalSink);\n    };\n    return (event, sink) => {\n        finalSink = sink;\n        return t1(event, sink2);\n    };\n}\n\n/** @hidden */\nfunction toPredicate(f) {\n    if (typeof f == \"boolean\") {\n        return _.always(f);\n    }\n    else if (typeof f != \"function\") {\n        throw new Error(\"Not a function: \" + f);\n    }\n    else {\n        return f;\n    }\n}\n/** @hidden */\nfunction withPredicate(src, f, predicateTransformer, desc) {\n    if (f instanceof Property) {\n        return withLatestFrom(src, f, (p, v) => [p, v])\n            .transform(composeT(predicateTransformer(((tuple) => tuple[1])), mapT((tuple) => tuple[0])), desc);\n        // the `any` type above is needed because the type argument for Predicate2Transformer is fixed. We'd need higher-kinded types to be able to express this properly, I think.\n    }\n    return src.transform(predicateTransformer(toPredicate(f)), desc);\n}\n\n/** @hidden */\nfunction filter$1(src, f) {\n    return withPredicate(src, f, filterT, new Desc(src, \"filter\", [f]));\n}\n/** @hidden */\nfunction filterT(f) {\n    return (e, sink) => {\n        if (e.filter(f)) {\n            return sink(e);\n        }\n        else {\n            return more;\n        }\n    };\n}\n\n/** @hidden */\nfunction not(src) {\n    return src.map(x => !x).withDesc(new Desc(src, \"not\", []));\n}\n/** @hidden */\nfunction and(left, right) {\n    return left.combine(toProperty(right), (x, y) => !!(x && y)).withDesc(new Desc(left, \"and\", [right]));\n}\n/** @hidden */\nfunction or(left, right) {\n    return left.combine(toProperty(right), (x, y) => x || y).withDesc(new Desc(left, \"or\", [right]));\n}\nfunction toProperty(x) {\n    if (isProperty(x)) {\n        return x;\n    }\n    return constant(x);\n}\n\n/** @hidden */\nfunction flatMapFirst(src, f) {\n    return flatMap_(handleEventValueWith(f), src, {\n        firstOnly: true,\n        desc: new Desc(src, \"flatMapFirst\", [f])\n    });\n}\n\n/** @hidden */\nfunction concatE(left, right, options) {\n    return new EventStream(new Desc(left, \"concat\", [right]), function (sink) {\n        var unsubRight = nop;\n        var unsubLeft = left.dispatcher.subscribe(function (e) {\n            if (e.isEnd) {\n                unsubRight = right.toEventStream().dispatcher.subscribe(sink);\n                return more;\n            }\n            else {\n                return sink(e);\n            }\n        });\n        return function () {\n            return unsubLeft(), unsubRight();\n        };\n    }, undefined, options);\n}\n/**\n Concatenates given array of EventStreams or Properties. Works by subscribing to the first source, and listeing to that\n until it ends. Then repeatedly subscribes to the next source, until all sources have ended.\n\n See [`concat`](#observable-concat)\n */\nfunction concatAll(...streams_) {\n    let streams = argumentsToObservables(streams_);\n    return (streams.length\n        ? fold(tail(streams), head(streams).toEventStream(), (a, b) => a.concat(b))\n        : never()).withDesc(new Desc(\"Bacon\", \"concatAll\", streams));\n}\n\n/** @hidden */\nfunction transformPropertyChanges(property, f, desc) {\n    let initValue;\n    let comboSink;\n    // Create a `changes` stream to be transformed, which also snatches the Initial value for later use.\n    const changes = new EventStream(describe(property, \"changes\", []), (sink) => property.dispatcher.subscribe(function (event) {\n        if (!initValue && isInitial(event)) {\n            initValue = event;\n            UpdateBarrier.whenDoneWith(combo, function () {\n                if (!comboSink) {\n                    throw new Error(\"Init sequence fail\");\n                }\n                comboSink(initValue);\n            });\n        }\n        if (!event.isInitial) {\n            return sink(event);\n        }\n        return more;\n    }), undefined, allowSync);\n    const transformedChanges = f(changes);\n    const combo = propertyFromStreamSubscribe(desc, (sink) => {\n        comboSink = sink;\n        return transformedChanges.dispatcher.subscribe(function (event) {\n            sink(event);\n        });\n    });\n    return combo;\n}\n\n/** @hidden */\nfunction fold$1(src, seed, f) {\n    return src.scan(seed, f)\n        .last()\n        .withDesc(new Desc(src, \"fold\", [seed, f]));\n}\n\n/** @hidden */\nfunction startWithE(src, seed) {\n    return once(seed).concat(src).withDesc(new Desc(src, \"startWith\", [seed]));\n}\n/** @hidden */\nfunction startWithP(src, seed) {\n    return src.scan(seed, (prev, next) => next).withDesc(new Desc(src, \"startWith\", [seed]));\n}\n\n/** @hidden */\nconst endMarker = {};\n/** @hidden */\nfunction takeUntil(src, stopper) {\n    let endMapped = src.mapEnd(endMarker);\n    let withEndMarker = groupSimultaneous_([endMapped, stopper.skipErrors()], allowSync);\n    if (src instanceof Property)\n        withEndMarker = withEndMarker.toProperty();\n    return withEndMarker.transform(function (event, sink) {\n        if (hasValue(event)) {\n            var [data, stopper] = event.value;\n            if (stopper.length) {\n                return sink(endEvent());\n            }\n            else {\n                var reply = more;\n                for (var i = 0; i < data.length; i++) {\n                    let value = data[i];\n                    if (value === endMarker) {\n                        return sink(endEvent());\n                    }\n                    else {\n                        reply = sink(nextEvent(value));\n                    }\n                }\n                return reply;\n            }\n        }\n        else {\n            return sink(event);\n        }\n    }, new Desc(src, \"takeUntil\", [stopper]));\n}\n\n/** @hidden */\nfunction flatMap$1(src, f) {\n    return flatMap_(handleEventValueWith(f), src, { desc: new Desc(src, \"flatMap\", [f]) });\n}\n\n/** @hidden */\nfunction flatMapError(src, f) {\n    return flatMap_((x) => {\n        if (x instanceof Error$1) {\n            let error = x.error;\n            return f(error); // I don't understand why I need this little lie\n        }\n        else {\n            return x;\n        }\n    }, src, {\n        mapError: true,\n        desc: new Desc(src, \"flatMapError\", [f])\n    });\n}\n\nvar spies = [];\nvar running = false;\n/** @hidden */\nfunction registerObs(obs) {\n    if (spies.length) {\n        if (!running) {\n            try {\n                running = true;\n                spies.forEach(function (spy) {\n                    spy(obs);\n                });\n            }\n            finally {\n                running = false;\n            }\n        }\n    }\n}\n/**\n Adds your function as a \"spy\" that will get notified on all new Observables.\n This will allow a visualization/analytics tool to spy on all Bacon activity.\n */\nconst spy = (spy) => spies.push(spy);\n\n/** @hidden */\nfunction flatMapLatest(src, f_) {\n    let f = _.toFunction(f_);\n    var stream = isProperty(src) ? src.toEventStream(allowSync) : src;\n    let flatMapped = flatMap$1(stream, (value) => makeObservable(f(value)).takeUntil(stream));\n    if (isProperty(src))\n        flatMapped = flatMapped.toProperty();\n    return flatMapped.withDesc(new Desc(src, \"flatMapLatest\", [f]));\n}\n\n/** @hidden */\nclass Dispatcher {\n    constructor(observable, _subscribe, _handleEvent) {\n        this.pushing = false;\n        this.ended = false;\n        this.prevError = undefined;\n        this.unsubSrc = undefined;\n        this._subscribe = _subscribe;\n        this._handleEvent = _handleEvent;\n        this.subscribe = _.bind(this.subscribe, this);\n        this.handleEvent = _.bind(this.handleEvent, this);\n        this.subscriptions = [];\n        this.observable = observable;\n        this.queue = [];\n    }\n    hasSubscribers() {\n        return this.subscriptions.length > 0;\n    }\n    removeSub(subscription) {\n        this.subscriptions = _.without(subscription, this.subscriptions);\n        return this.subscriptions;\n    }\n    push(event) {\n        if (event.isEnd) {\n            this.ended = true;\n        }\n        return UpdateBarrier.inTransaction(event, this, this.pushIt, [event]);\n    }\n    pushToSubscriptions(event) {\n        try {\n            let tmp = this.subscriptions;\n            const len = tmp.length;\n            for (let i = 0; i < len; i++) {\n                const sub = tmp[i];\n                let reply = sub.sink(event);\n                if (reply === noMore || event.isEnd) {\n                    this.removeSub(sub);\n                }\n            }\n            return true;\n        }\n        catch (error) {\n            this.pushing = false;\n            this.queue = []; // ditch queue in case of exception to avoid unexpected behavior\n            throw error;\n        }\n    }\n    pushIt(event) {\n        if (!this.pushing) {\n            if (event === this.prevError) {\n                return;\n            }\n            if (event.isError) {\n                this.prevError = event;\n            }\n            this.pushing = true;\n            this.pushToSubscriptions(event);\n            this.pushing = false;\n            while (true) {\n                let e = this.queue.shift();\n                if (e) {\n                    this.push(e);\n                }\n                else {\n                    break;\n                }\n            }\n            if (this.hasSubscribers()) {\n                return more;\n            }\n            else {\n                this.unsubscribeFromSource();\n                return noMore;\n            }\n        }\n        else {\n            this.queue.push(event);\n            return more;\n        }\n    }\n    handleEvent(event) {\n        if (this._handleEvent) {\n            return this._handleEvent(event);\n        }\n        else {\n            return this.push(event);\n        }\n    }\n    ;\n    unsubscribeFromSource() {\n        if (this.unsubSrc) {\n            this.unsubSrc();\n        }\n        this.unsubSrc = undefined;\n    }\n    subscribe(sink) {\n        if (this.ended) {\n            sink(endEvent());\n            return nop;\n        }\n        else {\n            assertFunction(sink);\n            let subscription = {\n                sink: sink\n            };\n            this.subscriptions.push(subscription);\n            if (this.subscriptions.length === 1) {\n                this.unsubSrc = this._subscribe(this.handleEvent);\n                assertFunction(this.unsubSrc);\n            }\n            return () => {\n                this.removeSub(subscription);\n                if (!this.hasSubscribers()) {\n                    return this.unsubscribeFromSource();\n                }\n            };\n        }\n    }\n    inspect() {\n        return this.observable.toString();\n    }\n}\n\n/** @hidden */\nclass PropertyDispatcher extends Dispatcher {\n    constructor(property, subscribe, handleEvent) {\n        super(property, subscribe, handleEvent);\n        this.current = none();\n        this.propertyEnded = false;\n        this.subscribe = _.bind(this.subscribe, this);\n    }\n    push(event) {\n        //console.log(\"dispatch\", event, \"from\",  this)\n        if (event.isEnd) {\n            this.propertyEnded = true;\n        }\n        if (event instanceof Value) {\n            //console.log(\"setting current\")\n            this.current = new Some(event);\n            this.currentValueRootId = UpdateBarrier.currentEventId();\n        }\n        else if (event.hasValue) {\n            console.error(\"Unknown event, two Bacons loaded?\", event.constructor);\n        }\n        return super.push(event);\n    }\n    maybeSubSource(sink, reply) {\n        if (reply === noMore) {\n            return nop;\n        }\n        else if (this.propertyEnded) {\n            sink(endEvent());\n            return nop;\n        }\n        else {\n            return super.subscribe(sink);\n        }\n    }\n    subscribe(sink) {\n        // init value is \"bounced\" here because the base Dispatcher class\n        // won't add more than one subscription to the underlying observable.\n        // without bouncing, the init value would be missing from all new subscribers\n        // after the first one\n        var reply = more;\n        if (this.current.isDefined && (this.hasSubscribers() || this.propertyEnded)) {\n            // should bounce init value\n            var dispatchingId = UpdateBarrier.currentEventId();\n            var valId = this.currentValueRootId;\n            if (!this.propertyEnded && valId && dispatchingId && dispatchingId !== valId) {\n                // when subscribing while already dispatching a value and this property hasn't been updated yet\n                // we cannot bounce before this property is up to date.\n                //console.log(\"bouncing with possibly stale value\", event.value, \"root at\", valId, \"vs\", dispatchingId)\n                UpdateBarrier.whenDoneWith(this.observable, () => {\n                    if (this.currentValueRootId === valId) {\n                        //console.log(\"bouncing\", this.current.get().value)\n                        return sink(initialEvent(this.current.get().value));\n                    }\n                });\n                // the subscribing thing should be defered\n                return this.maybeSubSource(sink, reply);\n            }\n            else {\n                //console.log(\"bouncing immdiately\", this.current.get().value)\n                UpdateBarrier.inTransaction(undefined, this, () => {\n                    reply = sink(initialEvent(this.current.get().value));\n                    return reply;\n                }, []);\n                return this.maybeSubSource(sink, reply);\n            }\n        }\n        else {\n            //console.log(\"normal subscribe\", this)\n            return this.maybeSubSource(sink, reply);\n        }\n    }\n    inspect() {\n        return this.observable + \" current= \" + this.current;\n    }\n}\n\n/** @hidden */\nfunction flatMapWithConcurrencyLimit(src, limit, f) {\n    return flatMap_(handleEventValueWith(f), src, {\n        desc: new Desc(src, \"flatMapWithConcurrencyLimit\", [limit, f]),\n        limit\n    });\n}\n\n/** @hidden */\nfunction bufferWithTime(src, delay) {\n    return bufferWithTimeOrCount(src, delay, Number.MAX_VALUE).withDesc(new Desc(src, \"bufferWithTime\", [delay]));\n}\n/** @hidden */\nfunction bufferWithCount(src, count) {\n    return bufferWithTimeOrCount(src, undefined, count).withDesc(new Desc(src, \"bufferWithCount\", [count]));\n}\n/** @hidden */\nfunction bufferWithTimeOrCount(src, delay, count) {\n    const delayFunc = toDelayFunction(delay);\n    function flushOrSchedule(buffer) {\n        if (buffer.values.length === count) {\n            //console.log Bacon.scheduler.now() + \": count-flush\"\n            return buffer.flush();\n        }\n        else if (delayFunc !== undefined) {\n            return buffer.schedule(delayFunc);\n        }\n    }\n    var desc = new Desc(src, \"bufferWithTimeOrCount\", [delay, count]);\n    return buffer(src, flushOrSchedule, flushOrSchedule).withDesc(desc);\n}\nclass Buffer {\n    constructor(onFlush, onInput) {\n        this.push = (e) => more;\n        this.scheduled = null;\n        this.end = undefined;\n        this.values = [];\n        this.onFlush = onFlush;\n        this.onInput = onInput;\n    }\n    flush() {\n        if (this.scheduled) {\n            GlobalScheduler.scheduler.clearTimeout(this.scheduled);\n            this.scheduled = null;\n        }\n        if (this.values.length > 0) {\n            //console.log Bacon.scheduler.now() + \": flush \" + @values\n            var valuesToPush = this.values;\n            this.values = [];\n            var reply = this.push(nextEvent(valuesToPush));\n            if ((this.end != null)) {\n                return this.push(this.end);\n            }\n            else if (reply !== noMore) {\n                return this.onFlush(this);\n            }\n        }\n        else {\n            if ((this.end != null)) {\n                return this.push(this.end);\n            }\n        }\n    }\n    schedule(delay) {\n        if (!this.scheduled) {\n            return this.scheduled = delay(() => {\n                //console.log Bacon.scheduler.now() + \": scheduled flush\"\n                return this.flush();\n            });\n        }\n    }\n}\nfunction toDelayFunction(delay) {\n    if (delay === undefined) {\n        return undefined;\n    }\n    if (typeof delay === \"number\") {\n        var delayMs = delay;\n        return function (f) {\n            //console.log Bacon.scheduler.now() + \": schedule for \" + (Bacon.scheduler.now() + delayMs)\n            return GlobalScheduler.scheduler.setTimeout(f, delayMs);\n        };\n    }\n    return delay;\n}\n/** @hidden */\nfunction buffer(src, onInput = nop, onFlush = nop) {\n    var reply = more;\n    var buffer = new Buffer(onFlush, onInput);\n    return src.transform((event, sink) => {\n        buffer.push = sink;\n        if (hasValue(event)) {\n            buffer.values.push(event.value);\n            //console.log Bacon.scheduler.now() + \": input \" + event.value\n            onInput(buffer);\n        }\n        else if (isError(event)) {\n            reply = sink(event);\n        }\n        else if (isEnd(event)) {\n            buffer.end = event;\n            if (!buffer.scheduled) {\n                //console.log Bacon.scheduler.now() + \": end-flush\"\n                buffer.flush();\n            }\n        }\n        return reply;\n    }).withDesc(new Desc(src, \"buffer\", []));\n}\n\n/** @hidden */\nfunction asyncWrapSubscribe(obs, subscribe) {\n    //assertFunction(subscribe)\n    var subscribing = false;\n    return function wrappedSubscribe(sink) {\n        //assertFunction(sink)\n        const inTransaction = UpdateBarrier.isInTransaction();\n        subscribing = true;\n        var asyncDeliveries;\n        function deliverAsync() {\n            //console.log(\"delivering async\", obs, asyncDeliveries)\n            var toDeliverNow = asyncDeliveries || [];\n            asyncDeliveries = undefined;\n            for (var i = 0; i < toDeliverNow.length; i++) {\n                var event = toDeliverNow[i];\n                sink(event);\n            }\n        }\n        try {\n            return subscribe(function wrappedSink(event) {\n                if (subscribing || asyncDeliveries) {\n                    // Deliver async if currently subscribing\n                    // Also queue further events until async delivery has been completed\n                    //console.log(\"Stream responded synchronously\", obs)\n                    if (!asyncDeliveries) {\n                        asyncDeliveries = [event];\n                        if (inTransaction) {\n                            UpdateBarrier.soonButNotYet(obs, deliverAsync);\n                        }\n                        else {\n                            GlobalScheduler.scheduler.setTimeout(deliverAsync, 0);\n                        }\n                    }\n                    else {\n                        asyncDeliveries.push(event);\n                    }\n                    return more;\n                }\n                else {\n                    return sink(event);\n                }\n            });\n        }\n        finally {\n            subscribing = false;\n        }\n    };\n}\n\n/**\n Merges given array of EventStreams or Properties, by collecting the values from all of the sources into a single\n EventStream.\n\n See also [`merge`](classes/eventstream.html#merge).\n */\nfunction mergeAll(...streams) {\n    let flattenedStreams = argumentsToObservables(streams);\n    if (flattenedStreams.length) {\n        return new EventStream(new Desc(\"Bacon\", \"mergeAll\", flattenedStreams), function (sink) {\n            var ends = 0;\n            var smartSink = function (obs) {\n                return function (unsubBoth) {\n                    return obs.subscribeInternal(function (event) {\n                        if (event.isEnd) {\n                            ends++;\n                            if (ends === flattenedStreams.length) {\n                                return sink(endEvent());\n                            }\n                            else {\n                                return more;\n                            }\n                        }\n                        else {\n                            event = event.toNext();\n                            var reply = sink(event);\n                            if (reply === noMore) {\n                                unsubBoth();\n                            }\n                            return reply;\n                        }\n                    });\n                };\n            };\n            var sinks = map(smartSink, flattenedStreams);\n            return new CompositeUnsubscribe(sinks).unsubscribe;\n        });\n    }\n    else {\n        return never();\n    }\n}\n\n/**\n\n Creates a single-element stream that emits given value after given delay and ends.\n\n @param delay delay in milliseconds\n @param value value to be emitted\n @typeparam V Type of stream elements\n\n */\nfunction later(delay, value) {\n    return fromBinder(function (sink) {\n        var sender = function () {\n            return sink([toEvent(value), endEvent()]);\n        };\n        var id = GlobalScheduler.scheduler.setTimeout(sender, delay);\n        return function () {\n            return GlobalScheduler.scheduler.clearTimeout(id);\n        };\n    }).withDesc(new Desc(\"Bacon\", \"later\", [delay, value]));\n}\n\n/** @hidden */\nfunction delay(src, delay) {\n    return src.transformChanges(new Desc(src, \"delay\", [delay]), function (changes) {\n        return changes.flatMap(function (value) {\n            return later(delay, value);\n        });\n    });\n}\n\n/** @hidden */\nfunction debounce(src, delay) {\n    return src.transformChanges(new Desc(src, \"debounce\", [delay]), function (changes) {\n        return changes.flatMapLatest(function (value) {\n            return later(delay, value);\n        });\n    });\n}\n/** @hidden */\nfunction debounceImmediate(src, delay) {\n    return src.transformChanges(new Desc(src, \"debounceImmediate\", [delay]), function (changes) {\n        return changes.flatMapFirst(function (value) {\n            return once(value).concat(later(delay, value).errors());\n        });\n    });\n}\n\n/** @hidden */\nfunction throttle(src, delay) {\n    return src.transformChanges(new Desc(src, \"throttle\", [delay]), (changes) => changes.bufferWithTime(delay).map((values) => values[values.length - 1]));\n}\n\n/** @hidden */\nfunction bufferingThrottle(src, minimumInterval) {\n    var desc = new Desc(src, \"bufferingThrottle\", [minimumInterval]);\n    return src.transformChanges(desc, changes => changes.flatMapConcat((x) => {\n        return once(x).concat(later(minimumInterval, x).errors());\n    }));\n}\n\n/** @hidden */\nfunction takeWhile(src, f) {\n    return withPredicate(src, f, takeWhileT, new Desc(src, \"takeWhile\", [f]));\n}\nfunction takeWhileT(f) {\n    return (event, sink) => {\n        if (event.filter(f)) {\n            return sink(event);\n        }\n        else {\n            sink(endEvent());\n            return noMore;\n        }\n    };\n}\n\n/** @hidden */\nfunction skipUntil(src, starter) {\n    var started = starter\n        .transform(composeT(takeT(1), mapT(true)))\n        .toProperty()\n        .startWith(false);\n    return src.filter(started).withDesc(new Desc(src, \"skipUntil\", [starter]));\n}\n\n/** @hidden */\nfunction skipWhile(src, f) {\n    return withPredicate(src, f, skipWhileT, new Desc(src, \"skipWhile\", [f]));\n}\n/** @hidden */\nfunction skipWhileT(f) {\n    var started = false;\n    return function (event, sink) {\n        if (started || !hasValue(event) || !f(event.value)) {\n            if (event.hasValue) {\n                started = true;\n            }\n            return sink(event);\n        }\n        else {\n            return more;\n        }\n    };\n}\n\n/** @hidden */\nfunction groupBy(src, keyF, limitF = _.id) {\n    var streams = {};\n    return src.transform(composeT(filterT((x) => !streams[keyF(x)]), mapT(function (firstValue) {\n        var key = keyF(firstValue);\n        var similarValues = src.changes().filter(x => keyF(x) === key);\n        var data = once(firstValue).concat(similarValues);\n        var limited = limitF(data, firstValue).toEventStream().transform((event, sink) => {\n            let reply = sink(event);\n            if (event.isEnd) {\n                delete streams[key];\n            }\n            return reply;\n        });\n        streams[key] = limited;\n        return limited;\n    })));\n}\n\n/** @hidden */\nfunction slidingWindow(src, maxValues, minValues = 0) {\n    return src.scan([], (function (window, value) {\n        return window.concat([value]).slice(-maxValues);\n    }))\n        .filter((function (values) {\n        return values.length >= minValues;\n    })).withDesc(new Desc(src, \"slidingWindow\", [maxValues, minValues]));\n}\n\nconst nullMarker = {};\n/** @hidden */\nfunction diff(src, start, f) {\n    return transformP(scan(src, [start, nullMarker], ((prevTuple, next) => [next, f(prevTuple[0], next)])), composeT(filterT(tuple => tuple[1] !== nullMarker), mapT(tuple => tuple[1])), new Desc(src, \"diff\", [start, f]));\n}\n\n/** @hidden */\nfunction flatScan(src, seed, f) {\n    let current = seed;\n    return src.flatMapConcat((next) => makeObservable(f(current, next)).doAction(updated => current = updated)).toProperty().startWith(seed).withDesc(new Desc(src, \"flatScan\", [seed, f]));\n}\n\n/** @hidden */\nfunction holdWhen(src, valve) {\n    var onHold = false;\n    var bufferedValues = [];\n    var srcIsEnded = false;\n    return new EventStream(new Desc(src, \"holdWhen\", [valve]), function (sink) {\n        var composite = new CompositeUnsubscribe();\n        var subscribed = false;\n        var endIfBothEnded = function (unsub) {\n            if (unsub) {\n                unsub();\n            }\n            if (composite.empty() && subscribed) {\n                return sink(endEvent());\n            }\n            return more;\n        };\n        composite.add(function (unsubAll, unsubMe) {\n            return valve.subscribeInternal(function (event) {\n                if (hasValue(event)) {\n                    onHold = event.value;\n                    var result = more;\n                    if (!onHold) {\n                        var toSend = bufferedValues;\n                        bufferedValues = [];\n                        for (var i = 0; i < toSend.length; i++) {\n                            result = sink(nextEvent(toSend[i]));\n                        }\n                        if (srcIsEnded) {\n                            sink(endEvent());\n                            unsubMe();\n                            result = noMore;\n                        }\n                    }\n                    return result;\n                }\n                else if (event.isEnd) {\n                    return endIfBothEnded(unsubMe);\n                }\n                else {\n                    return sink(event);\n                }\n            });\n        });\n        composite.add(function (unsubAll, unsubMe) {\n            return src.subscribeInternal(function (event) {\n                if (onHold && hasValue(event)) {\n                    bufferedValues.push(event.value);\n                    return more;\n                }\n                else if (event.isEnd && bufferedValues.length) {\n                    srcIsEnded = true;\n                    return endIfBothEnded(unsubMe);\n                }\n                else {\n                    return sink(event);\n                }\n            });\n        });\n        subscribed = true;\n        endIfBothEnded();\n        return composite.unsubscribe;\n    });\n}\n\n/**\n Zips the array of EventStreams / Properties in to a new\n EventStream that will have an array of values from each source as\n its value. Zipping means that events from each source are combined\n pairwise so that the 1st event from each source is published first, then\n the 2nd event from each. The results will be published as soon as there\n is a value from each source.\n\n Be careful not to have too much \"drift\" between streams. If one stream\n produces many more values than some other excessive buffering will\n occur inside the zipped observable.\n\n Example:\n\n ```js\n x = Bacon.fromArray([1,2,3])\n y = Bacon.fromArray([10, 20, 30])\n z = Bacon.fromArray([100, 200, 300])\n Bacon.zipAsArray(x, y, z)\n\n # produces values [1, 10, 100], [2, 20, 200] and [3, 30, 300]\n ```\n\n */\nfunction zipAsArray(...args) {\n    let streams = _.map(((s) => s.toEventStream()), argumentsToObservables(args));\n    return when([streams, (...xs) => xs]).withDesc(new Desc(\"Bacon\", \"zipAsArray\", args));\n}\n/**\n Like [`zipAsArray`](#bacon-zipasarray) but uses the given n-ary\n function to combine the n values from n sources, instead of returning them in an Array.\n */\nfunction zipWith(f, ...streams) {\n    var [streams, f] = argumentsToObservablesAndFunction(arguments);\n    streams = _.map(((s) => s.toEventStream()), streams);\n    return when([streams, f]).withDesc(new Desc(\"Bacon\", \"zipWith\", [f].concat(streams)));\n}\n/** @hidden */\nfunction zip(left, right, f) {\n    return zipWith(f || Array, left, right).withDesc(new Desc(left, \"zip\", [right]));\n}\n\nfunction combineTemplate(template) {\n    function current(ctxStack) { return ctxStack[ctxStack.length - 1]; }\n    function setValue(ctxStack, key, value) {\n        current(ctxStack)[key] = value;\n        return value;\n    }\n    function applyStreamValue(key, index) {\n        return function (ctxStack, values) {\n            setValue(ctxStack, key, values[index]);\n        };\n    }\n    function constantValue(key, value) {\n        return function (ctxStack) {\n            setValue(ctxStack, key, value);\n        };\n    }\n    function mkContext(template) {\n        return isArray(template) ? [] : {};\n    }\n    function pushContext(key, value) {\n        return function (ctxStack) {\n            const newContext = mkContext(value);\n            setValue(ctxStack, key, newContext);\n            ctxStack.push(newContext);\n        };\n    }\n    function containsObservables(value) {\n        if (isObservable(value)) {\n            return true;\n        }\n        else if (value && (value.constructor == Object || value.constructor == Array)) {\n            for (var key in value) {\n                if (Object.prototype.hasOwnProperty.call(value, key)) {\n                    const child = value[key];\n                    if (containsObservables(child))\n                        return true;\n                }\n            }\n        }\n    }\n    function compile(key, value) {\n        if (isObservable(value)) {\n            streams.push(value);\n            funcs.push(applyStreamValue(key, streams.length - 1));\n        }\n        else if (containsObservables(value)) {\n            const popContext = function (ctxStack) { ctxStack.pop(); };\n            funcs.push(pushContext(key, value));\n            compileTemplate(value);\n            funcs.push(popContext);\n        }\n        else {\n            funcs.push(constantValue(key, value));\n        }\n    }\n    function combinator(values) {\n        const rootContext = mkContext(template);\n        const ctxStack = [rootContext];\n        for (var i = 0, f; i < funcs.length; i++) {\n            f = funcs[i];\n            f(ctxStack, values);\n        }\n        return rootContext;\n    }\n    function compileTemplate(template) { _.each(template, compile); }\n    const funcs = [];\n    const streams = [];\n    const resultProperty = containsObservables(template)\n        ? (compileTemplate(template), combineAsArray(streams).map(combinator))\n        : constant(template);\n    return resultProperty.withDesc(new Desc(\"Bacon\", \"combineTemplate\", [template]));\n}\n\n/** @hidden */\nfunction decode(src, cases) {\n    return src.combine(combineTemplate(cases), (key, values) => values[key])\n        .withDesc(new Desc(src, \"decode\", [cases]));\n}\n\n/** @hidden */\nfunction firstToPromise(src, PromiseCtr) {\n    const generator = (resolve, reject) => src.subscribe((event) => {\n        if (hasValue(event)) {\n            resolve(event.value);\n        }\n        if (isError(event)) {\n            reject(event.error);\n        }\n        // One event is enough\n        return noMore;\n    });\n    // Can't do in the global scope, as shim can be applied after Bacon is loaded.\n    if (typeof PromiseCtr === \"function\") {\n        return new PromiseCtr(generator);\n    }\n    else if (typeof Promise === \"function\") {\n        return new Promise(generator);\n    }\n    else {\n        throw new Error(\"There isn't default Promise, use shim or parameter\");\n    }\n}\n/** @hidden */\nfunction toPromise(src, PromiseCtr) {\n    return src.last().firstToPromise(PromiseCtr);\n}\n\nvar idCounter = 0;\n/**\n Observable is the base class for [EventsStream](eventstream.html) and [Property](property.html)\n\n @typeparam V   Type of the elements/values in the stream/property\n */\nclass Observable {\n    constructor(desc) {\n        /**\n         * Unique numeric id of this Observable. Implemented using a simple counter starting from 1.\n         */\n        this.id = ++idCounter;\n        /** @hidden */\n        this._isObservable = true;\n        this.desc = desc;\n        this.initialDesc = desc;\n    }\n    /**\n  Creates a Property that indicates whether\n  `observable` is awaiting `otherObservable`, i.e. has produced a value after the latest\n  value from `otherObservable`. This is handy for keeping track whether we are\n  currently awaiting an AJAX response:\n  \n  ```js\n  var showAjaxIndicator = ajaxRequest.awaiting(ajaxResponse)\n  ```\n  \n     */\n    awaiting(other) {\n        return awaiting(this, other);\n    }\n    /**\n  Throttles the observable using a buffer so that at most one value event in minimumInterval is issued.\n  Unlike [`throttle`](#observable-throttle), it doesn't discard the excessive events but buffers them instead, outputting\n  them with a rate of at most one value per minimumInterval.\n  \n  Example:\n  \n  ```js\n  var throttled = source.bufferingThrottle(2)\n  ```\n  \n  ```\n  source:    asdf----asdf----\n  throttled: a-s-d-f-a-s-d-f-\n  ```\n     */\n    bufferingThrottle(minimumInterval) {\n        return bufferingThrottle(this, minimumInterval);\n    }\n    /**\n  Combines the latest values of the two\n  streams or properties using a two-arg function. Similarly to [`scan`](#scan), you can use a\n  method name instead, so you could do `a.combine(b, \".concat\")` for two\n  properties with array value. The result is a [Property](property.html).\n     */\n    combine(right, f) {\n        return combineTwo(this, right, f).withDesc(new Desc(this, \"combine\", [right, f]));\n    }\n    /**\n  Throttles stream/property by given amount\n  of milliseconds, but so that event is only emitted after the given\n  \"quiet period\". Does not affect emitting the initial value of a [Property](property.html).\n  The difference of [`throttle`](#throttle) and [`debounce`](#debounce) is the same as it is in the\n  same methods in jQuery.\n  \n  Example:\n  \n  ```\n  source:             asdf----asdf----\n  source.debounce(2): -----f-------f--\n  ```\n  \n     */\n    debounce(minimumInterval) {\n        return debounce(this, minimumInterval);\n    }\n    /**\n  Passes the first event in the\n  stream through, but after that, only passes events after a given number\n  of milliseconds have passed since previous output.\n  \n  Example:\n  \n  ```\n  source:                      asdf----asdf----\n  source.debounceImmediate(2): a-d-----a-d-----\n  ```\n     */\n    debounceImmediate(minimumInterval) {\n        return debounceImmediate(this, minimumInterval);\n    }\n    /**\n  Decodes input using the given mapping. Is a\n  bit like a switch-case or the decode function in Oracle SQL. For\n  example, the following would map the value 1 into the string \"mike\"\n  and the value 2 into the value of the `who` property.\n  \n  ```js\n  property.decode({1 : \"mike\", 2 : who})\n  ```\n  \n  This is actually based on [`combineTemplate`](#combinetemplate) so you can compose static\n  and dynamic data quite freely, as in\n  \n  ```js\n  property.decode({1 : { type: \"mike\" }, 2 : { type: \"other\", whoThen : who }})\n  ```\n  \n  The return value of [`decode`](#decode) is always a [`Property`](property.html).\n  \n     */\n    //decode<T extends Record<any, any>>(src: Observable<keyof T>, cases: T): Property<DecodedValueOf<T>>\n    decode(cases) {\n        return decode(this, cases);\n    }\n    /**\n  Delays the stream/property by given amount of milliseconds. Does not delay the initial value of a [`Property`](property.html).\n  \n  ```js\n  var delayed = source.delay(2)\n  ```\n  \n  ```\n  source:    asdf----asdf----\n  delayed:   --asdf----asdf--\n  ```\n  \n     */\n    delay(delayMs) {\n        return delay(this, delayMs);\n    }\n    /**\n     * Returns the an array of dependencies that the Observable has. For instance, for `a.map(function() {}).deps()`, would return `[a]`.\n     This method returns the \"visible\" dependencies only, skipping internal details.  This method is thus suitable for visualization tools.\n     Internally, many combinator functions depend on other combinators to create intermediate Observables that the result will actually depend on.\n     The `deps` method will skip these internal dependencies. See also: [internalDeps](#internaldeps)\n     */\n    deps() {\n        return this.desc.deps();\n    }\n    /**\n  Returns a Property that represents the result of a comparison\n  between the previous and current value of the Observable. For the initial value of the Observable,\n  the previous value will be the given start.\n  \n  Example:\n  \n  ```js\n  var distance = function (a,b) { return Math.abs(b - a) }\n  Bacon.sequentially(1, [1,2,3]).diff(0, distance)\n  ```\n  \n  This would result to following elements in the result stream:\n  \n      1 - 0 = 1\n      2 - 1 = 1\n      3 - 2 = 1\n  \n     */\n    diff(start, f) {\n        return diff(this, start, f);\n    }\n    /**\n  Returns a stream/property where the function f\n  is executed for each value, before dispatching to subscribers. This is\n  useful for debugging, but also for stuff like calling the\n  `preventDefault()` method for events. In fact, you can\n  also use a property-extractor string instead of a function, as in\n  `\".preventDefault\"`.\n  \n  Please note that for Properties, it's not guaranteed that the function will be called exactly once\n  per event; when a Property loses all of its subscribers it will re-emit its current value when a\n  new subscriber is added.\n     */\n    doAction(f) {\n        return this.transform(doActionT(f), new Desc(this, \"doAction\", [f]));\n    }\n    doEnd(f) {\n        return this.transform(doEndT(f), new Desc(this, \"doEnd\", [f]));\n    }\n    /**\n  Returns a stream/property where the function f\n  is executed for each error, before dispatching to subscribers.\n  That is, same as [`doAction`](#observable-doaction) but for errors.\n     */\n    doError(f) {\n        return this.transform(doErrorT(f), new Desc(this, \"doError\", [f]));\n    }\n    /**\n  Logs each value of the Observable to the console. doLog() behaves like [`log`](#log)\n  but does not subscribe to the event stream. You can think of doLog() as a\n  logger function that \u2013 unlike log() \u2013 is safe to use in production. doLog() is\n  safe, because it does not cause the same surprising side-effects as log()\n  does.\n     */\n    doLog(...args) {\n        return this.transform(doLogT(args), new Desc(this, \"doLog\", args));\n    }\n    endAsValue() {\n        return endAsValue(this);\n    }\n    /**\n    Returns a stream/property that ends the on first [`Error`](error.html) event. The\n    error is included in the output of the returned Observable.\n    \n    @param  predicate   optional predicate function to determine whether to end on a given error\n     */\n    endOnError(predicate = x => true) {\n        return endOnError(this, predicate);\n    }\n    /**\n  Returns a stream containing [`Error`](error.html) events only.\n  Same as filtering with a function that always returns false.\n     */\n    errors() {\n        return this.filter(x => false).withDesc(new Desc(this, \"errors\"));\n    }\n    /**\n  Filters values using given predicate function.\n  Instead of a function, you can use a constant value (`true` to include all, `false` to exclude all).\n  \n  You can also filter values based on the value of a\n  property. Event will be included in output [if and only if](http://en.wikipedia.org/wiki/If_and_only_if) the property holds `true`\n  at the time of the event.\n     */\n    filter(f) {\n        return filter$1(this, f);\n    }\n    /**\n  Takes the first element from the stream. Essentially `observable.take(1)`.\n     */\n    first() {\n        return take(1, this, new Desc(this, \"first\"));\n    }\n    /**\n  Returns a Promise which will be resolved with the first event coming from an Observable.\n  Like [`toPromise`](#topromise), the global ES6 promise implementation will be used unless a promise\n  constructor is given.\n     */\n    firstToPromise(PromiseCtr) {\n        return firstToPromise(this, PromiseCtr);\n    }\n    /**\n  Works like [`scan`](#scan) but only emits the final\n  value, i.e. the value just before the observable ends. Returns a\n  [`Property`](property.html).\n     */\n    fold(seed, f) {\n        return fold$1(this, seed, f);\n    }\n    /**\n     An alias for [onValue](#onvalue).\n  \n     Subscribes a given handler function to the observable. Function will be called for each new value (not for errors or stream end).\n     */\n    forEach(f = nullSink) {\n        // TODO: inefficient alias. Also, similar assign alias missing.\n        return this.onValue(f);\n    }\n    /**\n  Pauses and buffers the event stream if last event in valve is truthy.\n  All buffered events are released when valve becomes falsy.\n     */\n    holdWhen(valve) {\n        return holdWhen(this, valve);\n    }\n    inspect() { return this.toString(); }\n    /**\n     * Returns the true dependencies of the observable, including the intermediate \"hidden\" Observables.\n     This method is for Bacon.js internal purposes but could be useful for debugging/analysis tools as well.\n     See also: [deps](#deps)\n     */\n    internalDeps() {\n        return this.initialDesc.deps();\n    }\n    /**\n  Takes the last element from the stream. None, if stream is empty.\n  \n  \n  *Note:* `neverEndingStream.last()` creates the stream which doesn't produce any events and never ends.\n     */\n    last() {\n        return last$1(this);\n    }\n    /**\n  Logs each value of the Observable to the console.\n  It optionally takes arguments to pass to console.log() alongside each\n  value. To assist with chaining, it returns the original Observable. Note\n  that as a side-effect, the observable will have a constant listener and\n  will not be garbage-collected. So, use this for debugging only and\n  remove from production code. For example:\n  \n  ```js\n  myStream.log(\"New event in myStream\")\n  ```\n  \n  or just\n  \n  ```js\n  myStream.log()\n  ```\n  \n     */\n    log(...args) {\n        log(args, this);\n        return this;\n    }\n    /**\n  Adds an extra [`Next`](next.html) event just before End. The value is created\n  by calling the given function when the source stream ends. Instead of a\n  function, a static value can be used.\n     */\n    // TODO: mapEnd and mapError signatures should allow V|V2\n    mapEnd(f) {\n        return this.transform(mapEndT(f), new Desc(this, \"mapEnd\", [f]));\n    }\n    /**\n  Maps errors using given function. More\n  specifically, feeds the \"error\" field of the error event to the function\n  and produces a [`Next`](next.html) event based on the return value.\n     */\n    mapError(f) {\n        return this.transform(mapErrorT(f), new Desc(this, \"mapError\", [f]));\n    }\n    /**\n  Sets the name of the observable. Overrides the default\n  implementation of [`toString`](#tostring) and `inspect`.\n  Returns the same observable, with mutated name.\n     */\n    name(name) {\n        this._name = name;\n        return this;\n    }\n    /**\n  Subscribes a callback to stream end. The function will be called when the stream ends.\n  Just like `subscribe`, this method returns a function for unsubscribing.\n     */\n    onEnd(f = nullVoidSink) {\n        return this.subscribe(function (event) {\n            if (event.isEnd) {\n                return f();\n            }\n            return more;\n        });\n    }\n    /**\n  Subscribes a handler to error events. The function will be called for each error in the stream.\n  Just like `subscribe`, this method returns a function for unsubscribing.\n     */\n    onError(f = nullSink) {\n        return this.subscribe(function (event) {\n            if (isError(event)) {\n                return f(event.error);\n            }\n            return more;\n        });\n    }\n    /**\n  Subscribes a given handler function to the observable. Function will be called for each new value.\n  This is the simplest way to assign a side-effect to an observable. The difference\n  to the `subscribe` method is that the actual stream values are\n  received, instead of [`Event`](event) objects.\n  Just like `subscribe`, this method returns a function for unsubscribing.\n  `stream.onValue` and `property.onValue` behave similarly, except that the latter also\n  pushes the initial value of the property, in case there is one.\n     */\n    onValue(f = nullSink) {\n        return this.subscribe(function (event) {\n            if (hasValue(event)) {\n                return f(event.value);\n            }\n            return more;\n        });\n    }\n    /**\n  Like [`onValue`](#onvalue), but splits the value (assuming its an array) as function arguments to `f`.\n  Only applicable for observables with arrays as values.\n     */\n    onValues(f) {\n        return this.onValue(function (args) { return f(...args); });\n    }\n    /** A synonym for [scan](#scan).\n     */\n    reduce(seed, f) {\n        return fold$1(this, seed, f);\n    }\n    sampledBy(sampler) {\n        return sampledBy(this, sampler, arguments[1]); // TODO: combinator\n    }\n    /**\n  Scans stream/property with given seed value and\n  accumulator function, resulting to a Property. For example, you might\n  use zero as seed and a \"plus\" function as the accumulator to create\n  an \"integral\" property. Instead of a function, you can also supply a\n  method name such as \".concat\", in which case this method is called on\n  the accumulator value and the new stream value is used as argument.\n  \n  Example:\n  \n  ```js\n  var plus = function (a,b) { return a + b }\n  Bacon.sequentially(1, [1,2,3]).scan(0, plus)\n  ```\n  \n  This would result to following elements in the result stream:\n  \n      seed value = 0\n      0 + 1 = 1\n      1 + 2 = 3\n      3 + 3 = 6\n  \n  When applied to a Property as in `r = p.scan(seed, f)`, there's a (hopefully insignificant) catch:\n  The starting value for `r` depends on whether `p` has an\n  initial value when scan is applied. If there's no initial value, this works\n  identically to EventStream.scan: the `seed` will be the initial value of\n  `r`. However, if `r` already has a current/initial value `x`, the\n  seed won't be output as is. Instead, the initial value of `r` will be `f(seed, x)`. This makes sense,\n  because there can only be 1 initial value for a Property at a time.\n     */\n    scan(seed, f) {\n        return scan(this, seed, f);\n    }\n    /**\n  Skips the first n elements from the stream\n     */\n    skip(count) {\n        return skip(this, count);\n    }\n    /**\n  Drops consecutive equal elements. So,\n  from `[1, 2, 2, 1]` you'd get `[1, 2, 1]`. Uses the `===` operator for equality\n  checking by default. If the isEqual argument is supplied, checks by calling\n  isEqual(oldValue, newValue). For instance, to do a deep comparison,you can\n  use the isEqual function from [underscore.js](http://underscorejs.org/)\n  like `stream.skipDuplicates(_.isEqual)`.\n     */\n    skipDuplicates(isEqual) {\n        return skipDuplicates(this, isEqual);\n    }\n    /**\n     * Returns a new stream/property which excludes all [Error](error.html) events in the source\n     */\n    skipErrors() {\n        return skipErrors(this);\n    }\n    /**\n     Skips elements from the source, until a value event\n     appears in the given `starter` stream/property. In other words, starts delivering values\n     from the source after first value appears in `starter`.\n     */\n    skipUntil(starter) {\n        return skipUntil(this, starter);\n    }\n    /**\n     Skips elements until the given predicate function returns falsy once, and then\n     lets all events pass through. Instead of a predicate you can also pass in a `Property<boolean>` to skip elements\n     while the Property holds a truthy value.\n     */\n    skipWhile(f) {\n        return skipWhile(this, f);\n    }\n    /**\n  Returns a Property that represents a\n  \"sliding window\" into the history of the values of the Observable. The\n  result Property will have a value that is an array containing the last `n`\n  values of the original observable, where `n` is at most the value of the\n  `max` argument, and at least the value of the `min` argument. If the\n  `min` argument is omitted, there's no lower limit of values.\n  \n  For example, if you have a stream `s` with value a sequence 1 - 2 - 3 - 4 - 5, the\n  respective values in `s.slidingWindow(2)` would be [] - [1] - [1,2] -\n  [2,3] - [3,4] - [4,5]. The values of `s.slidingWindow(2,2)`would be\n  [1,2] - [2,3] - [3,4] - [4,5].\n  \n     */\n    slidingWindow(maxValues, minValues = 0) {\n        return slidingWindow(this, maxValues, minValues);\n    }\n    /**\n     * subscribes given handler function to event stream. Function will receive [event](event.html) objects\n     for all new value, end and error events in the stream.\n     The subscribe() call returns a `unsubscribe` function that you can call to unsubscribe.\n     You can also unsubscribe by returning [`Bacon.noMore`](../globals.html#nomore) from the handler function as a reply\n     to an Event.\n     `stream.subscribe` and `property.subscribe` behave similarly, except that the latter also\n     pushes the initial value of the property, in case there is one.\n  \n     * @param {EventSink<V>} sink the handler function\n     * @returns {Unsub}\n     */\n    subscribe(sink = nullSink) {\n        return UpdateBarrier.wrappedSubscribe(this, sink => this.subscribeInternal(sink), sink);\n    }\n    /**\n  Takes at most n values from the stream and then ends the stream. If the stream has\n  fewer than n values then it is unaffected.\n  Equal to [`Bacon.never()`](../globals.html#never) if `n <= 0`.\n     */\n    take(count) {\n        return take(count, this);\n    }\n    /**\n  Takes elements from source until a value event appears in the other stream.\n  If other stream ends without value, it is ignored.\n     */\n    takeUntil(stopper) {\n        return takeUntil(this, stopper);\n    }\n    /**\n  Takes while given predicate function holds true, and then ends. Alternatively, you can supply a boolean Property to take elements while the Property holds `true`.\n     */\n    takeWhile(f) {\n        return takeWhile(this, f);\n    }\n    /**\n  Throttles stream/property by given amount\n  of milliseconds. Events are emitted with the minimum interval of\n  [`delay`](#observable-delay). The implementation is based on [`stream.bufferWithTime`](#stream-bufferwithtime).\n  Does not affect emitting the initial value of a [`Property`](#property).\n  \n  Example:\n  \n  ```js\n  var throttled = source.throttle(2)\n  ```\n  \n  ```\n  source:    asdf----asdf----\n  throttled: --s--f----s--f--\n  ```\n     */\n    throttle(minimumInterval) {\n        return throttle(this, minimumInterval);\n    }\n    /**\n  Returns a Promise which will be resolved with the last event coming from an Observable.\n  The global ES6 promise implementation will be used unless a promise constructor is given.\n  Use a shim if you need to support legacy browsers or platforms.\n  [caniuse promises](http://caniuse.com/#feat=promises).\n  \n  See also [firstToPromise](#firsttopromise).\n     */\n    toPromise(PromiseCtr) {\n        return toPromise(this, PromiseCtr);\n    }\n    /**\n     *Returns a textual description of the Observable. For instance, `Bacon.once(1).map(function() {}).toString()` would return \"Bacon.once(1).map(function)\".\n     **/\n    toString() {\n        if (this._name) {\n            return this._name;\n        }\n        else {\n            return this.desc.toString();\n        }\n    }\n    withDesc(desc) {\n        if (desc)\n            this.desc = desc;\n        return this;\n    }\n    /**\n  Sets the structured description of the observable. The [`toString`](#tostring) and `inspect` methods\n  use this data recursively to create a string representation for the observable. This method\n  is probably useful for Bacon core / library / plugin development only.\n  \n  For example:\n  \n      var src = Bacon.once(1)\n      var obs = src.map(function(x) { return -x })\n      console.log(obs.toString())\n      --> Bacon.once(1).map(function)\n      obs.withDescription(src, \"times\", -1)\n      console.log(obs.toString())\n      --> Bacon.once(1).times(-1)\n  \n  The method returns the same observable with mutated description.\n  \n  */\n    withDescription(context, method, ...args) {\n        this.desc = describe(context, method, ...args);\n        return this;\n    }\n    /**\n  Returns an EventStream with elements\n  pair-wise lined up with events from this and the other EventStream or Property.\n  A zipped stream will publish only when it has a value from each\n  source and will only produce values up to when any single source ends.\n  \n  The given function `f` is used to create the result value from value in the two\n  sources. If no function is given, the values are zipped into an array.\n  \n  Be careful not to have too much \"drift\" between streams. If one stream\n  produces many more values than some other excessive buffering will\n  occur inside the zipped observable.\n  \n  Example 1:\n  \n  ```js\n  var x = Bacon.fromArray([1, 2])\n  var y = Bacon.fromArray([3, 4])\n  x.zip(y, function(x, y) { return x + y })\n  \n  # produces values 4, 6\n  ```\n  \n  See also [`zipWith`](../globals.html#zipwith) and [`zipAsArray`](../globals.html/zipasarray) for zipping more than 2 sources.\n  \n     */\n    zip(other, f) {\n        return zip(this, other, f);\n    }\n}\n/**\n A reactive property. Has the concept of \"current value\".\n You can create a Property from an EventStream by using either [`toProperty`](eventstream.html#toproperty)\n or [`scan`](eventstream.html#scan) method. Note: depending on how a Property is created, it may or may not\n have an initial value. The current value stays as its last value after the stream has ended.\n\n Here are the most common ways for creating Properties:\n\n - Create a constant property with [constant](../globals.html#constant)\n - Create a property based on an EventStream with [toProperty](eventstream.html#toproperty)\n - Scan an EventStream with an accumulator function with [scan](eventstream.html#scan)\n - Create a state property based on multiple sources using [update](../globals.html#update)\n\n @typeparam V   Type of the elements/values in the stream/property\n */\nclass Property extends Observable {\n    constructor(desc, subscribe, handler) {\n        super(desc);\n        /** @internal */\n        this._isProperty = true;\n        assertFunction(subscribe);\n        this.dispatcher = new PropertyDispatcher(this, subscribe, handler);\n        registerObs(this);\n    }\n    /**\n     Combines properties with the `&&` operator. It produces a new value when either of the Properties change,\n     combining the latest values using `&&`.\n     */\n    and(other) {\n        return and(this, other);\n    }\n    /**\n     * creates a stream of changes to the Property. The stream *does not* include\n     an event for the current value of the Property at the time this method was called.\n     */\n    changes() {\n        return new EventStream(new Desc(this, \"changes\", []), (sink) => this.dispatcher.subscribe(function (event) {\n            if (!event.isInitial) {\n                return sink(event);\n            }\n            return more;\n        }));\n    }\n    concat(other) {\n        return this.transformChanges(describe(this, \"concat\", other), changes => changes.concat(other));\n    }\n    /** @hidden */\n    transformChanges(desc, f) {\n        return transformPropertyChanges(this, f, desc);\n    }\n    /**\n     For each element in the source stream, spawn a new\n     stream/property using the function `f`. Collect events from each of the spawned\n     streams into the result property. Note that instead of a function, you can provide a\n     stream/property too. Also, the return value of function `f` can be either an\n     `Observable` (stream/property) or a constant value.\n  \n     `stream.flatMap()` can be used conveniently with [`Bacon.once()`](../globals.html#once) and [`Bacon.never()`](../globals.html#never)\n     for converting and filtering at the same time, including only some of the results.\n  \n     Example - converting strings to integers, skipping empty values:\n  \n     ```js\n     stream.flatMap(function(text) {\n      return (text != \"\") ? parseInt(text) : Bacon.never()\n  })\n     ```\n     */\n    flatMap(f) {\n        return flatMap$1(this, f);\n    }\n    /**\n     A [`flatMapWithConcurrencyLimit`](#flatmapwithconcurrencylimit) with limit of 1.\n     */\n    flatMapConcat(f) {\n        return flatMapConcat(this, f);\n    }\n    /**\n     Like [`flatMap`](#flatmap), but is applied only on [`Error`](error.html) events. Returned values go into the\n     value stream, unless an error event is returned. As an example, one type of error could result in a retry and another just\n     passed through, which can be implemented using flatMapError.\n     */\n    flatMapError(f) {\n        return flatMapError(this, f);\n    }\n    flatMapEvent(f) {\n        return flatMapEvent(this, f);\n    }\n    /**\n     Like [`flatMap`](#observable-flatmap), but only spawns a new\n     stream if the previously spawned stream has ended.\n     */\n    flatMapFirst(f) {\n        return flatMapFirst(this, f);\n    }\n    /**\n     Like [`flatMap`](#flatmap), but instead of including events from\n     all spawned streams, only includes them from the latest spawned stream.\n     You can think this as switching from stream to stream.\n     Note that instead of a function, you can provide a stream/property too.\n     */\n    flatMapLatest(f) {\n        return flatMapLatest(this, f);\n    }\n    /**\n     A super method of *flatMap* family. It limits the number of open spawned streams and buffers incoming events.\n     [`flatMapConcat`](#flatmapconcat) is `flatMapWithConcurrencyLimit(1)` (only one input active),\n     and [`flatMap`](#flatmap) is `flatMapWithConcurrencyLimit \u221E` (all inputs are piped to output).\n     */\n    flatMapWithConcurrencyLimit(limit, f) {\n        return flatMapWithConcurrencyLimit(this, limit, f);\n    }\n    /**\n     Groups stream events to new streams by `keyF`. Optional `limitF` can be provided to limit grouped\n     stream life. Stream transformed by `limitF` is passed on if provided. `limitF` gets grouped stream\n     and the original event causing the stream to start as parameters.\n  \n     Calculator for grouped consecutive values until group is cancelled:\n  \n     ```\n     var events = [\n     {id: 1, type: \"add\", val: 3 },\n     {id: 2, type: \"add\", val: -1 },\n     {id: 1, type: \"add\", val: 2 },\n     {id: 2, type: \"cancel\"},\n     {id: 3, type: \"add\", val: 2 },\n     {id: 3, type: \"cancel\"},\n     {id: 1, type: \"add\", val: 1 },\n     {id: 1, type: \"add\", val: 2 },\n     {id: 1, type: \"cancel\"}\n     ]\n  \n     function keyF(event) {\n    return event.id\n  }\n  \n     function limitF(groupedStream, groupStartingEvent) {\n    var cancel = groupedStream.filter(function(x) { return x.type === \"cancel\"}).take(1)\n    var adds = groupedStream.filter(function(x) { return x.type === \"add\" })\n    return adds.takeUntil(cancel).map(\".val\")\n  }\n  \n     Bacon.sequentially(2, events)\n     .groupBy(keyF, limitF)\n     .flatMap(function(groupedStream) {\n      return groupedStream.fold(0, function(acc, x) { return acc + x })\n    })\n     .onValue(function(sum) {\n      console.log(sum)\n      // returns [-1, 2, 8] in an order\n    })\n     ```\n  \n     */\n    groupBy(keyF, limitF) {\n        return groupBy(this, keyF, limitF);\n    }\n    /**\n     Maps values using given function, returning a new\n     stream/property. Instead of a function, you can also provide a [Property](property.html),\n     in which case each element in the source stream will be mapped to the current value of\n     the given property.\n     */\n    map(f) {\n        return map$1(this, f);\n    }\n    /** Returns a Property that inverts the value of this one (using the `!` operator). **/\n    not() {\n        return not(this);\n    }\n    /**\n     Combines properties with the `||` operator. It produces a new value when either of the Properties change,\n     combining the latest values using `||`.\n     */\n    or(other) {\n        return or(this, other);\n    }\n    /**\n     Creates an EventStream by sampling the\n     property value at given interval (in milliseconds)\n     */\n    sample(interval) {\n        return sampleP(this, interval);\n    }\n    /**\n    Adds an initial \"default\" value for the\n    Property. If the Property doesn't have an initial value of it's own, the\n    given value will be used as the initial value. If the property has an\n    initial value of its own, the given value will be ignored.\n     */\n    startWith(seed) {\n        return startWithP(this, seed);\n    }\n    /** @hidden */\n    subscribeInternal(sink = nullSink) {\n        return this.dispatcher.subscribe(sink);\n    }\n    /**\n     Creates an EventStream based on this Property. The stream contains also an event for the current\n     value of this Property at the time this method was called.\n     */\n    toEventStream(options) {\n        return new EventStream(new Desc(this, \"toEventStream\", []), (sink) => this.subscribeInternal(function (event) {\n            return sink(event.toNext());\n        }), undefined, options);\n    }\n    /**\n     Returns the Property itself.\n     */\n    toProperty() {\n        assertNoArguments(arguments);\n        return this;\n    }\n    transform(transformer, desc) {\n        return transformP(this, transformer, desc);\n    }\n    /**\n     Creates an EventStream/Property by sampling a given `samplee`\n     stream/property value at each event from the this stream/property.\n  \n     @param {Observable<V2>} samplee\n     @param f function to select/calculate the result value based on the value in the source stream and the samplee\n  \n     @typeparam V2  type of values in the samplee\n     @typeparam R   type of values in the result\n     */\n    withLatestFrom(samplee, f) {\n        return withLatestFromP(this, samplee, f);\n    }\n    /**\n     Lets you run a state machine\n     on an observable. Give it an initial state object and a state\n     transformation function that processes each incoming event and\n     returns an array containing the next state and an array of output\n     events. Here's an example where we calculate the total sum of all\n     numbers in the stream and output the value on stream end:\n  \n     ```js\n     Bacon.fromArray([1,2,3])\n     .withStateMachine(0, function(sum, event) {\n      if (event.hasValue)\n        return [sum + event.value, []]\n      else if (event.isEnd)\n        return [undefined, [new Bacon.Next(sum), event]]\n      else\n        return [sum, [event]]\n    })\n     ```\n     @param initState  initial state for the state machine\n     @param f          the function that defines the state machine\n     @typeparam  State   type of machine state\n     @typeparam  Out     type of values to be emitted\n     */\n    withStateMachine(initState, f) {\n        return withStateMachine(initState, f, this);\n    }\n}\n/** @hidden */\nfunction isProperty(x) {\n    return !!x._isProperty;\n}\n// allowSync option is used for overriding the \"force async\" behaviour or EventStreams.\n// ideally, this should not exist, but right now the implementation of some operations\n// relies on using internal EventStreams that have synchronous behavior. These are not exposed\n// to the outside world, though.\n/** @hidden */\nconst allowSync = { forceAsync: false };\n/**\n * EventStream represents a stream of events. It is an Observable object, meaning\n that you can listen to events in the stream using, for instance, the [`onValue`](#onvalue) method\n with a callback.\n\n To create an EventStream, you'll want to use one of the following factory methods:\n\n  - From DOM EventTarget or Node.JS EventEmitter objects using [fromEvent](../globals.html#fromevent)\n  - From a Promise using [fromPromise](../globals.html#frompromise)\n  - From an unary callback using [fromCallback](../globals.html#fromcallback)\n  - From a Node.js style callback using [fromNodeCallback](../globals.html#fromnodecallback)\n  - From RxJs or Kefir observables using [fromESObservable](../globals.html#fromesobservable)\n  - By polling a synchronous function using [fromPoll](../globals.html#fromPoll)\n  - Emit a single event instantly using [once](../globals.html#once)\n  - Emit a single event with a delay [later](../globals.html#later)\n  - Emit the same event indefinitely using [interval](../globals.html#interval)\n  - Emit an array of events instantly [fromArray](../globals.html#fromarray)\n  - Emit an array of events with a delay [sequentially](../globals.html#sequentially)\n  - Emit an array of events repeatedly with a delay [repeatedly](../globals.html#repeatedly)\n  - Use a generator function to be called repeatedly [repeat](../globals.html#repeat)\n  - Create a stream that never emits an event, ending immediately [never](../globals.html#never)\n  - Create a stream that never emits an event, ending with a delay [silence](../globals.html#silence)\n  - Create stream using a custom binder function [fromBinder](../globals.html#frombinder)\n  - Wrap jQuery events using [asEventStream](../globals.html#_)\n\n\n @typeparam V   Type of the elements/values in the stream/property\n\n */\nclass EventStream extends Observable {\n    constructor(desc, subscribe, handler, options) {\n        super(desc);\n        /** @hidden */\n        this._isEventStream = true;\n        if (options !== allowSync) {\n            subscribe = asyncWrapSubscribe(this, subscribe);\n        }\n        this.dispatcher = new Dispatcher(this, subscribe, handler);\n        registerObs(this);\n    }\n    /**\n     Buffers stream events with given delay.\n     The buffer is flushed at most once in the given interval. So, if your input\n     contains [1,2,3,4,5,6,7], then you might get two events containing [1,2,3,4]\n     and [5,6,7] respectively, given that the flush occurs between numbers 4 and 5.\n  \n     Also works with a given \"defer-function\" instead\n     of a delay. Here's a simple example, which is equivalent to\n     stream.bufferWithTime(10):\n  \n     ```js\n     stream.bufferWithTime(function(f) { setTimeout(f, 10) })\n     ```\n  \n     * @param delay buffer duration in milliseconds\n     */\n    bufferWithTime(delay) {\n        return bufferWithTime(this, delay);\n    }\n    /**\n     Buffers stream events with given count.\n     The buffer is flushed when it contains the given number of elements or the source stream ends.\n  \n     So, if you buffer a stream of `[1, 2, 3, 4, 5]` with count `2`, you'll get output\n     events with values `[1, 2]`, `[3, 4]` and `[5]`.\n  \n     * @param {number} count\n     */\n    bufferWithCount(count) {\n        return bufferWithCount(this, count);\n    }\n    /**\n     Buffers stream events and\n     flushes when either the buffer contains the given number elements or the\n     given amount of milliseconds has passed since last buffered event.\n  \n     * @param {number | DelayFunction} delay in milliseconds or as a function\n     * @param {number} count  maximum buffer size\n     */\n    bufferWithTimeOrCount(delay, count) {\n        return bufferWithTimeOrCount(this, delay, count);\n    }\n    changes() {\n        return this;\n    }\n    concat(other, options) {\n        return concatE(this, other, options);\n    }\n    /** @hidden */\n    transformChanges(desc, f) {\n        return f(this).withDesc(desc);\n    }\n    /**\n     For each element in the source stream, spawn a new\n     stream/property using the function `f`. Collect events from each of the spawned\n     streams into the result stream/property. Note that instead of a function, you can provide a\n     stream/property too. Also, the return value of function `f` can be either an\n     `Observable` (stream/property) or a constant value.\n  \n     `stream.flatMap()` can be used conveniently with [`Bacon.once()`](../globals.html#once) and [`Bacon.never()`](../globals.html#never)\n     for converting and filtering at the same time, including only some of the results.\n  \n     Example - converting strings to integers, skipping empty values:\n  \n     ```js\n     stream.flatMap(function(text) {\n      return (text != \"\") ? parseInt(text) : Bacon.never()\n  })\n     ```\n     */\n    flatMap(f) { return flatMap$1(this, f); }\n    /**\n     A [`flatMapWithConcurrencyLimit`](#flatmapwithconcurrencylimit) with limit of 1.\n     */\n    flatMapConcat(f) { return flatMapConcat(this, f); }\n    /**\n     Like [`flatMap`](#flatmap), but is applied only on [`Error`](error.html) events. Returned values go into the\n     value stream, unless an error event is returned. As an example, one type of error could result in a retry and another just\n     passed through, which can be implemented using flatMapError.\n     */\n    flatMapError(f) { return flatMapError(this, f); }\n    /**\n     Like [`flatMap`](#observable-flatmap), but only spawns a new\n     stream if the previously spawned stream has ended.\n     */\n    flatMapFirst(f) { return flatMapFirst(this, f); }\n    /**\n     Like [`flatMap`](#flatmap), but instead of including events from\n     all spawned streams, only includes them from the latest spawned stream.\n     You can think this as switching from stream to stream.\n     Note that instead of a function, you can provide a stream/property too.\n     */\n    flatMapLatest(f) { return flatMapLatest(this, f); }\n    /**\n     A super method of *flatMap* family. It limits the number of open spawned streams and buffers incoming events.\n     [`flatMapConcat`](#flatmapconcat) is `flatMapWithConcurrencyLimit(1)` (only one input active),\n     and [`flatMap`](#flatmap) is `flatMapWithConcurrencyLimit \u221E` (all inputs are piped to output).\n     */\n    flatMapWithConcurrencyLimit(limit, f) { return flatMapWithConcurrencyLimit(this, limit, f); }\n    flatMapEvent(f) { return flatMapEvent(this, f); }\n    /**\n     Scans stream with given seed value and accumulator function, resulting to a Property.\n     Difference to [`scan`](#scan) is that the function `f` can return an [`EventStream`](eventstream.html) or a [`Property`](property.html) instead\n     of a pure value, meaning that you can use [`flatScan`](#flatscan) for asynchronous updates of state. It serializes\n     updates so that that the next update will be queued until the previous one has completed.\n  \n     * @param seed initial value to start with\n     * @param f transition function from previous state and new value to next state\n     * @typeparam V2 state and result type\n     */\n    flatScan(seed, f) {\n        return flatScan(this, seed, f);\n    }\n    /**\n     Groups stream events to new streams by `keyF`. Optional `limitF` can be provided to limit grouped\n     stream life. Stream transformed by `limitF` is passed on if provided. `limitF` gets grouped stream\n     and the original event causing the stream to start as parameters.\n  \n     Calculator for grouped consecutive values until group is cancelled:\n  \n     ```\n     var events = [\n     {id: 1, type: \"add\", val: 3 },\n     {id: 2, type: \"add\", val: -1 },\n     {id: 1, type: \"add\", val: 2 },\n     {id: 2, type: \"cancel\"},\n     {id: 3, type: \"add\", val: 2 },\n     {id: 3, type: \"cancel\"},\n     {id: 1, type: \"add\", val: 1 },\n     {id: 1, type: \"add\", val: 2 },\n     {id: 1, type: \"cancel\"}\n     ]\n  \n     function keyF(event) {\n    return event.id\n  }\n  \n     function limitF(groupedStream, groupStartingEvent) {\n    var cancel = groupedStream.filter(function(x) { return x.type === \"cancel\"}).take(1)\n    var adds = groupedStream.filter(function(x) { return x.type === \"add\" })\n    return adds.takeUntil(cancel).map(\".val\")\n  }\n  \n     Bacon.sequentially(2, events)\n     .groupBy(keyF, limitF)\n     .flatMap(function(groupedStream) {\n      return groupedStream.fold(0, function(acc, x) { return acc + x })\n    })\n     .onValue(function(sum) {\n      console.log(sum)\n      // returns [-1, 2, 8] in an order\n    })\n     ```\n  \n     */\n    groupBy(keyF, limitF) {\n        return groupBy(this, keyF, limitF);\n    }\n    /**\n   Maps values using given function, returning a new\n   stream/property. Instead of a function, you can also provide a [Property](property.html),\n   in which case each element in the source stream will be mapped to the current value of\n   the given property.\n   */\n    map(f) {\n        return map$1(this, f);\n    }\n    merge(other) {\n        assertEventStream(other);\n        return mergeAll(this, other).withDesc(new Desc(this, \"merge\", [other]));\n    }\n    /**\n     Returns a stream/property that inverts boolean values (using `!`)\n     */\n    not() { return not(this); }\n    /**\n     Adds a starting value to the stream/property, i.e. concats a\n     single-element stream containing the single seed value  with this stream.\n     */\n    // TODO: should allow V|V2 signature\n    startWith(seed) {\n        return startWithE(this, seed);\n    }\n    /** @hidden */\n    subscribeInternal(sink = nullSink) {\n        return this.dispatcher.subscribe(sink);\n    }\n    /**\n     * Returns this stream.\n     */\n    toEventStream() { return this; }\n    /**\n     Creates a Property based on the\n     EventStream.\n  \n     Without arguments, you'll get a Property without an initial value.\n     The Property will get its first actual value from the stream, and after that it'll\n     always have a current value.\n  \n     You can also give an initial value that will be used as the current value until\n     the first value comes from the stream.\n     */\n    toProperty(initValue) {\n        let usedInitValue = arguments.length\n            ? toOption(initValue)\n            : none();\n        let disp = this.dispatcher;\n        let desc = new Desc(this, \"toProperty\", Array.prototype.slice.apply(arguments));\n        let streamSubscribe = disp.subscribe;\n        return new Property(desc, streamSubscribeToPropertySubscribe(usedInitValue, streamSubscribe));\n    }\n    transform(transformer, desc) {\n        return transformE(this, transformer, desc);\n    }\n    /**\n     Creates an EventStream/Property by sampling a given `samplee`\n     stream/property value at each event from the this stream/property.\n  \n     @param {Observable<V2>} samplee\n     @param f function to select/calculate the result value based on the value in the source stream and the samplee\n  \n     @typeparam V2  type of values in the samplee\n     @typeparam R   type of values in the result\n     */\n    withLatestFrom(samplee, f) {\n        return withLatestFromE(this, samplee, f);\n    }\n    /**\n     Lets you run a state machine\n     on an observable. Give it an initial state object and a state\n     transformation function that processes each incoming event and\n     returns an array containing the next state and an array of output\n     events. Here's an example where we calculate the total sum of all\n     numbers in the stream and output the value on stream end:\n  \n     ```js\n     Bacon.fromArray([1,2,3])\n     .withStateMachine(0, function(sum, event) {\n      if (event.hasValue)\n        return [sum + event.value, []]\n      else if (event.isEnd)\n        return [undefined, [new Bacon.Next(sum), event]]\n      else\n        return [sum, [event]]\n    })\n     ```\n     @param initState  initial state for the state machine\n     @param f          the function that defines the state machine\n     @typeparam  State   type of machine state\n     @typeparam  Out     type of values to be emitted\n     */\n    withStateMachine(initState, f) {\n        return withStateMachine(initState, f, this);\n    }\n}\n/** @hidden */\nfunction newEventStream(description, subscribe) {\n    return new EventStream(description, subscribe);\n}\n/** @hidden */\nfunction newEventStreamAllowSync(description, subscribe) {\n    return new EventStream(description, subscribe, undefined, allowSync);\n}\n\nfunction symbol(key) {\n    if (typeof Symbol !== \"undefined\" && Symbol[key]) {\n        return Symbol[key];\n    }\n    else if (typeof Symbol !== \"undefined\" && typeof Symbol.for === \"function\") {\n        return Symbol[key] = Symbol.for(key);\n    }\n    else {\n        return \"@@\" + key;\n    }\n}\n\nclass ESObservable {\n    constructor(observable) {\n        this.observable = observable;\n    }\n    subscribe(observerOrOnNext, onError, onComplete) {\n        const observer = typeof observerOrOnNext === 'function'\n            ? { next: observerOrOnNext, error: onError, complete: onComplete }\n            : observerOrOnNext;\n        const subscription = {\n            closed: false,\n            unsubscribe: function () {\n                subscription.closed = true;\n                cancel();\n            }\n        };\n        const cancel = this.observable.subscribe(function (event) {\n            if (hasValue(event) && observer.next) {\n                observer.next(event.value);\n            }\n            else if (isError(event)) {\n                if (observer.error)\n                    observer.error(event.error);\n                subscription.unsubscribe();\n            }\n            else if (event.isEnd) {\n                subscription.closed = true;\n                if (observer.complete)\n                    observer.complete();\n            }\n        });\n        return subscription;\n    }\n}\nESObservable.prototype[symbol('observable')] = function () {\n    return this;\n};\nObservable.prototype.toESObservable = function () {\n    return new ESObservable(this);\n};\nObservable.prototype[symbol('observable')] = Observable.prototype.toESObservable;\n\n/**\n Creates a Property from an initial value and updates the value based on multiple inputs.\n The inputs are defined similarly to [`Bacon.when`](#bacon-when), like this:\n\n ```js\n var result = Bacon.update(\n initial,\n [x,y,z, (previous,x,y,z) => { ... }],\n [x,y,   (previous,x,y) => { ... }])\n ```\n\n As input, each function above will get the previous value of the `result` Property, along with values from the listed Observables.\n The value returned by the function will be used as the next value of `result`.\n\n Just like in [`Bacon.when`](#when), only EventStreams will trigger an update, while Properties will be just sampled.\n So, if you list a single EventStream and several Properties, the value will be updated only when an event occurs in the EventStream.\n\n Here's a simple gaming example:\n\n ```js\n let scoreMultiplier = Bacon.constant(1)\n let hitUfo = Bacon.interval(1000)\n let hitMotherShip = Bacon.later(10000)\n let score = Bacon.update(\n 0,\n [hitUfo, scoreMultiplier, (score, _, multiplier) => score + 100 * multiplier ],\n [hitMotherShip, (score, _) => score + 2000 ]\n )\n ```\n\n In the example, the `score` property is updated when either `hitUfo` or `hitMotherShip` occur. The `scoreMultiplier` Property is sampled to take multiplier into account when `hitUfo` occurs.\n\n * @param initial\n * @param {UpdatePattern<Out>} patterns\n * @returns {Property<Out>}\n */\nfunction update(initial, ...patterns) {\n    let rawPatterns = extractRawPatterns(patterns);\n    for (var i = 0; i < rawPatterns.length; i++) {\n        let pattern = rawPatterns[i];\n        pattern[1] = lateBindFirst(pattern[1]);\n    }\n    return when(...rawPatterns).scan(initial, (function (x, f) {\n        return f(x);\n    })).withDesc(new Desc(\"Bacon\", \"update\", [initial, ...patterns]));\n}\nfunction lateBindFirst(f) {\n    return function (...args) {\n        return function (i) {\n            return f(...[i].concat(args));\n        };\n    };\n}\n\n/**\n Creates an EventStream that delivers the given\n series of values (given as array) to the first subscriber. The stream ends after these\n values have been delivered. You can also send [`Bacon.Error`](classes/error.html) events, or\n any combination of pure values and error events like this:\n `Bacon.fromArray([1, new Bacon.Error()])\n\n @param   values    Array of values or events to repeat\n @typeparam V Type of stream elements\n */\nfunction fromArray(values) {\n    assertArray(values);\n    if (!values.length) {\n        return never().withDesc(new Desc(\"Bacon\", \"fromArray\", values));\n    }\n    else {\n        var i = 0;\n        var stream = new EventStream(new Desc(\"Bacon\", \"fromArray\", [values]), function (sink) {\n            var unsubd = false;\n            var reply = more;\n            var pushing = false;\n            var pushNeeded = false;\n            function push() {\n                pushNeeded = true;\n                if (pushing) {\n                    return;\n                }\n                if (i === values.length) {\n                    sink(endEvent());\n                    return false;\n                }\n                pushing = true;\n                while (pushNeeded) {\n                    pushNeeded = false;\n                    if ((reply !== noMore) && !unsubd) {\n                        var value = values[i++];\n                        reply = sink(toEvent(value));\n                        if (reply !== noMore) {\n                            if (i === values.length) {\n                                sink(endEvent());\n                            }\n                            else {\n                                UpdateBarrier.afterTransaction(stream, push);\n                            }\n                        }\n                    }\n                }\n                pushing = false;\n                return pushing;\n            }\n            UpdateBarrier.soonButNotYet(stream, push);\n            return function () {\n                unsubd = true;\n                return unsubd;\n            };\n        });\n        return stream;\n    }\n}\n\nfunction isEventSourceFn(x) {\n    return _.isFunction(x);\n}\n// Wrap DOM EventTarget, Node EventEmitter, or\n// [un]bind: (Any, (Any) -> None) -> None interfaces\n// common in MVCs as EventStream\n//\n// target - EventTarget or EventEmitter, source of events\n// eventSource - event name to bind or a function that performs custom binding\n// eventTransformer - defaults to returning the first argument to handler\n//\n// Example 1:\n//\n//   Bacon.fromEventTarget(document.body, \"click\")\n//   # => EventStream\n//\n//   Bacon.fromEventTarget(document.body, \"scroll\", {passive: true})\n//   # => EventStream\n//\n//   Bacon.fromEventTarget (new EventEmitter(), \"data\")\n//   # => EventStream\n//\n// Returns EventStream\n/** @hidden */\nvar eventMethods = [\n    [\"addEventListener\", \"removeEventListener\"],\n    [\"addListener\", \"removeListener\"],\n    [\"on\", \"off\"],\n    [\"bind\", \"unbind\"]\n];\nvar findHandlerMethods = function (target) {\n    var pair;\n    for (var i = 0; i < eventMethods.length; i++) {\n        pair = eventMethods[i];\n        var methodPair = [target[pair[0]], target[pair[1]]];\n        if (methodPair[0] && methodPair[1]) {\n            return methodPair;\n        }\n    }\n    for (var j = 0; j < eventMethods.length; j++) {\n        pair = eventMethods[j];\n        var addListener = target[pair[0]];\n        if (addListener) {\n            return [addListener, function () { }];\n        }\n    }\n    throw new Error(\"No suitable event methods in \" + target);\n};\n/**\n creates an EventStream from events\n on a DOM EventTarget or Node.JS EventEmitter object, or an object that supports event listeners using `on`/`off` methods.\n You can also pass an optional function that transforms the emitted\n events' parameters.\n\n The simple form:\n\n ```js\n Bacon.fromEvent(document.body, \"click\").onValue(function() { alert(\"Bacon!\") })\n ```\n\n Using a binder function:\n\n ```js\n Bacon.fromEvent(\n window,\n function(binder, listener) {\n    binder(\"scroll\", listener, {passive: true})\n  }\n ).onValue(function() {\n  console.log(window.scrollY)\n})\n ```\n\n @param target\n @param eventSource\n @param eventTransformer\n @typeparam V Type of stream elements\n\n */\nfunction fromEvent(target, eventSource, eventTransformer) {\n    var [sub, unsub] = findHandlerMethods(target);\n    var desc = new Desc(\"Bacon\", \"fromEvent\", [target, eventSource]);\n    return fromBinder(function (handler) {\n        if (isEventSourceFn(eventSource)) {\n            eventSource(sub.bind(target), handler);\n            return function () {\n                return eventSource(unsub.bind(target), handler);\n            };\n        }\n        else {\n            sub.call(target, eventSource, handler);\n            return function () {\n                return unsub.call(target, eventSource, handler);\n            };\n        }\n    }, eventTransformer).withDesc(desc);\n}\n\n/**\n A shorthand for combining multiple\n sources (streams, properties, constants) as array and assigning the\n side-effect function f for the values. The following example would log\n the number 3.\n\n ```js\n function f(a, b) { console.log(a + b) }\n Bacon.onValues(Bacon.constant(1), Bacon.constant(2), f)\n ```\n */\nfunction onValues(...args) {\n    return combineAsArray(args.slice(0, args.length - 1)).onValues(args[arguments.length - 1]);\n}\n\n/**\n Calls generator function which is expected to return an observable. The returned EventStream contains\n values and errors from the spawned observable. When the spawned observable ends, the generator is called\n again to spawn a new observable.\n\n This is repeated until the generator returns a falsy value\n (such as `undefined` or `false`).\n\n The generator function is called with one argument \u2014 iteration number starting from `0`.\n\n Here's an example:\n\n```js\nBacon.repeat(function(i) {\nif (i < 3) {\n  return Bacon.once(i);\n} else {\n  return false;\n}\n}).log()\n```\n\n The example will produce values 0, 1 and 2.\n\n @param {(number) => (Observable<V> | null)} generator\n @returns {EventStream<V>}\n @typeparam V Type of stream elements\n\n */\nfunction repeat(generator) {\n    var index = 0;\n    return fromBinder(function (sink) {\n        var flag = false;\n        var reply = more;\n        var unsub = function () { };\n        function handleEvent(event) {\n            if (event.isEnd) {\n                if (!flag) {\n                    flag = true;\n                }\n                else {\n                    subscribeNext();\n                }\n                return more;\n            }\n            else {\n                return reply = sink(event);\n            }\n        }\n        function subscribeNext() {\n            var next;\n            flag = true;\n            while (flag && reply !== noMore) {\n                next = generator(index++);\n                flag = false;\n                if (next) {\n                    unsub = next.subscribeInternal(handleEvent);\n                }\n                else {\n                    sink(endEvent());\n                }\n            }\n            flag = true;\n        }\n        subscribeNext();\n        return () => unsub();\n    }).withDesc(new Desc(\"Bacon\", \"repeat\", [generator]));\n}\n\n/**\n Repeats given elements indefinitely\n with given interval in milliseconds. For example, `repeatedly(10, [1,2,3])`\n would lead to `1,2,3,1,2,3...` to be repeated indefinitely.\n\n @param delay between values, in milliseconds\n @param values array of values to repeat\n @typeparam V Type of stream elements\n\n */\nfunction repeatedly(delay, values) {\n    var index = 0;\n    return fromPoll(delay, function () {\n        return values[index++ % values.length];\n    }).withDesc(new Desc(\"Bacon\", \"repeatedly\", [delay, values]));\n}\n\n/**\n Creates a stream that ends after given amount of milliseconds, without emitting any values.\n\n @param duration duration of silence in milliseconds\n @typeparam V Type of stream elements\n */\nfunction silence(duration) {\n    return later(duration, \"\")\n        .filter(false)\n        .withDesc(new Desc(\"Bacon\", \"silence\", [duration]));\n}\n\n/**\n Used to retry the call when there is an [`Error`](classes/error.html) event in the stream produced by the `source` function.\n\n ```js\n var triggeringStream, ajaxCall // <- ajaxCall gives Errors on network or server errors\n ajaxResult = triggeringStream.flatMap(function(url) {\n    return Bacon.retry({\n        source: function(attemptNumber) { return ajaxCall(url) },\n        retries: 5,\n        isRetryable: function (error) { return error.httpStatusCode !== 404; },\n        delay: function(context) { return 100; } // Just use the same delay always\n    })\n})\n ```\n * @param options (click for details)\n */\nfunction retry(options) {\n    if (!_.isFunction(options.source)) {\n        throw new Error(\"'source' option has to be a function\");\n    }\n    var source = options.source;\n    var retries = options.retries || 0;\n    var retriesDone = 0;\n    var delay = options.delay || function () {\n        return 0;\n    };\n    var isRetryable = options.isRetryable || function () {\n        return true;\n    };\n    var finished = false;\n    var errorEvent = null;\n    return repeat(function (count) {\n        function valueStream() {\n            return source(count).endOnError().transform(function (event, sink) {\n                if (isError(event)) {\n                    errorEvent = event;\n                    if (!(isRetryable(errorEvent.error) && (retries === 0 || retriesDone < retries))) {\n                        finished = true;\n                        return sink(event);\n                    }\n                    else {\n                        return more;\n                    }\n                }\n                else {\n                    if (hasValue(event)) {\n                        errorEvent = null;\n                        finished = true;\n                    }\n                    return sink(event);\n                }\n            });\n        }\n        if (finished) {\n            return undefined;\n        }\n        else if (errorEvent) {\n            var context = {\n                error: errorEvent.error,\n                retriesDone\n            };\n            var pause = silence(delay(context));\n            retriesDone++;\n            return pause.concat(once(null).flatMap(valueStream));\n        }\n        else {\n            return valueStream();\n        }\n    }).withDesc(new Desc(\"Bacon\", \"retry\", [options]));\n}\n\n/**\n Creates a stream containing given\n values (given as array). Delivered with given interval in milliseconds.\n\n @param delay between elements, in milliseconds\n @param array of values or events\n @typeparam V Type of stream elements\n\n */\nfunction sequentially(delay, values) {\n    var index = 0;\n    return fromPoll(delay, function () {\n        var value = values[index++];\n        if (index < values.length) {\n            return value;\n        }\n        else if (index === values.length) {\n            return [toEvent(value), endEvent()];\n        }\n        else {\n            return endEvent();\n        }\n    }).withDesc(new Desc(\"Bacon\", \"sequentially\", [delay, values]));\n}\n\nfunction valueAndEnd(value) {\n    return [toEvent(value), endEvent()];\n}\n/**\n * Creates an EventStream from a Promise object such as JQuery Ajax.\n This stream will contain a single value or an error, followed immediately by stream end.\n You can use the optional abort flag (i.e. \u00B4fromPromise(p, true)\u00B4 to have the `abort` method of the given promise be called when all subscribers have been removed from the created stream.\n You can also pass an optional function that transforms the promise value into Events. The default is to transform the value into `[new Bacon.Next(value), new Bacon.End()]`.\n Check out this [example](https://github.com/raimohanska/baconjs-examples/blob/master/resources/public/index.html).\n\n *\n * @param {Promise<V>} source promise object\n * @param abort should we call the `abort` method of the Promise on unsubscribe. This is a nonstandard feature you should probably ignore.\n * @param {EventTransformer<V>} eventTransformer\n * @returns {EventStream<V>}\n */\nfunction fromPromise(promise, abort, eventTransformer = valueAndEnd) {\n    return fromBinder(function (handler) {\n        const bound = promise.then(handler, (e) => handler(new Error$1(e)));\n        if (bound && typeof bound.done === \"function\") {\n            bound.done();\n        }\n        if (abort) {\n            return function () {\n                if (typeof promise.abort === \"function\") {\n                    return promise.abort();\n                }\n            };\n        }\n        else {\n            return function () {\n            };\n        }\n    }, eventTransformer).withDesc(new Desc(\"Bacon\", \"fromPromise\", [promise]));\n}\n\nfunction withMethodCallSupport(wrapped) {\n    return function (f, ...args) {\n        if (typeof f === \"object\" && args.length) {\n            var context = f;\n            var methodName = args[0];\n            f = function (...args) {\n                return context[methodName](...args);\n            };\n            args = args.slice(1);\n        }\n        return wrapped(f, ...args);\n    };\n}\nfunction partiallyApplied(f, applied) {\n    return function (...args) { return f(...(applied.concat(args))); };\n}\nconst makeFunction_ = withMethodCallSupport(function (f, ...args) {\n    if (_.isFunction(f)) {\n        if (args.length) {\n            return partiallyApplied(f, args);\n        }\n        else {\n            return f;\n        }\n    }\n    else {\n        return _.always(f);\n    }\n});\n/** @hidden */\nfunction makeFunction(f, args) {\n    return makeFunction_(f, ...args);\n}\n\n// TODO: types/doc for the object, fnname variant\n/**\n Creates an EventStream from a function that\n accepts a callback. The function is supposed to call its callback just\n once. For example:\n\n ```js\n Bacon.fromCallback(callback => callback(\"bacon\"))\n ```\n\n This would create a stream that outputs a single value \"Bacon!\" and ends\n after that. The use of setTimeout causes the value to be delayed by 1\n second.\n\n You can also give any number of arguments to [`fromCallback`](#bacon-fromcallback), which will be\n passed to the function. These arguments can be simple variables, Bacon\n EventStreams or Properties. For example the following will output \"Bacon rules\":\n\n ```js\n bacon = Bacon.constant('bacon')\n Bacon.fromCallback(function(a, b, callback) {\n  callback(a + ' ' + b);\n}, bacon, 'rules').log();\n ```\n\n * @param f\n * @param args\n * @returns {EventStream<V>}\n */\nfunction fromCallback(f, ...args) {\n    return fromBinder(function (handler) {\n        makeFunction(f, args)(handler);\n        return nop;\n    }, function (value) {\n        return [value, endEvent()];\n    }).withDesc(new Desc(\"Bacon\", \"fromCallback\", [f, ...args]));\n}\n/**\nBehaves the same way as `Bacon.fromCallback`,\nexcept that it expects the callback to be called in the Node.js convention:\n`callback(error, data)`, where error is null if everything is fine. For example:\n\n```js\nvar Bacon = require('baconjs').Bacon,\nfs = require('fs');\nvar read = Bacon.fromNodeCallback(fs.readFile, 'input.txt');\nread.onError(function(error) { console.log(\"Reading failed: \" + error); });\nread.onValue(function(value) { console.log(\"Read contents: \" + value); });\n```\n\n */\nfunction fromNodeCallback(f, ...args) {\n    return fromBinder(function (handler) {\n        makeFunction(f, args)(handler);\n        return nop;\n    }, function (error, value) {\n        if (error) {\n            return [new Error$1(error), endEvent()];\n        }\n        return [value, endEvent()];\n    }).withDesc(new Desc(\"Bacon\", \"fromNodeCallback\", [f, ...args]));\n}\n\n/**\n * Creates an EventStream from an\n [ES Observable](https://github.com/tc39/proposal-observable). Input can be any\n ES Observable implementation including RxJS and Kefir.\n */\nfunction fromESObservable(_observable) {\n    var observable;\n    if (_observable[symbol(\"observable\")]) {\n        observable = _observable[symbol(\"observable\")]();\n    }\n    else {\n        observable = _observable;\n    }\n    var desc = new Desc(\"Bacon\", \"fromESObservable\", [observable]);\n    return new EventStream(desc, function (sink) {\n        var cancel = observable.subscribe({\n            error: function (x) {\n                sink(new Error$1(x));\n                sink(new End());\n            },\n            next: function (value) { sink(new Next(value)); },\n            complete: function () {\n                sink(new End());\n            }\n        });\n        // Support RxJS Observables\n        if (cancel.unsubscribe) {\n            return function () { cancel.unsubscribe(); };\n        }\n        else {\n            return cancel;\n        }\n    });\n}\n\n/**\n An [`EventStream`](eventstream.html) that allows you to [`push`](#push) values into the stream.\n\n It also allows plugging other streams into the Bus, as inputs. The Bus practically\n merges all plugged-in streams and the values pushed using the [`push`](#push)\n method.\n */\nclass Bus extends EventStream {\n    constructor() {\n        super(new Desc(\"Bacon\", \"Bus\", []), (sink) => this.subscribeAll(sink));\n        /** @hidden */\n        this.pushing = false;\n        /** @hidden */\n        this.pushQueue = undefined;\n        /** @hidden */\n        this.ended = false;\n        /** @hidden */\n        this.subscriptions = [];\n        this.unsubAll = _.bind(this.unsubAll, this);\n        this.push = _.bind(this.push, this);\n        this.subscriptions = []; // new array for each Bus instance\n        this.ended = false;\n    }\n    /**\n     Plugs the given stream as an input to the Bus. All events from\n     the given stream will be delivered to the subscribers of the Bus.\n     Returns a function that can be used to unplug the same stream.\n  \n     The plug method practically allows you to merge in other streams after\n     the creation of the Bus.\n  \n     * @returns a function that can be called to \"unplug\" the source from Bus.\n     */\n    plug(input) {\n        assertObservable(input);\n        if (this.ended) {\n            return;\n        }\n        var sub = { input: input, unsub: undefined };\n        this.subscriptions.push(sub);\n        if (typeof this.sink !== \"undefined\") {\n            this.subscribeInput(sub);\n        }\n        return (() => this.unsubscribeInput(input));\n    }\n    /**\n     Ends the stream. Sends an [End](end.html) event to all subscribers.\n     After this call, there'll be no more events to the subscribers.\n     Also, the [`push`](#push), [`error`](#error) and [`plug`](#plug) methods have no effect.\n     */\n    end() {\n        this.ended = true;\n        this.unsubAll();\n        if (typeof this.sink === \"function\") {\n            return this.sink(endEvent());\n        }\n    }\n    /**\n     * Pushes a new value to the stream.\n     */\n    push(value) {\n        if (!this.ended && typeof this.sink === \"function\") {\n            var rootPush = !this.pushing;\n            if (!rootPush) {\n                //console.log(\"recursive push\")\n                if (!this.pushQueue)\n                    this.pushQueue = [];\n                this.pushQueue.push(value);\n                //console.log('queued', value)\n                return;\n            }\n            this.pushing = true;\n            try {\n                return this.sink(nextEvent(value));\n            }\n            finally {\n                if (rootPush && this.pushQueue) {\n                    //console.log(\"start processing queue\", this.pushQueue.length)\n                    var i = 0;\n                    while (i < this.pushQueue.length) {\n                        //console.log(\"in loop\", i, this.pushQueue[i])\n                        var v = this.pushQueue[i];\n                        this.sink(nextEvent(v));\n                        i++;\n                    }\n                    this.pushQueue = undefined;\n                }\n                this.pushing = false;\n            }\n        }\n    }\n    /**\n     * Pushes an error to this stream.\n     */\n    error(error) {\n        if (typeof this.sink === \"function\") {\n            return this.sink(new Error$1(error));\n        }\n    }\n    /** @hidden */\n    unsubAll() {\n        var iterable = this.subscriptions;\n        for (var i = 0, sub; i < iterable.length; i++) {\n            sub = iterable[i];\n            if (typeof sub.unsub === \"function\") {\n                sub.unsub();\n            }\n        }\n    }\n    /** @hidden */\n    subscribeAll(newSink) {\n        if (this.ended) {\n            newSink(endEvent());\n        }\n        else {\n            this.sink = newSink;\n            var iterable = this.subscriptions.slice();\n            for (var i = 0, subscription; i < iterable.length; i++) {\n                subscription = iterable[i];\n                this.subscribeInput(subscription);\n            }\n        }\n        return this.unsubAll;\n    }\n    /** @hidden */\n    guardedSink(input) {\n        return (event) => {\n            if (event.isEnd) {\n                this.unsubscribeInput(input);\n                return noMore;\n            }\n            else if (this.sink) {\n                return this.sink(event);\n            }\n            else {\n                return more;\n            }\n        };\n    }\n    /** @hidden */\n    subscribeInput(subscription) {\n        subscription.unsub = subscription.input.subscribeInternal(this.guardedSink(subscription.input));\n        return subscription.unsub;\n    }\n    /** @hidden */\n    unsubscribeInput(input) {\n        var iterable = this.subscriptions;\n        for (var i = 0, sub; i < iterable.length; i++) {\n            sub = iterable[i];\n            if (sub.input === input) {\n                if (typeof sub.unsub === \"function\") {\n                    sub.unsub();\n                }\n                this.subscriptions.splice(i, 1);\n                return;\n            }\n        }\n    }\n}\n\n/** @hidden */\nfunction tryF(f) {\n    return function (value) {\n        try {\n            return once(f(value));\n        }\n        catch (e) {\n            return once(new Error$1(e));\n        }\n    };\n}\n\n/**\n * JQuery/Zepto integration support\n */\nconst $ = {\n    /**\n     Creates an EventStream from events on a\n     jQuery or Zepto.js object. You can pass optional arguments to add a\n     jQuery live selector and/or a function that processes the jQuery\n     event and its parameters, if given, like this:\n  \n     ```js\n     $(\"#my-div\").asEventStream(\"click\", \".more-specific-selector\")\n     $(\"#my-div\").asEventStream(\"click\", \".more-specific-selector\", function(event, args) { return args[0] })\n     $(\"#my-div\").asEventStream(\"click\", function(event, args) { return args[0] })\n     ```\n  \n     Note: you need to install the `asEventStream` method on JQuery by calling\n     [init()](#_.aseventstream) as in `Bacon.$.init($)`.\n     */\n    asEventStream(eventName, selector, eventTransformer) {\n        if (_.isFunction(selector)) {\n            eventTransformer = selector;\n            selector = undefined;\n        }\n        return fromBinder((handler) => {\n            this.on(eventName, selector, handler);\n            return (() => this.off(eventName, selector, handler));\n        }, eventTransformer).withDesc(new Desc(this.selector || this, \"asEventStream\", [eventName]));\n    },\n    /**\n     * Installs the [asEventStream](#_.aseventstream) to the given jQuery/Zepto object (the `$` object).\n     */\n    init(jQuery) {\n        jQuery.fn.asEventStream = $.asEventStream;\n    }\n};\n\n/**\n *  Bacon.js version as string\n */\nconst version = '3.0.17';\n\nexport { $, Bus, CompositeUnsubscribe, Desc, End, Error$1 as Error, Event, EventStream, Initial, Next, Observable, Property, Value, _, combine, combineAsArray, combineTemplate, combineTwo, combineWith, concatAll, constant, fromArray, fromBinder, fromCallback, fromESObservable, fromEvent, fromEvent as fromEventTarget, fromNodeCallback, fromPoll, fromPromise, getScheduler, groupSimultaneous, hasValue, interval, isEnd, isError, isEvent, isInitial, isNext, later, mergeAll, more, never, noMore, nullSink, nullVoidSink, onValues, once, repeat, repeatedly, retry, sequentially, setScheduler, silence, spy, tryF as try, update, version, when, zipAsArray, zipWith };\n", "import { curry, pipe } from 'ramda';\nimport { isObject, flattenEnsurePipe, isArray } from '../util';\n\nconst GameStateSymbol = Symbol('GameState');\nexport interface GlobalState {\n  isGlobalState: true;\n}\nexport const isGlobalState = (state: any): state is GlobalState => {\n  if (isObject(state) && state.isGlobalState) return true;\n  if (isArray(state) && state[0] === 'isGlobalState') return true;\n  return false;\n}\nexport const createGlobalStateObject = (): GlobalState => ({ isGlobalState: true });\nexport const createGlobalStateArray = () => ['isGlobalState'];\n\nexport const mustReturnGlobalState = (methodOrMethodList) => {\n  if (isArray(methodOrMethodList)) {\n    return methodOrMethodList.map(mustReturnGlobalState);\n  }\n  return (...args) => {\n    const result = methodOrMethodList(...args);\n    if (!isGlobalState(result)) {\n      throw new Error('Expected function to return global state')\n    };\n    return result;\n  }\n}\n\nexport const gsp = (...deepArgs) => (gs) => {\n  if (!isGlobalState(gs)) throw new Error('gsp expected return function to be provided a global state type');\n  const args = mustReturnGlobalState(flattenEnsurePipe(...deepArgs))\n  return pipe(...args)(gs);\n}\n\nexport const gsCurry = method => curry(mustReturnGlobalState(method));\n", "import * as r from 'ramda'\nimport { isGlobalState } from './State/GlobalState';\n\nexport type DeepPartial<T> = T extends object ? {\n    [P in keyof T]?: DeepPartial<T[P]>;\n} : T;\n\nexport const isFunction = (item: any): item is Function => typeof item === 'function'\nexport const isNumber = (item): item is number => typeof item === 'number'\nexport const isString = (item): item is string => typeof item === 'string'\nexport const isArray = (item): item is Array<any> => Array.isArray(item);\nexport const isObject = (item) => typeof item === 'object' && item !== null;\nexport const hasOwnProperty = (item, prop) => isObject(item) && prop in item;\nexport const hasSymbol = (item, symbol) => isObject(item) && hasOwnProperty(item, symbol);\n\nexport const isNotNil = r.complement(r.isNil)\nexport const timeDifference = r.curry((timeSince, lastTime) => {\n    return (Date.now() - lastTime) >= timeSince\n})\n\nexport const updateIfReducer = (handler, updateFn) => (state, value) => {\n    if (handler(value)) return updateFn(state, value)\n    return state\n}\n\nexport const betweenEquals = (num, start, end) => num >= start && num <= end\n\nexport const random = (from, to=0) => {\n    const min = Math.min(from, to)\n    const max = Math.max(from, to)\n    return (Math.random() * (max - min)) + min\n}\n\nexport const flattenEnsurePipe = (...deepArgs) => {\n    const flatArgs = r.flatten(deepArgs)\n        .filter(isFunction);\n    if (flatArgs.length === 0) return [passthrough]\n    return flatArgs;\n}\nexport const passthrough = _ => _;\nexport const createEnum = <T extends string>(...args: T[]): Record<T, number> & Record<number, T> => {\n    return Object.fromEntries(\n        args.map((enumName, index) => [\n            [enumName, index],\n            [index, enumName],\n        ]).flat()\n    )\n}\n\nexport const isGenerator = (item: unknown): boolean => {\n    function* f() {}\n    return Boolean(item && item?.__proto__?.constructor?.name == f().__proto__.constructor.name)\n}\nexport const p = (...args) => (gs) => {\n    return args.reduce((gs, action) => {\n        if (isGlobalState(action)) return action;\n        if (Array.isArray(action)) return p(...action)(gs);\n        if (isFunction(action)) {\n            const exec = action(gs);\n            if (isGenerator(exec)) return p(...exec)(gs)\n            return p(exec);\n        }\n        throw new Error('Unknown value in p');\n    }, gs)\n}\n\n// R.mapObjIndexed\n// export function mapObjIndexed;\nexport const mapValues = <T, TResult, TKey extends string>(\n    callback: (value: T) => TResult,\n    obj: Record<TKey, T>,\n): Record<TKey, TResult> => {\n    const r = Object.entries<T>(obj)\n        .map(([id, value]) => [id, callback(value)])\n    return Object.fromEntries<T>(r as any) as any;\n}\n\n\nexport const filterValues = <T, TResult, TKey extends string>(\n    callback: (value: T) => boolean,\n    obj: Record<TKey, T>,\n): Record<TKey, TResult> => {\n    const r = Object.entries<T>(obj)\n        .filter(([, value]) => callback(value));\n    return Object.fromEntries<T>(r as any) as any;\n}\n\n\nexport const values = <V>(obj: Record<string, V>): V[] => Object.values(obj);\n\nconst km = new Map();\nexport const killIf = (key) => {\n    if (!km.has(key)) {\n        window.addEventListener('keydown', ({ code }) => {\n            if (code === key) {\n                km.set(key, true)\n            }\n        })\n        km.set(key, false)\n    }\n    if (km.get(key)) {\n        throw new Error('Killing now');\n    }\n}\n\nexport const loadImage = (url: string) => new Promise((resolve, reject) => {\n    const img = new Image()\n    img.onload = () => resolve(img)\n    img.onerror = (e) => reject(e)\n    img.src = url;\n})\n", "import { append, curry, forEach, mergeLeft, pipe } from 'ramda'\nimport { createEnum } from './util'\nimport { x, y } from './Vector'\n\nlet activeContext = null;\nexport const renderContext = (method: () => any) => {\n  activeContext = [];\n  method();\n  let response = activeContext;\n  activeContext = null;\n  return response\n}\nconst sendToContext = (item) => {\n  if (!activeContext) throw new Error('Outside of context');\n  activeContext.push(item);\n}\n\nexport const e = createEnum(\n'arcTo',\n'beginPath',\n'bezierCurveTo',\n'clearRect',\n'clip',\n'closePath',\n'createConicGradient',\n'createImageData',\n'createLinearGradient',\n'createPattern',\n'createRadialGradient',\n'drawFocusIfNeeded',\n'drawImage',\n'ellipse',\n'fill',\n'fillRect',\n'fillText',\n'getContextAttributes',\n'getImageData',\n'getLineDash',\n'getTransform',\n'isContextLost',\n'isPointInPath',\n'isPointInStroke',\n'lineTo',\n'measureText',\n'moveTo',\n'putImageData',\n'quadraticCurveTo',\n'rect',\n'reset',\n'resetTransform',\n'restore',\n'rotate',\n'roundRect',\n'save',\n'scale',\n'setLineDash',\n'setTransform',\n'stroke',\n'strokeRect',\n'strokeText',\n'transform',\n'translate',\n\n\n'direction',\n'fillStyle',\n'filter',\n'font',\n'fontKerning',\n'fontStretch',\n'fontVariantCaps',\n'globalAlpha',\n'globalCompositeOperation',\n'imageSmoothingEnabled',\n'imageSmoothingQuality',\n'letterSpacing',\n'lineCap',\n'lineDashOffset',\n'lineJoin',\n'lineWidth',\n'miterLimit',\n'shadowBlur',\n'shadowColor',\n'shadowOffsetX',\n'shadowOffsetY',\n'strokeStyle',\n'textAlign',\n'textBaseline',\n'textRendering',\n'wordSpacing',\n);\nconsole.log(e)\nexport const c = (e: number) => {\n  return (...args) => sendToContext([e, args])\n}\nexport const hf = () => (ctx, enumber, args) => {\n  ctx[e[enumber]](...args);\n}\nexport const hs = () => (ctx, enumber, [value]) => {\n  ctx[e[enumber]] = value;\n}\n\nexport const drawHandlers = new Map();\nexport const arcTo: CanvasRenderingContext2D['arcTo'] = c(e.arcTo);\nexport const beginPath: CanvasRenderingContext2D['beginPath'] = c(e.beginPath);\nexport const bezierCurveTo: CanvasRenderingContext2D['bezierCurveTo'] = c(e.bezierCurveTo);\nexport const clearRect: CanvasRenderingContext2D['clearRect'] = c(e.clearRect);\nexport const clip: CanvasRenderingContext2D['clip'] = c(e.clip);\nexport const closePath: CanvasRenderingContext2D['closePath'] = c(e.closePath);\nexport const createConicGradient: CanvasRenderingContext2D['createConicGradient'] = c(e.createConicGradient);\nexport const createImageData: CanvasRenderingContext2D['createImageData'] = c(e.createImageData);\nexport const createLinearGradient: CanvasRenderingContext2D['createLinearGradient'] = c(e.createLinearGradient);\nexport const createPattern: CanvasRenderingContext2D['createPattern'] = c(e.createPattern);\nexport const createRadialGradient: CanvasRenderingContext2D['createRadialGradient'] = c(e.createRadialGradient);\nexport const drawFocusIfNeeded: CanvasRenderingContext2D['drawFocusIfNeeded'] = c(e.drawFocusIfNeeded);\nexport const drawImage: CanvasRenderingContext2D['drawImage'] = c(e.drawImage);\nexport const ellipse: CanvasRenderingContext2D['ellipse'] = c(e.ellipse);\nexport const fill: CanvasRenderingContext2D['fill'] = c(e.fill);\nexport const fillRect: CanvasRenderingContext2D['fillRect'] = c(e.fillRect);\nexport const fillText: CanvasRenderingContext2D['fillText'] = c(e.fillText);\nexport const getContextAttributes: CanvasRenderingContext2D['getContextAttributes'] = c(e.getContextAttributes);\nexport const getImageData: CanvasRenderingContext2D['getImageData'] = c(e.getImageData);\nexport const getLineDash: CanvasRenderingContext2D['getLineDash'] = c(e.getLineDash);\nexport const getTransform: CanvasRenderingContext2D['getTransform'] = c(e.getTransform);\nexport const isContextLost: CanvasRenderingContext2D['isContextLost'] = c(e.isContextLost);\nexport const isPointInPath: CanvasRenderingContext2D['isPointInPath'] = c(e.isPointInPath);\nexport const isPointInStroke: CanvasRenderingContext2D['isPointInStroke'] = c(e.isPointInStroke);\nexport const lineTo: CanvasRenderingContext2D['lineTo'] = c(e.lineTo);\nexport const measureText: CanvasRenderingContext2D['measureText'] = c(e.measureText);\nexport const moveTo: CanvasRenderingContext2D['moveTo'] = c(e.moveTo);\nexport const putImageData: CanvasRenderingContext2D['putImageData'] = c(e.putImageData);\nexport const quadraticCurveTo: CanvasRenderingContext2D['quadraticCurveTo'] = c(e.quadraticCurveTo);\nexport const rect: CanvasRenderingContext2D['rect'] = c(e.rect);\nexport const reset: CanvasRenderingContext2D['reset'] = c(e.reset);\nexport const resetTransform: CanvasRenderingContext2D['resetTransform'] = c(e.resetTransform);\nexport const restore: CanvasRenderingContext2D['restore'] = c(e.restore);\nexport const rotate: CanvasRenderingContext2D['rotate'] = c(e.rotate);\nexport const roundRect: CanvasRenderingContext2D['roundRect'] = c(e.roundRect);\nexport const save: CanvasRenderingContext2D['save'] = c(e.save);\nexport const scale: CanvasRenderingContext2D['scale'] = c(e.scale);\nexport const setLineDash: CanvasRenderingContext2D['setLineDash'] = c(e.setLineDash);\nexport const setTransform: CanvasRenderingContext2D['setTransform'] = c(e.setTransform);\nexport const stroke: CanvasRenderingContext2D['stroke'] = c(e.stroke);\nexport const strokeRect: CanvasRenderingContext2D['strokeRect'] = c(e.strokeRect);\nexport const strokeText: CanvasRenderingContext2D['strokeText'] = c(e.strokeText);\nexport const transform: CanvasRenderingContext2D['transform'] = c(e.transform);\nexport const translate: CanvasRenderingContext2D['translate'] = c(e.translate);\ndrawHandlers.set(e.arcTo, hf());\ndrawHandlers.set(e.beginPath, hf());\ndrawHandlers.set(e.bezierCurveTo, hf());\ndrawHandlers.set(e.clearRect, hf());\ndrawHandlers.set(e.clip, hf());\ndrawHandlers.set(e.closePath, hf());\ndrawHandlers.set(e.createConicGradient, hf());\ndrawHandlers.set(e.createImageData, hf());\ndrawHandlers.set(e.createLinearGradient, hf());\ndrawHandlers.set(e.createPattern, hf());\ndrawHandlers.set(e.createRadialGradient, hf());\ndrawHandlers.set(e.drawFocusIfNeeded, hf());\ndrawHandlers.set(e.drawImage, hf());\ndrawHandlers.set(e.ellipse, hf());\ndrawHandlers.set(e.fill, hf());\ndrawHandlers.set(e.fillRect, hf());\ndrawHandlers.set(e.fillText, hf());\ndrawHandlers.set(e.getContextAttributes, hf());\ndrawHandlers.set(e.getImageData, hf());\ndrawHandlers.set(e.getLineDash, hf());\ndrawHandlers.set(e.getTransform, hf());\ndrawHandlers.set(e.isContextLost, hf());\ndrawHandlers.set(e.isPointInPath, hf());\ndrawHandlers.set(e.isPointInStroke, hf());\ndrawHandlers.set(e.lineTo, hf());\ndrawHandlers.set(e.measureText, hf());\ndrawHandlers.set(e.moveTo, hf());\ndrawHandlers.set(e.putImageData, hf());\ndrawHandlers.set(e.quadraticCurveTo, hf());\ndrawHandlers.set(e.rect, hf());\ndrawHandlers.set(e.reset, hf());\ndrawHandlers.set(e.resetTransform, hf());\ndrawHandlers.set(e.restore, hf());\ndrawHandlers.set(e.rotate, hf());\ndrawHandlers.set(e.roundRect, hf());\ndrawHandlers.set(e.save, hf());\ndrawHandlers.set(e.scale, hf());\ndrawHandlers.set(e.setLineDash, hf());\ndrawHandlers.set(e.setTransform, hf());\ndrawHandlers.set(e.stroke, hf());\ndrawHandlers.set(e.strokeRect, hf());\ndrawHandlers.set(e.strokeText, hf());\ndrawHandlers.set(e.transform, hf());\ndrawHandlers.set(e.translate, hf());\n\ntype SetMethod<T> = (value: T) => void;\nexport const direction: SetMethod<CanvasRenderingContext2D['direction']> = c(e.direction);\nexport const fillStyle: SetMethod<CanvasRenderingContext2D['fillStyle']> = c(e.fillStyle);\nexport const filter: SetMethod<CanvasRenderingContext2D['filter']> = c(e.filter);\nexport const font: SetMethod<CanvasRenderingContext2D['font']> = c(e.font);\nexport const fontKerning: SetMethod<CanvasRenderingContext2D['fontKerning']> = c(e.fontKerning);\nexport const fontStretch: SetMethod<CanvasRenderingContext2D['fontStretch']> = c(e.fontStretch);\nexport const fontVariantCaps: SetMethod<CanvasRenderingContext2D['fontVariantCaps']> = c(e.fontVariantCaps);\nexport const globalAlpha: SetMethod<CanvasRenderingContext2D['globalAlpha']> = c(e.globalAlpha);\nexport const globalCompositeOperation: SetMethod<CanvasRenderingContext2D['globalCompositeOperation']> = c(e.globalCompositeOperation);\nexport const imageSmoothingEnabled: SetMethod<CanvasRenderingContext2D['imageSmoothingEnabled']> = c(e.imageSmoothingEnabled);\nexport const imageSmoothingQuality: SetMethod<CanvasRenderingContext2D['imageSmoothingQuality']> = c(e.imageSmoothingQuality);\nexport const letterSpacing: SetMethod<CanvasRenderingContext2D['letterSpacing']> = c(e.letterSpacing);\nexport const lineCap: SetMethod<CanvasRenderingContext2D['lineCap']> = c(e.lineCap);\nexport const lineDashOffset: SetMethod<CanvasRenderingContext2D['lineDashOffset']> = c(e.lineDashOffset);\nexport const lineJoin: SetMethod<CanvasRenderingContext2D['lineJoin']> = c(e.lineJoin);\nexport const lineWidth: SetMethod<CanvasRenderingContext2D['lineWidth']> = c(e.lineWidth);\nexport const miterLimit: SetMethod<CanvasRenderingContext2D['miterLimit']> = c(e.miterLimit);\nexport const shadowBlur: SetMethod<CanvasRenderingContext2D['shadowBlur']> = c(e.shadowBlur);\nexport const shadowColor: SetMethod<CanvasRenderingContext2D['shadowColor']> = c(e.shadowColor);\nexport const shadowOffsetX: SetMethod<CanvasRenderingContext2D['shadowOffsetX']> = c(e.shadowOffsetX);\nexport const shadowOffsetY: SetMethod<CanvasRenderingContext2D['shadowOffsetY']> = c(e.shadowOffsetY);\nexport const strokeStyle: SetMethod<CanvasRenderingContext2D['strokeStyle']> = c(e.strokeStyle);\nexport const textAlign: SetMethod<CanvasRenderingContext2D['textAlign']> = c(e.textAlign);\nexport const textBaseline: SetMethod<CanvasRenderingContext2D['textBaseline']> = c(e.textBaseline);\nexport const textRendering: SetMethod<CanvasRenderingContext2D['textRendering']> = c(e.textRendering);\nexport const wordSpacing: SetMethod<CanvasRenderingContext2D['wordSpacing']> = c(e.wordSpacing);\ndrawHandlers.set(e.direction, hs());\ndrawHandlers.set(e.fillStyle, hs());\ndrawHandlers.set(e.filter, hs());\ndrawHandlers.set(e.font, hs());\ndrawHandlers.set(e.fontKerning, hs());\ndrawHandlers.set(e.fontStretch, hs());\ndrawHandlers.set(e.fontVariantCaps, hs());\ndrawHandlers.set(e.globalAlpha, hs());\ndrawHandlers.set(e.globalCompositeOperation, hs());\ndrawHandlers.set(e.imageSmoothingEnabled, hs());\ndrawHandlers.set(e.imageSmoothingQuality, hs());\ndrawHandlers.set(e.letterSpacing, hs());\ndrawHandlers.set(e.lineCap, hs());\ndrawHandlers.set(e.lineDashOffset, hs());\ndrawHandlers.set(e.lineJoin, hs());\ndrawHandlers.set(e.lineWidth, hs());\ndrawHandlers.set(e.miterLimit, hs());\ndrawHandlers.set(e.shadowBlur, hs());\ndrawHandlers.set(e.shadowColor, hs());\ndrawHandlers.set(e.shadowOffsetX, hs());\ndrawHandlers.set(e.shadowOffsetY, hs());\ndrawHandlers.set(e.strokeStyle, hs());\ndrawHandlers.set(e.textAlign, hs());\ndrawHandlers.set(e.textBaseline, hs());\ndrawHandlers.set(e.textRendering, hs());\ndrawHandlers.set(e.wordSpacing, hs());\n\nexport const executeOnCanvas = (ctx, [enumber, args]) => {\n  drawHandlers.get(enumber)(ctx, enumber, args)\n};", "import { renderState } from './draw'\nimport { fromEvent } from 'baconjs'\nimport { drawHandlers, executeOnCanvas } from './draw2'\n\nconst messageEvent = fromEvent(self, 'message')\nconst onGameMessage = messageEvent\n    .map(e => e?.data)\n    .filter(Boolean)\n\nconst onCanvasMessage = onGameMessage\n    .filter(e => e.type === 'canvas')\n    .map(({ canvas }) => canvas.getContext('2d'))\n\nconst onNewRenderMessage = onGameMessage\n    .filter(e => e.type === 'NewRenderer')\n\nconst onNewRenderMessage2 = onGameMessage\n    .filter(e => e.type === 'NewRenderer2')\n\nonCanvasMessage\n    .flatMap((ctx) =>\n        onNewRenderMessage\n            .map(message => [ctx, message])\n    )\n    .onValue(([ctx, { handlers }]) => {\n        renderState(ctx, handlers)\n    })\n\nonCanvasMessage\n    .flatMap((ctx) =>\n        onNewRenderMessage2\n            .map(message => [ctx, message])\n    )\n    .onValue(([ctx, { handlers }]) => {\n        for (let handler of handlers) {\n            executeOnCanvas(ctx, handler);\n        }\n    })\n"],
  "mappings": "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",
  "names": []
}
