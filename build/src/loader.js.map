{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/comlink@4.3.1/node_modules/comlink/src/comlink.ts", "../../src/CBTracker.ts", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/F.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/T.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/__.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_isPlaceholder.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_curry1.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_curry2.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/add.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_concat.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_arity.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_curryN.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/curryN.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/addIndex.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_curry3.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/adjust.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_isArray.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_isTransformer.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_dispatchable.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_reduced.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xfBase.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xall.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/all.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/max.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_map.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_isString.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_isArrayLike.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xwrap.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/bind.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_reduce.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xmap.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_has.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_isArguments.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/keys.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/map.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_isInteger.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/nth.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/prop.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/pluck.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/reduce.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/allPass.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/always.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/and.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xany.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/any.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/anyPass.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/ap.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_aperture.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xaperture.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/aperture.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/append.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/apply.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/values.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/applySpec.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/applyTo.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/ascend.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_assoc.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/isNil.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/assocPath.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/assoc.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/nAry.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/binary.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_isFunction.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/liftN.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/lift.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/both.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/call.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_makeFlat.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_forceReduced.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_flatCat.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xchain.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/chain.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/clamp.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_cloneRegExp.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/type.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_clone.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/clone.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/collectBy.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/comparator.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/not.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/complement.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_pipe.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_checkForMethod.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/slice.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/tail.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/pipe.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/reverse.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/compose.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/head.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_identity.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/identity.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/pipeWith.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/composeWith.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_arrayFromIterator.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_includesWith.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_functionName.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_objectIs.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_equals.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/equals.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_indexOf.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_includes.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_quote.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_toISOString.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_complement.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_filter.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_isObject.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xfilter.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/filter.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/reject.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_toString.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/toString.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/concat.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/cond.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/curry.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/constructN.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/construct.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/converge.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/count.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xreduceBy.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/reduceBy.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/countBy.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/dec.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/defaultTo.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/descend.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_Set.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/difference.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/differenceWith.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/remove.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_dissoc.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/dissocPath.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/dissoc.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/divide.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xdrop.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/drop.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xtake.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/take.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_dropLast.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xdropLast.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/dropLast.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_dropLastWhile.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xdropLastWhile.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/dropLastWhile.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xdropRepeatsWith.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/last.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/dropRepeatsWith.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/dropRepeats.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xdropWhile.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/dropWhile.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/or.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/either.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_isTypedArray.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/empty.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/takeLast.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/endsWith.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/eqBy.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/eqProps.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/evolve.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xfind.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/find.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xfindIndex.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/findIndex.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xfindLast.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/findLast.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xfindLastIndex.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/findLastIndex.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/flatten.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/flip.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/forEach.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/forEachObjIndexed.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/fromPairs.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/groupBy.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/groupWith.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/gt.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/gte.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/hasPath.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/has.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/hasIn.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/identical.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/ifElse.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/inc.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/includes.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/indexBy.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/indexOf.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/init.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/innerJoin.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/insert.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/insertAll.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xuniqBy.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/uniqBy.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/uniq.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/intersection.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/intersperse.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_objectAssign.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/objOf.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_stepCat.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/into.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/invert.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/invertObj.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/invoker.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/is.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/isEmpty.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/join.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/juxt.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/keysIn.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/lastIndexOf.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_isNumber.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/length.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/lens.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/update.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/lensIndex.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/paths.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/path.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/lensPath.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/lensProp.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/lt.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/lte.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/mapAccum.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/mapAccumRight.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/mapObjIndexed.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/match.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/mathMod.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/maxBy.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/sum.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/mean.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/median.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/memoizeWith.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/mergeAll.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/mergeWithKey.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/mergeDeepWithKey.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/mergeDeepLeft.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/mergeDeepRight.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/mergeDeepWith.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/mergeLeft.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/mergeRight.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/mergeWith.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/min.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/minBy.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_modify.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/modifyPath.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/modify.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/modulo.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/move.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/multiply.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/partialObject.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/negate.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/none.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/nthArg.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/o.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_of.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/of.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/omit.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/on.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/once.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_assertPromise.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/otherwise.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/over.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/pair.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_createPartialApplicator.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/partial.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/partialRight.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/partition.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/pathEq.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/pathOr.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/pathSatisfies.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/pick.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/pickAll.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/pickBy.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/prepend.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/product.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/useWith.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/project.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_promap.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xpromap.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/promap.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/propEq.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/propIs.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/propOr.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/propSatisfies.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/props.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/range.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/reduceRight.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/reduceWhile.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/reduced.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/times.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/repeat.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/replace.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/scan.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/sequence.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/set.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/sort.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/sortBy.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/sortWith.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/split.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/splitAt.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/splitEvery.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/splitWhen.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/splitWhenever.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/startsWith.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/subtract.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/symmetricDifference.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/symmetricDifferenceWith.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/takeLastWhile.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xtakeWhile.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/takeWhile.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xtap.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/tap.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_isRegExp.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/test.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/andThen.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/toLower.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/toPairs.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/toPairsIn.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/toUpper.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/transduce.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/transpose.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/traverse.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/trim.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/tryCatch.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/unapply.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/unary.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/uncurryN.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/unfold.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/union.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/internal/_xuniqWith.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/uniqWith.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/unionWith.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/unless.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/unnest.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/until.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/unwind.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/valuesIn.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/view.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/when.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/where.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/whereAny.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/whereEq.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/without.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/xor.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/xprod.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/zip.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/zipObj.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/zipWith.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/thunkify.js", "../../node_modules/.pnpm/ramda@0.28.0/node_modules/ramda/es/index.js", "../../src/utilities/generic.ts", "../../node_modules/.pnpm/immer@9.0.14/node_modules/immer/src/utils/errors.ts", "../../node_modules/.pnpm/immer@9.0.14/node_modules/immer/src/utils/common.ts", "../../node_modules/.pnpm/immer@9.0.14/node_modules/immer/src/utils/plugins.ts", "../../node_modules/.pnpm/immer@9.0.14/node_modules/immer/src/core/scope.ts", "../../node_modules/.pnpm/immer@9.0.14/node_modules/immer/src/core/finalize.ts", "../../node_modules/.pnpm/immer@9.0.14/node_modules/immer/src/core/proxy.ts", "../../node_modules/.pnpm/immer@9.0.14/node_modules/immer/src/core/immerClass.ts", "../../node_modules/.pnpm/immer@9.0.14/node_modules/immer/src/core/current.ts", "../../node_modules/.pnpm/immer@9.0.14/node_modules/immer/src/plugins/es5.ts", "../../node_modules/.pnpm/immer@9.0.14/node_modules/immer/src/plugins/patches.ts", "../../node_modules/.pnpm/immer@9.0.14/node_modules/immer/src/plugins/mapset.ts", "../../node_modules/.pnpm/immer@9.0.14/node_modules/immer/src/plugins/all.ts", "../../node_modules/.pnpm/immer@9.0.14/node_modules/immer/src/immer.ts", "../../node_modules/.pnpm/immer@9.0.14/node_modules/immer/src/utils/env.ts", "../../src/State/State.ts", "../../src/draw.ts", "../../src/animate.ts", "../../src/Vector.ts", "../../src/canvas.ts", "../../node_modules/.pnpm/baconjs@3.0.17/node_modules/baconjs/dist/Bacon.mjs", "../../src/utilities/events.ts", "../../src/keys.ts", "../../src/user.ts", "../../src/uid.ts", "../../src/hitbox.ts", "../../src/enemy.ts", "../../src/bullets.ts", "../../src/debug.ts", "../../src/app-worker.ts", "../../src/loader.ts", "../../src/utilities/worker.ts"],
  "sourcesContent": ["/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously \u00AF\\_(\u30C4)_/\u00AF\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn\u2019t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n", "\nexport const CBTracker = <TCallback>(labelName: string) => {\n    const events = new Set<['once' | 'always', TCallback]>()\n    let eventId = -1;\n    const once = (...callbacks: TCallback[]) => {\n        callbacks.forEach(callback => events.add(['once', callback]));\n    }\n    const add = (...callbacks: TCallback[]) => {\n        callbacks.forEach(callback => events.add(['always', callback]));\n    }\n    return {\n        once,\n        add,\n        * [Symbol.iterator]() {\n            for (const ev of events) {\n                const [type, callback] = ev;\n                if (type === 'once') {\n                    events.delete(ev)\n                }\n                yield callback\n            }\n        }\n    }\n}", "/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = function () {\n  return false;\n};\n\nexport default F;", "/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = function () {\n  return true;\n};\n\nexport default T;", "/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @name __\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      const greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default {\n  '@@functional/placeholder': true\n};", "export default function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}", "import _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}", "import _curry1 from \"./_curry1.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\n\nvar add =\n/*#__PURE__*/\n_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\n\nexport default add;", "/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n  idx = 0;\n\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n\n  idx = 0;\n\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n\n  return result;\n}", "export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}", "import _arity from \"./_arity.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}", "import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _curryN from \"./internal/_curryN.js\";\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nexport default curryN;", "import _concat from \"./internal/_concat.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig (((a ...) -> b) ... -> [a] -> *) -> (((a ..., Int, [a]) -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      const mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\n\nvar addIndex =\n/*#__PURE__*/\n_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n\n    return fn.apply(this, args);\n  });\n});\n\nexport default addIndex;", "import _curry1 from \"./_curry1.js\";\nimport _curry2 from \"./_curry2.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}", "import _concat from \"./internal/_concat.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> (a -> a) -> [a] -> [a]\n * @param {Number} idx The index.\n * @param {Function} fn The function to apply.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(1, R.toUpper, ['a', 'b', 'c', 'd']);      //=> ['a', 'B', 'c', 'd']\n *      R.adjust(-1, R.toUpper, ['a', 'b', 'c', 'd']);     //=> ['a', 'b', 'c', 'D']\n * @symb R.adjust(-1, f, [a, b]) = [a, f(b)]\n * @symb R.adjust(0, f, [a, b]) = [f(a), b]\n */\n\nvar adjust =\n/*#__PURE__*/\n_curry3(function adjust(idx, fn, list) {\n  var len = list.length;\n\n  if (idx >= len || idx < -len) {\n    return list;\n  }\n\n  var _idx = (len + idx) % len;\n\n  var _list = _concat(list);\n\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\n\nexport default adjust;", "/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};", "export default function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}", "import _isArray from \"./_isArray.js\";\nimport _isTransformer from \"./_isTransformer.js\";\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer created by [transducerCreator] to return a new transformer\n * (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} transducerCreator transducer factory if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\nexport default function _dispatchable(methodNames, transducerCreator, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[arguments.length - 1];\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, Array.prototype.slice.call(arguments, 0, -1));\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = transducerCreator.apply(null, Array.prototype.slice.call(arguments, 0, -1));\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n}", "export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}", "export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};", "import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XAll =\n/*#__PURE__*/\nfunction () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall =\n/*#__PURE__*/\n_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\n\nexport default _xall;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xall from \"./internal/_xall.js\";\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      const equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\n\nvar all =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n\n    idx += 1;\n  }\n\n  return true;\n}));\n\nexport default all;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\n\nvar max =\n/*#__PURE__*/\n_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\n\nexport default max;", "export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n}", "export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}", "import _curry1 from \"./_curry1.js\";\nimport _isArray from \"./_isArray.js\";\nimport _isString from \"./_isString.js\";\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n *      _isArrayLike({nodeType: 1, length: 1}) // => false\n */\n\nvar _isArrayLike =\n/*#__PURE__*/\n_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});\n\nexport default _isArrayLike;", "var XWrap =\n/*#__PURE__*/\nfunction () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}", "import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\nvar bind =\n/*#__PURE__*/\n_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\nexport default bind;", "import _isArrayLike from \"./_isArrayLike.js\";\nimport _xwrap from \"./_xwrap.js\";\nimport bind from \"../bind.js\";\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}", "import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XMap =\n/*#__PURE__*/\nfunction () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap =\n/*#__PURE__*/\n_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\n\nexport default _xmap;", "export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}", "import _has from \"./_has.js\";\nvar toString = Object.prototype.toString;\n\nvar _isArguments =\n/*#__PURE__*/\nfunction () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nexport default _isArguments;", "import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\nimport _isArguments from \"./internal/_isArguments.js\"; // cover IE < 9 keys issues\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values, R.toPairs\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ?\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) :\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n});\nexport default keys;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _map from \"./internal/_map.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xmap from \"./internal/_xmap.js\";\nimport curryN from \"./curryN.js\";\nimport keys from \"./keys.js\";\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex, R.pluck, R.project\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\nvar map =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));\n\nexport default map;", "/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};", "import _curry2 from \"./internal/_curry2.js\";\nimport _isString from \"./internal/_isString.js\";\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\nvar nth =\n/*#__PURE__*/\n_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\nexport default nth;", "import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport nth from \"./nth.js\";\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx -> {s: a} -> a | Undefined\n * @param {String|Number} p The property name or array index\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path, R.props, R.pluck, R.project, R.nth\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.prop(0, [100]); //=> 100\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop =\n/*#__PURE__*/\n_curry2(function prop(p, obj) {\n  if (obj == null) {\n    return;\n  }\n\n  return _isInteger(p) ? nth(p, obj) : obj[p];\n});\n\nexport default prop;", "import _curry2 from \"./internal/_curry2.js\";\nimport map from \"./map.js\";\nimport prop from \"./prop.js\";\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.project, R.prop, R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\nvar pluck =\n/*#__PURE__*/\n_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n\nexport default pluck;", "import _curry3 from \"./internal/_curry3.js\";\nimport _reduce from \"./internal/_reduce.js\";\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\nvar reduce =\n/*#__PURE__*/\n_curry3(_reduce);\n\nexport default reduce;", "import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      const isQueen = R.propEq('rank', 'Q');\n *      const isSpade = R.propEq('suit', '\u2660\uFE0E');\n *      const isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '\u2663\uFE0E'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '\u2660\uFE0E'}); //=> true\n */\n\nvar allPass =\n/*#__PURE__*/\n_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n\n      idx += 1;\n    }\n\n    return true;\n  });\n});\n\nexport default allPass;", "import _curry1 from \"./internal/_curry1.js\";\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\n\nvar always =\n/*#__PURE__*/\n_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\n\nexport default always;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the first argument if it is falsy, otherwise the second argument.\n * Acts as the boolean `and` statement if both inputs are `Boolean`s.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any}\n * @see R.both, R.or\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\n\nvar and =\n/*#__PURE__*/\n_curry2(function and(a, b) {\n  return a && b;\n});\n\nexport default and;", "import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XAny =\n/*#__PURE__*/\nfunction () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n\n    return result;\n  };\n\n  return XAny;\n}();\n\nvar _xany =\n/*#__PURE__*/\n_curry2(function _xany(f, xf) {\n  return new XAny(f, xf);\n});\n\nexport default _xany;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xany from \"./internal/_xany.js\";\n/**\n * Returns `true` if at least one of the elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      const lessThan0 = R.flip(R.lt)(0);\n *      const lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\n\nvar any =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}));\n\nexport default any;", "import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      const isClub = R.propEq('suit', '\u2663');\n *      const isSpade = R.propEq('suit', '\u2660');\n *      const isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '\u2663'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '\u2660'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '\u2666'}); //=> false\n */\n\nvar anyPass =\n/*#__PURE__*/\n_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n\n      idx += 1;\n    }\n\n    return false;\n  });\n});\n\nexport default anyPass;", "import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport map from \"./map.js\";\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (r -> a -> b) -> (r -> a) -> (r -> b)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\n\nvar ap =\n/*#__PURE__*/\n_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } : _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\n\nexport default ap;", "export default function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n\n  return acc;\n}", "import _concat from \"./_concat.js\";\nimport _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XAperture =\n/*#__PURE__*/\nfunction () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture =\n/*#__PURE__*/\n_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\n\nexport default _xaperture;", "import _aperture from \"./internal/_aperture.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xaperture from \"./internal/_xaperture.js\";\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\n\nvar aperture =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xaperture, _aperture));\n\nexport default aperture;", "import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\n\nvar append =\n/*#__PURE__*/\n_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\n\nexport default append;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      const nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\n\nvar apply =\n/*#__PURE__*/\n_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\n\nexport default apply;", "import _curry1 from \"./internal/_curry1.js\";\nimport keys from \"./keys.js\";\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys, R.toPairs\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\n\nvar values =\n/*#__PURE__*/\n_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n\n  return vals;\n});\n\nexport default values;", "import _curry1 from \"./internal/_curry1.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport apply from \"./apply.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\nimport keys from \"./keys.js\";\nimport values from \"./values.js\"; // Use custom mapValues function to avoid issues with specs that include a \"map\" key and R.map\n// delegating calls to .map\n\nfunction mapValues(fn, obj) {\n  return _isArray(obj) ? obj.map(fn) : keys(obj).reduce(function (acc, key) {\n    acc[key] = fn(obj[key]);\n    return acc;\n  }, {});\n}\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      const getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\n\n\nvar applySpec =\n/*#__PURE__*/\n_curry1(function applySpec(spec) {\n  spec = mapValues(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return mapValues(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\n\nexport default applySpec;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a value and applies a function to it.\n *\n * This function is also known as the `thrush` combinator.\n *\n * @func\n * @memberOf R\n * @since v0.25.0\n * @category Function\n * @sig a -> (a -> b) -> b\n * @param {*} x The value\n * @param {Function} f The function to apply\n * @return {*} The result of applying `f` to `x`\n * @example\n *\n *      const t42 = R.applyTo(42);\n *      t42(R.identity); //=> 42\n *      t42(R.add(1)); //=> 43\n */\n\nvar applyTo =\n/*#__PURE__*/\n_curry2(function applyTo(x, f) {\n  return f(x);\n});\n\nexport default applyTo;", "import _curry3 from \"./internal/_curry3.js\";\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      const byAge = R.ascend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByYoungestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\n\nvar ascend =\n/*#__PURE__*/\n_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\n\nexport default ascend;", "import _isArray from \"./_isArray.js\";\nimport _isInteger from \"./_isInteger.js\";\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @private\n * @param {String|Number} prop The property name to set\n * @param {*} val The new value\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original except for the changed property.\n */\n\nexport default function _assoc(prop, val, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[prop] = val;\n    return arr;\n  }\n\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  result[prop] = val;\n  return result;\n}", "import _curry1 from \"./internal/_curry1.js\";\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\nvar isNil =\n/*#__PURE__*/\n_curry1(function isNil(x) {\n  return x == null;\n});\n\nexport default isNil;", "import _curry3 from \"./internal/_curry3.js\";\nimport _has from \"./internal/_has.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport _assoc from \"./internal/_assoc.js\";\nimport isNil from \"./isNil.js\";\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\n\nvar assocPath =\n/*#__PURE__*/\n_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n\n  var idx = path[0];\n\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n\n  return _assoc(idx, val, obj);\n});\n\nexport default assocPath;", "import _curry3 from \"./internal/_curry3.js\";\nimport assocPath from \"./assocPath.js\";\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig Idx -> a -> {k: v} -> {k: v}\n * @param {String|Number} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\n\nvar assoc =\n/*#__PURE__*/\n_curry3(function assoc(prop, val, obj) {\n  return assocPath([prop], val, obj);\n});\n\nexport default assoc;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      const takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\n\nvar nAry =\n/*#__PURE__*/\n_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\n\nexport default nAry;", "import _curry1 from \"./internal/_curry1.js\";\nimport nAry from \"./nAry.js\";\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (a -> b -> c -> ... -> z) -> ((a, b) -> z)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      const takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      const takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\n\nvar binary =\n/*#__PURE__*/\n_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\n\nexport default binary;", "export default function _isFunction(x) {\n  var type = Object.prototype.toString.call(x);\n  return type === '[object Function]' || type === '[object AsyncFunction]' || type === '[object GeneratorFunction]' || type === '[object AsyncGeneratorFunction]';\n}", "import _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport ap from \"./ap.js\";\nimport curryN from \"./curryN.js\";\nimport map from \"./map.js\";\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      const madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\n\nvar liftN =\n/*#__PURE__*/\n_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\n\nexport default liftN;", "import _curry1 from \"./internal/_curry1.js\";\nimport liftN from \"./liftN.js\";\n/**\n * \"lifts\" a function of arity >= 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      const madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([100, 200], [30, 40], [5, 6, 7]); //=> [135, 136, 137, 145, 146, 147, 235, 236, 237, 245, 246, 247]\n *\n *      const madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([10, 20], [1], [2, 3], [4], [100, 200]); //=> [117, 217, 118, 218, 127, 227, 128, 228]\n */\n\nvar lift =\n/*#__PURE__*/\n_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\n\nexport default lift;", "import _curry2 from \"./internal/_curry2.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport and from \"./and.js\";\nimport lift from \"./lift.js\";\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.either, R.and\n * @example\n *\n *      const gt10 = R.gt(R.__, 10)\n *      const lt20 = R.lt(R.__, 20)\n *      const f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n *\n *      R.both(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(false)\n *      R.both([false, false, 'a'], [11]); //=> [false, false, 11]\n */\n\nvar both =\n/*#__PURE__*/\n_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\n\nexport default both;", "import _curry1 from \"./internal/_curry1.js\";\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig ((*... -> a), *...) -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(\n *        R.repeat(' '),\n *        R.join(''),\n *        R.replace(/^(?!$)/gm)\n *      );\n *\n *      const format = R.converge(\n *        R.call,\n *        [\n *          R.pipe(R.prop('indent'), indentN),\n *          R.prop('value')\n *        ]\n *      );\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\n\nvar call =\n/*#__PURE__*/\n_curry1(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\n\nexport default call;", "import _isArrayLike from \"./_isArrayLike.js\";\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\n\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n\n    return result;\n  };\n}", "export default function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}", "import _forceReduced from \"./_forceReduced.js\";\nimport _isArrayLike from \"./_isArrayLike.js\";\nimport _reduce from \"./_reduce.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar preservingReduced = function (xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\n\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\n\nexport default _flatCat;", "import _curry2 from \"./_curry2.js\";\nimport _flatCat from \"./_flatCat.js\";\nimport map from \"../map.js\";\n\nvar _xchain =\n/*#__PURE__*/\n_curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\n\nexport default _xchain;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _makeFlat from \"./internal/_makeFlat.js\";\nimport _xchain from \"./internal/_xchain.js\";\nimport map from \"./map.js\";\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries.\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * If second argument is a function, `chain(f, g)(x)` is equivalent to `f(g(x), x)`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      const duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\n\nvar chain =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n\n  return _makeFlat(false)(map(fn, monad));\n}));\n\nexport default chain;", "import _curry3 from \"./internal/_curry3.js\";\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\n\nvar clamp =\n/*#__PURE__*/\n_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n\n  return value < min ? min : value > max ? max : value;\n});\n\nexport default clamp;", "export default function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}", "import _curry1 from \"./internal/_curry1.js\";\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nexport default type;", "import _cloneRegExp from \"./_cloneRegExp.js\";\nimport type from \"../type.js\";\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n\n      idx += 1;\n    }\n\n    refFrom[idx] = value;\n    refTo[idx] = copiedValue;\n\n    for (var key in value) {\n      if (value.hasOwnProperty(key)) {\n        copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n      }\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy(Object.create(Object.getPrototypeOf(value)));\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'BigInt64Array':\n    case 'BigUint64Array':\n      return value.slice();\n\n    default:\n      return value;\n  }\n}", "import _clone from \"./internal/_clone.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates a deep copy of the source that can be used in place of the source\n * object without retaining any references to it.\n * The source object may contain (nested) `Array`s and `Object`s,\n * `Number`s, `String`s, `Boolean`s and `Date`s.\n * `Function`s are assigned by reference rather than copied.\n *\n * Dispatches to a `clone` method if present.\n *\n * Note that if the source object has multiple nodes that share a reference,\n * the returned object will have the same structure, but the references will\n * be pointed to the location within the cloned value.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      const objects = [{}, {}, {}];\n *      const objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\n\nvar clone =\n/*#__PURE__*/\n_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\n\nexport default clone;", "import _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\n/**\n * Splits a list into sub-lists, based on the result of calling a key-returning function on each element,\n * and grouping the results according to values returned.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category List\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx a => (b -> a) -> [b] -> [[b]]\n * @param {Function} fn Function :: a -> Idx\n * @param {Array} list The array to group\n * @return {Array}\n *    An array of arrays where each sub-array contains items for which\n *    the String-returning function has returned the same value.\n * @see R.groupBy, R.partition\n * @example\n *      R.collectBy(R.prop('type'), [\n *        {type: 'breakfast', item: '\u2615\uFE0F'},\n *        {type: 'lunch', item: '\uD83C\uDF2F'},\n *        {type: 'dinner', item: '\uD83C\uDF5D'},\n *        {type: 'breakfast', item: '\uD83E\uDD50'},\n *        {type: 'lunch', item: '\uD83C\uDF55'}\n *      ]);\n *\n *      // [ [ {type: 'breakfast', item: '\u2615\uFE0F'},\n *      //     {type: 'breakfast', item: '\uD83E\uDD50'} ],\n *      //   [ {type: 'lunch', item: '\uD83C\uDF2F'},\n *      //     {type: 'lunch', item: '\uD83C\uDF55'} ],\n *      //   [ {type: 'dinner', item: '\uD83C\uDF5D'} ] ]\n */\n\nvar collectBy =\n/*#__PURE__*/\n_curry2(function collectBy(fn, list) {\n  var group = _reduce(function (o, x) {\n    var tag = fn(x);\n\n    if (o[tag] === undefined) {\n      o[tag] = [];\n    }\n\n    o[tag].push(x);\n    return o;\n  }, {}, list);\n\n  var newList = [];\n\n  for (var tag in group) {\n    newList.push(group[tag]);\n  }\n\n  return newList;\n});\n\nexport default collectBy;", "import _curry1 from \"./internal/_curry1.js\";\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      const byAge = R.comparator((a, b) => a.age < b.age);\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByIncreasingAge = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\n\nvar comparator =\n/*#__PURE__*/\n_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\n\nexport default comparator;", "import _curry1 from \"./internal/_curry1.js\";\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\n\nvar not =\n/*#__PURE__*/\n_curry1(function not(a) {\n  return !a;\n});\n\nexport default not;", "import lift from \"./lift.js\";\nimport not from \"./not.js\";\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      const isNotNil = R.complement(R.isNil);\n *      R.isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      R.isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\n\nvar complement =\n/*#__PURE__*/\nlift(not);\nexport default complement;", "export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}", "import _isArray from \"./_isArray.js\";\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implementation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}", "import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nexport default slice;", "import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\n\nvar tail =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_checkForMethod('tail',\n/*#__PURE__*/\nslice(1, Infinity)));\n\nexport default tail;", "import _arity from \"./internal/_arity.js\";\nimport _pipe from \"./internal/_pipe.js\";\nimport reduce from \"./reduce.js\";\nimport tail from \"./tail.js\";\n/**\n * Performs left-to-right function composition. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n * @symb R.pipe(f, g, h)(a)(b) = h(g(f(a)))(b)\n */\n\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}", "import _curry1 from \"./internal/_curry1.js\";\nimport _isString from \"./internal/_isString.js\";\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\n\nvar reverse =\n/*#__PURE__*/\n_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\n\nexport default reverse;", "import pipe from \"./pipe.js\";\nimport reverse from \"./reverse.js\";\n/**\n * Performs right-to-left function composition. The last argument may have\n * any arity; the remaining arguments must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      const classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      const yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n * @symb R.compose(f, g, h)(a)(b) = f(g(h(a)))(b)\n */\n\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n\n  return pipe.apply(this, reverse(arguments));\n}", "import nth from \"./nth.js\";\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\n\nvar head =\n/*#__PURE__*/\nnth(0);\nexport default head;", "export default function _identity(x) {\n  return x;\n}", "import _curry1 from \"./internal/_curry1.js\";\nimport _identity from \"./internal/_identity.js\";\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\nvar identity =\n/*#__PURE__*/\n_curry1(_identity);\n\nexport default identity;", "import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport head from \"./head.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport tail from \"./tail.js\";\nimport identity from \"./identity.js\";\n/**\n * Performs left-to-right function composition using transforming function. The first function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of pipeWith is not automatically curried. Transforming function is not used on the\n * first argument.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((* -> *), [((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)]) -> ((a, b, ..., n) -> z)\n * @param {Function} transformer The transforming function\n * @param {Array} functions The functions to pipe\n * @return {Function}\n * @see R.composeWith, R.pipe\n * @example\n *\n *      const pipeWhileNotNil = R.pipeWith((f, res) => R.isNil(res) ? res : f(res));\n *      const f = pipeWhileNotNil([Math.pow, R.negate, R.inc])\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipeWith(f)([g, h, i])(...args) = f(i, f(h, g(...args)))\n */\n\nvar pipeWith =\n/*#__PURE__*/\n_curry2(function pipeWith(xf, list) {\n  if (list.length <= 0) {\n    return identity;\n  }\n\n  var headList = head(list);\n  var tailList = tail(list);\n  return _arity(headList.length, function () {\n    return _reduce(function (result, f) {\n      return xf.call(this, f, result);\n    }, headList.apply(this, arguments), tailList);\n  });\n});\n\nexport default pipeWith;", "import _curry2 from \"./internal/_curry2.js\";\nimport pipeWith from \"./pipeWith.js\";\nimport reverse from \"./reverse.js\";\n/**\n * Performs right-to-left function composition using transforming function. The last function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of composeWith is not automatically curried. Transforming function is not used\n * on the last argument.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((* -> *), [(y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)]) -> ((a, b, ..., n) -> z)\n * @param {Function} transformer The transforming function\n * @param {Array} functions The functions to compose\n * @return {Function}\n * @see R.compose, R.pipeWith\n * @example\n *\n *      const composeWhileNotNil = R.composeWith((f, res) => R.isNil(res) ? res : f(res));\n *\n *      composeWhileNotNil([R.inc, R.prop('age')])({age: 1}) //=> 2\n *      composeWhileNotNil([R.inc, R.prop('age')])({}) //=> undefined\n *\n * @symb R.composeWith(f)([g, h, i])(...args) = f(g, f(h, i(...args)))\n */\n\nvar composeWith =\n/*#__PURE__*/\n_curry2(function composeWith(xf, list) {\n  return pipeWith.apply(this, [xf, reverse(list)]);\n});\n\nexport default composeWith;", "export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n}", "export default function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}", "export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}", "// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;", "import _arrayFromIterator from \"./_arrayFromIterator.js\";\nimport _includesWith from \"./_includesWith.js\";\nimport _functionName from \"./_functionName.js\";\nimport _has from \"./_has.js\";\nimport _objectIs from \"./_objectIs.js\";\nimport keys from \"../keys.js\";\nimport type from \"../type.js\";\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparison of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}", "import _curry2 from \"./internal/_curry2.js\";\nimport _equals from \"./internal/_equals.js\";\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nexport default equals;", "import equals from \"../equals.js\";\nexport default function _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } // non-zero numbers can utilise Set\n\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n\n    }\n  } // anything else not covered above, defer to R.equals\n\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}", "import _indexOf from \"./_indexOf.js\";\nexport default function _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}", "export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}", "/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;", "export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}", "export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}", "export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}", "import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFilter =\n/*#__PURE__*/\nfunction () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter =\n/*#__PURE__*/\n_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\n\nexport default _xfilter;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _filter from \"./internal/_filter.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xfilter from \"./internal/_xfilter.js\";\nimport keys from \"./keys.js\";\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar filter =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/filter', 'filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n\n    return acc;\n  }, {}, keys(filterable)) : // else\n  _filter(pred, filterable);\n}));\n\nexport default filter;", "import _complement from \"./internal/_complement.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport filter from \"./filter.js\";\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 !== 0;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar reject =\n/*#__PURE__*/\n_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\nexport default reject;", "import _includes from \"./_includes.js\";\nimport _map from \"./_map.js\";\nimport _quote from \"./_quote.js\";\nimport _toISOString from \"./_toISOString.js\";\nimport keys from \"../keys.js\";\nimport reject from \"../reject.js\";\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  }; //  mapPairs :: (Object, [String]) -> [String]\n\n\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return /^\\d+$/.test(k);\n      }, keys(x)))).join(', ') + ']';\n\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\n    case '[object Null]':\n      return 'null';\n\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\n    case '[object Undefined]':\n      return 'undefined';\n\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}", "import _curry1 from \"./internal/_curry1.js\";\nimport _toString from \"./internal/_toString.js\";\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\nvar toString =\n/*#__PURE__*/\n_curry1(function toString(val) {\n  return _toString(val, []);\n});\n\nexport default toString;", "import _curry2 from \"./internal/_curry2.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport _isString from \"./internal/_isString.js\";\nimport toString from \"./toString.js\";\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\n\nvar concat =\n/*#__PURE__*/\n_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\n\nexport default concat;", "import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport map from \"./map.js\";\nimport max from \"./max.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * **Please note**: This is not a direct substitute for a `switch` statement.\n * Remember that both elements of every pair passed to `cond` are *functions*,\n * and `cond` returns a function.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @see R.ifElse, R.unless, R.when\n * @example\n *\n *      const fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0\u00B0C')],\n *        [R.equals(100), R.always('water boils at 100\u00B0C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '\u00B0C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0\u00B0C'\n *      fn(50); //=> 'nothing special happens at 50\u00B0C'\n *      fn(100); //=> 'water boils at 100\u00B0C'\n */\n\nvar cond =\n/*#__PURE__*/\n_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n\n      idx += 1;\n    }\n  });\n});\n\nexport default cond;", "import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curry =\n/*#__PURE__*/\n_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\nexport default curry;", "import _curry2 from \"./internal/_curry2.js\";\nimport curry from \"./curry.js\";\nimport nAry from \"./nAry.js\";\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        const instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      const ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      const salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\n\nvar constructN =\n/*#__PURE__*/\n_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case 1:\n        return new Fn($0);\n\n      case 2:\n        return new Fn($0, $1);\n\n      case 3:\n        return new Fn($0, $1, $2);\n\n      case 4:\n        return new Fn($0, $1, $2, $3);\n\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\n\nexport default constructN;", "import _curry1 from \"./internal/_curry1.js\";\nimport constructN from \"./constructN.js\";\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      const AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      const animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      const animalSighting = R.invoker(0, 'sighting');\n *      const sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\n\nvar construct =\n/*#__PURE__*/\n_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\n\nexport default construct;", "import _curry2 from \"./internal/_curry2.js\";\nimport _map from \"./internal/_map.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. The arity of the new function is the same as the arity of\n * the longest branching function. When invoked, this new function is applied\n * to some arguments, and each branching function is applied to those same\n * arguments. The results of each branching function are passed as arguments\n * to the converging function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      const average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      const strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\n\nvar converge =\n/*#__PURE__*/\n_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\n\nexport default converge;", "import _reduce from \"./internal/_reduce.js\";\nimport curry from \"./curry.js\";\n/**\n * Returns the number of items in a given `list` matching the predicate `f`\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} predicate to match items against\n * @return {Array} list of items to count in\n * @example\n *\n *      const even = x => x % 2 == 0;\n *\n *      R.count(even, [1, 2, 3, 4, 5]); // => 2\n *      R.map(R.count(even), [[1, 1, 1], [2, 3, 4, 5], [6]]); // => [0, 2, 1]\n */\n\nvar count =\n/*#__PURE__*/\ncurry(function (pred, list) {\n  return _reduce(function (a, e) {\n    return pred(e) ? a + 1 : a;\n  }, 0, list);\n});\nexport default count;", "import _curryN from \"./_curryN.js\";\nimport _has from \"./_has.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XReduceBy =\n/*#__PURE__*/\nfunction () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy =\n/*#__PURE__*/\n_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\n\nexport default _xreduceBy;", "import _clone from \"./internal/_clone.js\";\nimport _curryN from \"./internal/_curryN.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _has from \"./internal/_has.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _reduced from \"./internal/_reduced.js\";\nimport _xreduceBy from \"./internal/_xreduceBy.js\";\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * The value function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to short circuit the iteration.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce, R.reduced\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\nvar reduceBy =\n/*#__PURE__*/\n_curryN(4, [],\n/*#__PURE__*/\n_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    var value = valueFn(_has(key, acc) ? acc[key] : _clone(valueAcc, [], [], false), elt);\n\n    if (value && value['@@transducer/reduced']) {\n      return _reduced(acc);\n    }\n\n    acc[key] = value;\n    return acc;\n  }, {}, list);\n}));\n\nexport default reduceBy;", "import reduceBy from \"./reduceBy.js\";\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      const numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      const letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\n\nvar countBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;", "import add from \"./add.js\";\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\n\nvar dec =\n/*#__PURE__*/\nadd(-1);\nexport default dec;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\n\nvar defaultTo =\n/*#__PURE__*/\n_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\n\nexport default defaultTo;", "import _curry3 from \"./internal/_curry3.js\";\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      const byAge = R.descend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByOldestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Peter', age: 78 }, { name: 'Emma', age: 70 }, { name: 'Mikhail', age: 62 }]\n */\n\nvar descend =\n/*#__PURE__*/\n_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\n\nexport default descend;", "import _includes from \"./_includes.js\";\n\nvar _Set =\n/*#__PURE__*/\nfunction () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  }; //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n\n\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  }; //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n\n\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n\n          return false;\n        }\n      } // these types can all utilise the native Set\n\n\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n\n          return false;\n        }\n\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    /* falls through */\n\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n\n        return false;\n      } // scan through all previously applied items\n\n\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n\n        return false;\n      }\n\n      return true;\n  }\n} // A simple Set type that honours R.equals semantics\n\n\nexport default _Set;", "import _curry2 from \"./internal/_curry2.js\";\nimport _Set from \"./internal/_Set.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\n\nvar difference =\n/*#__PURE__*/\n_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  var secondLen = second.length;\n  var toFilterOut = new _Set();\n\n  for (var i = 0; i < secondLen; i += 1) {\n    toFilterOut.add(second[i]);\n  }\n\n  while (idx < firstLen) {\n    if (toFilterOut.add(first[idx])) {\n      out[out.length] = first[idx];\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default difference;", "import _includesWith from \"./internal/_includesWith.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      const cmp = (x, y) => x.a === y.a;\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      const l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\n\nvar differenceWith =\n/*#__PURE__*/\n_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n\n  while (idx < firstLen) {\n    if (!_includesWith(pred, first[idx], second) && !_includesWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default differenceWith;", "import _curry3 from \"./internal/_curry3.js\";\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @see R.without\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\n\nvar remove =\n/*#__PURE__*/\n_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\n\nexport default remove;", "import _isInteger from \"./_isInteger.js\";\nimport _isArray from \"./_isArray.js\";\nimport remove from \"../remove.js\";\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @private\n * @param {String|Number} prop The name of the property to dissociate\n * @param {Object|Array} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n */\n\nexport default function _dissoc(prop, obj) {\n  if (obj == null) {\n    return obj;\n  }\n\n  if (_isInteger(prop) && _isArray(obj)) {\n    return remove(prop, 1, obj);\n  }\n\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  delete result[prop];\n  return result;\n}", "import _curry2 from \"./internal/_curry2.js\";\nimport _dissoc from \"./internal/_dissoc.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport assoc from \"./assoc.js\";\n/**\n * Makes a shallow clone of an object. Note that this copies and flattens\n * prototype properties onto the new object as well. All non-primitive\n * properties are copied by reference.\n *\n * @private\n * @param {String|Integer} prop The prop operating\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original.\n */\n\nfunction _shallowCloneObject(prop, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    return [].concat(obj);\n  }\n\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  return result;\n}\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\n\n\nvar dissocPath =\n/*#__PURE__*/\n_curry2(function dissocPath(path, obj) {\n  if (obj == null) {\n    return obj;\n  }\n\n  switch (path.length) {\n    case 0:\n      return obj;\n\n    case 1:\n      return _dissoc(path[0], obj);\n\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n\n      if (obj[head] == null) {\n        return _shallowCloneObject(head, obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n\n  }\n});\n\nexport default dissocPath;", "import _curry2 from \"./internal/_curry2.js\";\nimport dissocPath from \"./dissocPath.js\";\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc, R.omit\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\n\nvar dissoc =\n/*#__PURE__*/\n_curry2(function dissoc(prop, obj) {\n  return dissocPath([prop], obj);\n});\n\nexport default dissoc;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      const half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      const reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\n\nvar divide =\n/*#__PURE__*/\n_curry2(function divide(a, b) {\n  return a / b;\n});\n\nexport default divide;", "import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDrop =\n/*#__PURE__*/\nfunction () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop =\n/*#__PURE__*/\n_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\n\nexport default _xdrop;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdrop from \"./internal/_xdrop.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\n\nvar drop =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n\nexport default drop;", "import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XTake =\n/*#__PURE__*/\nfunction () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake =\n/*#__PURE__*/\n_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\n\nexport default _xtake;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xtake from \"./internal/_xtake.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\n\nvar take =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\n\nexport default take;", "import take from \"../take.js\";\nexport default function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}", "import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDropLast =\n/*#__PURE__*/\nfunction () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n\n    this.store(input);\n    return result;\n  };\n\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast =\n/*#__PURE__*/\n_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\n\nexport default _xdropLast;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _dropLast from \"./internal/_dropLast.js\";\nimport _xdropLast from \"./internal/_xdropLast.js\";\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\n\nvar dropLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLast, _dropLast));\n\nexport default dropLast;", "import slice from \"../slice.js\";\nexport default function dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n\n  return slice(0, idx + 1, xs);\n}", "import _curry2 from \"./_curry2.js\";\nimport _reduce from \"./_reduce.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDropLastWhile =\n/*#__PURE__*/\nfunction () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile =\n/*#__PURE__*/\n_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\n\nexport default _xdropLastWhile;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _dropLastWhile from \"./internal/_dropLastWhile.js\";\nimport _xdropLastWhile from \"./internal/_xdropLastWhile.js\";\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      const lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\n\nvar dropLastWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLastWhile, _dropLastWhile));\n\nexport default dropLastWhile;", "import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDropRepeatsWith =\n/*#__PURE__*/\nfunction () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nvar _xdropRepeatsWith =\n/*#__PURE__*/\n_curry2(function _xdropRepeatsWith(pred, xf) {\n  return new XDropRepeatsWith(pred, xf);\n});\n\nexport default _xdropRepeatsWith;", "import nth from \"./nth.js\";\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\n\nvar last =\n/*#__PURE__*/\nnth(-1);\nexport default last;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdropRepeatsWith from \"./internal/_xdropRepeatsWith.js\";\nimport last from \"./last.js\";\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      const l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\n\nvar dropRepeatsWith =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n\n  if (len !== 0) {\n    result[0] = list[0];\n\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n  }\n\n  return result;\n}));\n\nexport default dropRepeatsWith;", "import _curry1 from \"./internal/_curry1.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdropRepeatsWith from \"./internal/_xdropRepeatsWith.js\";\nimport dropRepeatsWith from \"./dropRepeatsWith.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\n\nvar dropRepeats =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_dispatchable([],\n/*#__PURE__*/\n_xdropRepeatsWith(equals),\n/*#__PURE__*/\ndropRepeatsWith(equals)));\n\nexport default dropRepeats;", "import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDropWhile =\n/*#__PURE__*/\nfunction () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n\n      this.f = null;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile =\n/*#__PURE__*/\n_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\n\nexport default _xdropWhile;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdropWhile from \"./internal/_xdropWhile.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      const lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\n\nvar dropWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n\n  return slice(idx, Infinity, xs);\n}));\n\nexport default dropWhile;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the first argument if it is truthy, otherwise the second argument.\n * Acts as the boolean `or` statement if both inputs are `Boolean`s.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any}\n * @see R.either, R.and\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\n\nvar or =\n/*#__PURE__*/\n_curry2(function or(a, b) {\n  return a || b;\n});\n\nexport default or;", "import _curry2 from \"./internal/_curry2.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport lift from \"./lift.js\";\nimport or from \"./or.js\";\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.both, R.or\n * @example\n *\n *      const gt10 = x => x > 10;\n *      const even = x => x % 2 === 0;\n *      const f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n *\n *      R.either(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(55)\n *      R.either([false, false, 'a'], [11]) // => [11, 11, \"a\"]\n */\n\nvar either =\n/*#__PURE__*/\n_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\n\nexport default either;", "/**\n * Tests whether or not an object is a typed array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is a typed array, `false` otherwise.\n * @example\n *\n *      _isTypedArray(new Uint8Array([])); //=> true\n *      _isTypedArray(new Float32Array([])); //=> true\n *      _isTypedArray([]); //=> false\n *      _isTypedArray(null); //=> false\n *      _isTypedArray({}); //=> false\n */\nexport default function _isTypedArray(val) {\n  var type = Object.prototype.toString.call(val);\n  return type === '[object Uint8ClampedArray]' || type === '[object Int8Array]' || type === '[object Uint8Array]' || type === '[object Int16Array]' || type === '[object Uint16Array]' || type === '[object Int32Array]' || type === '[object Uint32Array]' || type === '[object Float32Array]' || type === '[object Float64Array]' || type === '[object BigInt64Array]' || type === '[object BigUint64Array]';\n}", "import _curry1 from \"./internal/_curry1.js\";\nimport _isArguments from \"./internal/_isArguments.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport _isString from \"./internal/_isString.js\";\nimport _isTypedArray from \"./internal/_isTypedArray.js\";\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`),\n * TypedArray (`Uint8Array []`, `Float32Array []`, etc), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));               //=> Nothing()\n *      R.empty([1, 2, 3]);              //=> []\n *      R.empty('unicorns');             //=> ''\n *      R.empty({x: 1, y: 2});           //=> {}\n *      R.empty(Uint8Array.from('123')); //=> Uint8Array []\n */\n\nvar empty =\n/*#__PURE__*/\n_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() : _isTypedArray(x) ? x.constructor.from('') : void 0 // else\n  ;\n});\n\nexport default empty;", "import _curry2 from \"./internal/_curry2.js\";\nimport drop from \"./drop.js\";\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\n\nvar takeLast =\n/*#__PURE__*/\n_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\n\nexport default takeLast;", "import _curry2 from \"./internal/_curry2.js\";\nimport equals from \"./equals.js\";\nimport takeLast from \"./takeLast.js\";\n/**\n * Checks if a list ends with the provided sublist.\n *\n * Similarly, checks if a string ends with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @see R.startsWith\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\n\nvar endsWith =\n/*#__PURE__*/\n_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\n\nexport default endsWith;", "import _curry3 from \"./internal/_curry3.js\";\nimport equals from \"./equals.js\";\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\n\nvar eqBy =\n/*#__PURE__*/\n_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\n\nexport default eqBy;", "import _curry3 from \"./internal/_curry3.js\";\nimport equals from \"./equals.js\";\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      const o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      const o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\n\nvar eqProps =\n/*#__PURE__*/\n_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\n\nexport default eqProps;", "import _curry2 from \"./internal/_curry2.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isObject from \"./internal/_isObject.js\";\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const tomato = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      const transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\n\nvar evolve =\n/*#__PURE__*/\n_curry2(function evolve(transformations, object) {\n  if (!_isObject(object) && !_isArray(object)) {\n    return object;\n  }\n\n  var result = object instanceof Array ? [] : {};\n  var transformation, key, type;\n\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n\n  return result;\n});\n\nexport default evolve;", "import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFind =\n/*#__PURE__*/\nfunction () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind =\n/*#__PURE__*/\n_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\n\nexport default _xfind;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfind from \"./internal/_xfind.js\";\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\n\nvar find =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx += 1;\n  }\n}));\n\nexport default find;", "import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFindIndex =\n/*#__PURE__*/\nfunction () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex =\n/*#__PURE__*/\n_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\n\nexport default _xfindIndex;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfindIndex from \"./internal/_xfindIndex.js\";\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce, R.indexOf\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\n\nvar findIndex =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}));\n\nexport default findIndex;", "import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFindLast =\n/*#__PURE__*/\nfunction () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nvar _xfindLast =\n/*#__PURE__*/\n_curry2(function _xfindLast(f, xf) {\n  return new XFindLast(f, xf);\n});\n\nexport default _xfindLast;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfindLast from \"./internal/_xfindLast.js\";\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\n\nvar findLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx -= 1;\n  }\n}));\n\nexport default findLast;", "import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFindLastIndex =\n/*#__PURE__*/\nfunction () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nvar _xfindLastIndex =\n/*#__PURE__*/\n_curry2(function _xfindLastIndex(f, xf) {\n  return new XFindLastIndex(f, xf);\n});\n\nexport default _xfindLastIndex;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfindLastIndex from \"./internal/_xfindLastIndex.js\";\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce, R.lastIndexOf\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\n\nvar findLastIndex =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx -= 1;\n  }\n\n  return -1;\n}));\n\nexport default findLastIndex;", "import _curry1 from \"./internal/_curry1.js\";\nimport _makeFlat from \"./internal/_makeFlat.js\";\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\n\nvar flatten =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_makeFlat(true));\n\nexport default flatten;", "import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\n\nvar flip =\n/*#__PURE__*/\n_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\n\nexport default flip;", "import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      const printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\n\nvar forEach =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n\n  return list;\n}));\n\nexport default forEach;", "import _curry2 from \"./internal/_curry2.js\";\nimport keys from \"./keys.js\";\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      const printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\n\nvar forEachObjIndexed =\n/*#__PURE__*/\n_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n\n  return obj;\n});\n\nexport default forEachObjIndexed;", "import _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\n\nvar fromPairs =\n/*#__PURE__*/\n_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default fromPairs;", "import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport reduceBy from \"./reduceBy.js\";\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a key-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx a => (b -> a) -> [b] -> {a: [b]}\n * @param {Function} fn Function :: a -> Idx\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce, R.indexBy\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\nvar groupBy =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('groupBy',\n/*#__PURE__*/\nreduceBy(function (acc, item) {\n  acc.push(item);\n  return acc;\n}, [])));\n\nexport default groupBy;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) \u2192 Boolean) \u2192 [a] \u2192 [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * const isVowel = R.test(/^[aeiou]$/i);\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\n\nvar groupWith =\n/*#__PURE__*/\n_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    var nextidx = idx + 1;\n\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n\n  return res;\n});\n\nexport default groupWith;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\n\nvar gt =\n/*#__PURE__*/\n_curry2(function gt(a, b) {\n  return a > b;\n});\n\nexport default gt;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\n\nvar gte =\n/*#__PURE__*/\n_curry2(function gte(a, b) {\n  return a >= b;\n});\n\nexport default gte;", "import _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\nimport isNil from \"./isNil.js\";\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array} path The path to use.\n * @param {Object} obj The object to check the path in.\n * @return {Boolean} Whether the path exists.\n * @see R.has\n * @example\n *\n *      R.hasPath(['a', 'b'], {a: {b: 2}});         // => true\n *      R.hasPath(['a', 'b'], {a: {b: undefined}}); // => true\n *      R.hasPath(['a', 'b'], {a: {c: 2}});         // => false\n *      R.hasPath(['a', 'b'], {});                  // => false\n */\n\nvar hasPath =\n/*#__PURE__*/\n_curry2(function hasPath(_path, obj) {\n  if (_path.length === 0 || isNil(obj)) {\n    return false;\n  }\n\n  var val = obj;\n  var idx = 0;\n\n  while (idx < _path.length) {\n    if (!isNil(val) && _has(_path[idx], val)) {\n      val = val[_path[idx]];\n      idx += 1;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nexport default hasPath;", "import _curry2 from \"./internal/_curry2.js\";\nimport hasPath from \"./hasPath.js\";\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      const hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      const point = {x: 0, y: 0};\n *      const pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\n\nvar has =\n/*#__PURE__*/\n_curry2(function has(prop, obj) {\n  return hasPath([prop], obj);\n});\n\nexport default has;", "import _curry2 from \"./internal/_curry2.js\";\nimport isNil from \"./isNil.js\";\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      const square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\n\nvar hasIn =\n/*#__PURE__*/\n_curry2(function hasIn(prop, obj) {\n  if (isNil(obj)) {\n    return false;\n  }\n\n  return prop in obj;\n});\n\nexport default hasIn;", "import _objectIs from \"./internal/_objectIs.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * Note this is merely a curried version of ES6 `Object.is`.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      const o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\nvar identical =\n/*#__PURE__*/\n_curry2(_objectIs);\n\nexport default identical;", "import _curry3 from \"./internal/_curry3.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when, R.cond\n * @example\n *\n *      const incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({ count: 1 }); //=> { count: 2 }\n *      incCount({});           //=> { count: 1 }\n */\n\nvar ifElse =\n/*#__PURE__*/\n_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\n\nexport default ifElse;", "import add from \"./add.js\";\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\n\nvar inc =\n/*#__PURE__*/\nadd(1);\nexport default inc;", "import _includes from \"./internal/_includes.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Also works with strings.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.includes(3, [1, 2, 3]); //=> true\n *      R.includes(4, [1, 2, 3]); //=> false\n *      R.includes({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.includes([42], [[42]]); //=> true\n *      R.includes('ba', 'banana'); //=>true\n */\n\nvar includes =\n/*#__PURE__*/\n_curry2(_includes);\n\nexport default includes;", "import reduceBy from \"./reduceBy.js\";\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx a => (b -> a) -> [b] -> {a: b}\n * @param {Function} fn Function :: a -> Idx\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @see R.groupBy\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\n\nvar indexBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;", "import _curry2 from \"./internal/_curry2.js\";\nimport _indexOf from \"./internal/_indexOf.js\";\nimport _isArray from \"./internal/_isArray.js\";\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf, R.findIndex\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\n\nvar indexOf =\n/*#__PURE__*/\n_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\n\nexport default indexOf;", "import slice from \"./slice.js\";\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\n\nvar init =\n/*#__PURE__*/\nslice(0, -1);\nexport default init;", "import _includesWith from \"./internal/_includesWith.js\";\nimport _curry3 from \"./internal/_curry3.js\";\nimport _filter from \"./internal/_filter.js\";\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\n\nvar innerJoin =\n/*#__PURE__*/\n_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _includesWith(pred, x, ys);\n  }, xs);\n});\n\nexport default innerJoin;", "import _curry3 from \"./internal/_curry3.js\";\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\n\nvar insert =\n/*#__PURE__*/\n_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\n\nexport default insert;", "import _curry3 from \"./internal/_curry3.js\";\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\n\nvar insertAll =\n/*#__PURE__*/\n_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\n\nexport default insertAll;", "import _curry2 from \"./_curry2.js\";\nimport _Set from \"./_Set.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XUniqBy =\n/*#__PURE__*/\nfunction () {\n  function XUniqBy(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.set = new _Set();\n  }\n\n  XUniqBy.prototype['@@transducer/init'] = _xfBase.init;\n  XUniqBy.prototype['@@transducer/result'] = _xfBase.result;\n\n  XUniqBy.prototype['@@transducer/step'] = function (result, input) {\n    return this.set.add(this.f(input)) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XUniqBy;\n}();\n\nvar _xuniqBy =\n/*#__PURE__*/\n_curry2(function _xuniqBy(f, xf) {\n  return new XUniqBy(f, xf);\n});\n\nexport default _xuniqBy;", "import _Set from \"./internal/_Set.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xuniqBy from \"./internal/_xuniqBy.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\n\nvar uniqBy =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xuniqBy, function (fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}));\n\nexport default uniqBy;", "import identity from \"./identity.js\";\nimport uniqBy from \"./uniqBy.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\n\nvar uniq =\n/*#__PURE__*/\nuniqBy(identity);\nexport default uniq;", "import _includes from \"./internal/_includes.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _filter from \"./internal/_filter.js\";\nimport flip from \"./flip.js\";\nimport uniq from \"./uniq.js\";\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\n\nvar intersection =\n/*#__PURE__*/\n_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n\n  return uniq(_filter(flip(_includes)(lookupList), filteredList));\n});\n\nexport default intersection;", "import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('a', ['b', 'n', 'n', 's']); //=> ['b', 'a', 'n', 'a', 'n', 'a', 's']\n */\n\nvar intersperse =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n\n    idx += 1;\n  }\n\n  return out;\n}));\n\nexport default intersperse;", "import _has from \"./_has.js\"; // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n\n  while (idx < length) {\n    var source = arguments[idx];\n\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n\n    idx += 1;\n  }\n\n  return output;\n}\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      const matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\n\nvar objOf =\n/*#__PURE__*/\n_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\n\nexport default objOf;", "import _objectAssign from \"./_objectAssign.js\";\nimport _identity from \"./_identity.js\";\nimport _isArrayLike from \"./_isArrayLike.js\";\nimport _isTransformer from \"./_isTransformer.js\";\nimport objOf from \"../objOf.js\";\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _objectAssign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n\n  throw new Error('Cannot create transformer for ' + obj);\n}", "import _clone from \"./internal/_clone.js\";\nimport _curry3 from \"./internal/_curry3.js\";\nimport _isTransformer from \"./internal/_isTransformer.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _stepCat from \"./internal/_stepCat.js\";\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.transduce\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      const intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\n\nvar into =\n/*#__PURE__*/\n_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\n\nexport default into;", "import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\nimport keys from \"./keys.js\";\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      const raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\n\nvar invert =\n/*#__PURE__*/\n_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default invert;", "import _curry1 from \"./internal/_curry1.js\";\nimport keys from \"./keys.js\";\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      const raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      const raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\n\nvar invertObj =\n/*#__PURE__*/\n_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default invertObj;", "import _curry2 from \"./internal/_curry2.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport curryN from \"./curryN.js\";\nimport toString from \"./toString.js\";\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of any of the target object's methods to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n *\n *      const dog = {\n *        speak: async () => 'Woof!'\n *      };\n *      const speak = R.invoker(0, 'speak');\n *      speak(dog).then(console.log) //~> 'Woof!'\n *\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\nvar invoker =\n/*#__PURE__*/\n_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n\nexport default invoker;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * See if an object (i.e. `val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n * If `val` was created using `Object.create`, `R.is(Object, val) === true`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\n\nvar is =\n/*#__PURE__*/\n_curry2(function is(Ctor, val) {\n  return val instanceof Ctor || val != null && (val.constructor === Ctor || Ctor.name === 'Object' && typeof val === 'object');\n});\n\nexport default is;", "import _curry1 from \"./internal/_curry1.js\";\nimport empty from \"./empty.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);           //=> false\n *      R.isEmpty([]);                  //=> true\n *      R.isEmpty('');                  //=> true\n *      R.isEmpty(null);                //=> false\n *      R.isEmpty({});                  //=> true\n *      R.isEmpty({length: 0});         //=> false\n *      R.isEmpty(Uint8Array.from('')); //=> true\n */\n\nvar isEmpty =\n/*#__PURE__*/\n_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\n\nexport default isEmpty;", "import invoker from \"./invoker.js\";\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\n\nvar join =\n/*#__PURE__*/\ninvoker(1, 'join');\nexport default join;", "import _curry1 from \"./internal/_curry1.js\";\nimport converge from \"./converge.js\";\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      const getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\n\nvar juxt =\n/*#__PURE__*/\n_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\n\nexport default juxt;", "import _curry1 from \"./internal/_curry1.js\";\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\n\nvar keysIn =\n/*#__PURE__*/\n_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n\n  return ks;\n});\n\nexport default keysIn;", "import _curry2 from \"./internal/_curry2.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf, R.findLastIndex\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\n\nvar lastIndexOf =\n/*#__PURE__*/\n_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n\n      idx -= 1;\n    }\n\n    return -1;\n  }\n});\n\nexport default lastIndexOf;", "export default function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}", "import _curry1 from \"./internal/_curry1.js\";\nimport _isNumber from \"./internal/_isNumber.js\";\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\n\nvar length =\n/*#__PURE__*/\n_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\n\nexport default length;", "import _curry2 from \"./internal/_curry2.js\";\nimport map from \"./map.js\";\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\nvar lens =\n/*#__PURE__*/\n_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\n\nexport default lens;", "import _curry3 from \"./internal/_curry3.js\";\nimport adjust from \"./adjust.js\";\nimport always from \"./always.js\";\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, '_', ['a', 'b', 'c']);      //=> ['a', '_', 'c']\n *      R.update(-1, '_', ['a', 'b', 'c']);     //=> ['a', 'b', '_']\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\n\nvar update =\n/*#__PURE__*/\n_curry3(function update(idx, x, list) {\n  return adjust(idx, always(x), list);\n});\n\nexport default update;", "import _curry1 from \"./internal/_curry1.js\";\nimport lens from \"./lens.js\";\nimport nth from \"./nth.js\";\nimport update from \"./update.js\";\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over, R.nth\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\n\nvar lensIndex =\n/*#__PURE__*/\n_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\n\nexport default lensIndex;", "import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport nth from \"./nth.js\";\n/**\n * Retrieves the values at given paths of an object.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Object\n * @typedefn Idx = [String | Int | Symbol]\n * @sig [Idx] -> {a} -> [a | Undefined]\n * @param {Array} pathsArray The array of paths to be fetched.\n * @param {Object} obj The object to retrieve the nested properties from.\n * @return {Array} A list consisting of values at paths specified by \"pathsArray\".\n * @see R.path\n * @example\n *\n *      R.paths([['a', 'b'], ['p', 0, 'q']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, 3]\n *      R.paths([['a', 'b'], ['p', 'r']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, undefined]\n */\n\nvar paths =\n/*#__PURE__*/\n_curry2(function paths(pathsArray, obj) {\n  return pathsArray.map(function (paths) {\n    var val = obj;\n    var idx = 0;\n    var p;\n\n    while (idx < paths.length) {\n      if (val == null) {\n        return;\n      }\n\n      p = paths[idx];\n      val = _isInteger(p) ? nth(p, val) : val[p];\n      idx += 1;\n    }\n\n    return val;\n  });\n});\n\nexport default paths;", "import _curry2 from \"./internal/_curry2.js\";\nimport paths from \"./paths.js\";\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop, R.nth\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n *      R.path(['a', 'b', 0], {a: {b: [1, 2, 3]}}); //=> 1\n *      R.path(['a', 'b', -2], {a: {b: [1, 2, 3]}}); //=> 2\n */\n\nvar path =\n/*#__PURE__*/\n_curry2(function path(pathAr, obj) {\n  return paths([pathAr], obj)[0];\n});\n\nexport default path;", "import _curry1 from \"./internal/_curry1.js\";\nimport assocPath from \"./assocPath.js\";\nimport lens from \"./lens.js\";\nimport path from \"./path.js\";\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\n\nvar lensPath =\n/*#__PURE__*/\n_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\n\nexport default lensPath;", "import _curry1 from \"./internal/_curry1.js\";\nimport assoc from \"./assoc.js\";\nimport lens from \"./lens.js\";\nimport prop from \"./prop.js\";\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\nvar lensProp =\n/*#__PURE__*/\n_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\n\nexport default lensProp;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\n\nvar lt =\n/*#__PURE__*/\n_curry2(function lt(a, b) {\n  return a < b;\n});\n\nexport default lt;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\n\nvar lte =\n/*#__PURE__*/\n_curry2(function lte(a, b) {\n  return a <= b;\n});\n\nexport default lte;", "import _curry3 from \"./internal/_curry3.js\";\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.scan, R.addIndex, R.mapAccumRight\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\n\nvar mapAccum =\n/*#__PURE__*/\n_curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n\n  return [tuple[0], result];\n});\n\nexport default mapAccum;", "import _curry3 from \"./internal/_curry3.js\";\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [b + a, b + a];\n *\n *      R.mapAccumRight(appender, 5, digits); //=> ['12345', ['12345', '2345', '345', '45']]\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   f(f(f(a, d)[0], c)[0], b)[0],\n *   [\n *     f(a, d)[1],\n *     f(f(a, d)[0], c)[1],\n *     f(f(f(a, d)[0], c)[0], b)[1]\n *   ]\n * ]\n */\n\nvar mapAccumRight =\n/*#__PURE__*/\n_curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n\n  while (idx >= 0) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n\n  return [tuple[0], result];\n});\n\nexport default mapAccumRight;", "import _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport keys from \"./keys.js\";\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\n\nvar mapObjIndexed =\n/*#__PURE__*/\n_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\n\nexport default mapObjIndexed;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\n\nvar match =\n/*#__PURE__*/\n_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\n\nexport default match;", "import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      const clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      const seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\n\nvar mathMod =\n/*#__PURE__*/\n_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n\n  return (m % p + p) % p;\n});\n\nexport default mathMod;", "import _curry3 from \"./internal/_curry3.js\";\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\n\nvar maxBy =\n/*#__PURE__*/\n_curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\n\nexport default maxBy;", "import add from \"./add.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\n\nvar sum =\n/*#__PURE__*/\nreduce(add, 0);\nexport default sum;", "import _curry1 from \"./internal/_curry1.js\";\nimport sum from \"./sum.js\";\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\n\nvar mean =\n/*#__PURE__*/\n_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\n\nexport default mean;", "import _curry1 from \"./internal/_curry1.js\";\nimport mean from \"./mean.js\";\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\n\nvar median =\n/*#__PURE__*/\n_curry1(function median(list) {\n  var len = list.length;\n\n  if (len === 0) {\n    return NaN;\n  }\n\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\n\nexport default median;", "import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n * Care must be taken when implementing key generation to avoid key collision,\n * or if tracking references, memory leaks and mutating arguments.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(Number, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\n\nvar memoizeWith =\n/*#__PURE__*/\n_curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n\n    return cache[key];\n  });\n});\n\nexport default memoizeWith;", "import _objectAssign from \"./internal/_objectAssign.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates one new object with the own properties from a list of objects.\n * If a key exists in more than one object, the value from the last\n * object it exists in will be used.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\n\nvar mergeAll =\n/*#__PURE__*/\n_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\n\nexport default mergeAll;", "import _curry3 from \"./internal/_curry3.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\n\nvar mergeWithKey =\n/*#__PURE__*/\n_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\n\nexport default mergeWithKey;", "import _curry3 from \"./internal/_curry3.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport mergeWithKey from \"./mergeWithKey.js\";\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\n\nvar mergeDeepWithKey =\n/*#__PURE__*/\n_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\n\nexport default mergeDeepWithKey;", "import _curry2 from \"./internal/_curry2.js\";\nimport mergeDeepWithKey from \"./mergeDeepWithKey.js\";\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\n\nvar mergeDeepLeft =\n/*#__PURE__*/\n_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\n\nexport default mergeDeepLeft;", "import _curry2 from \"./internal/_curry2.js\";\nimport mergeDeepWithKey from \"./mergeDeepWithKey.js\";\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\n\nvar mergeDeepRight =\n/*#__PURE__*/\n_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\n\nexport default mergeDeepRight;", "import _curry3 from \"./internal/_curry3.js\";\nimport mergeDeepWithKey from \"./mergeDeepWithKey.js\";\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\n\nvar mergeDeepWith =\n/*#__PURE__*/\n_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\n\nexport default mergeDeepWith;", "import _objectAssign from \"./internal/_objectAssign.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepLeft, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeLeft({ 'age': 40 }, { 'name': 'fred', 'age': 10 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const resetToDefault = R.mergeLeft({x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeLeft(a, b) = {...b, ...a}\n */\n\nvar mergeLeft =\n/*#__PURE__*/\n_curry2(function mergeLeft(l, r) {\n  return _objectAssign({}, r, l);\n});\n\nexport default mergeLeft;", "import _objectAssign from \"./internal/_objectAssign.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeLeft, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeRight({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.mergeRight({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeRight(a, b) = {...a, ...b}\n */\n\nvar mergeRight =\n/*#__PURE__*/\n_curry2(function mergeRight(l, r) {\n  return _objectAssign({}, l, r);\n});\n\nexport default mergeRight;", "import _curry3 from \"./internal/_curry3.js\";\nimport mergeWithKey from \"./mergeWithKey.js\";\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\n\nvar mergeWith =\n/*#__PURE__*/\n_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\n\nexport default mergeWith;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\n\nvar min =\n/*#__PURE__*/\n_curry2(function min(a, b) {\n  return b < a ? b : a;\n});\n\nexport default min;", "import _curry3 from \"./internal/_curry3.js\";\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\n\nvar minBy =\n/*#__PURE__*/\n_curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\n\nexport default minBy;", "import _isArray from \"./_isArray.js\";\nimport _isInteger from \"./_isInteger.js\";\n/**\n * Makes a shallow clone of an object, applying the given fn to the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @private\n * @param {String|Number} prop The property name to set\n * @param {Function} fn The function to apply to the property\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original except for the changed property.\n */\n\nexport default function _modify(prop, fn, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[prop] = fn(arr[prop]);\n    return arr;\n  }\n\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  result[prop] = fn(result[prop]);\n  return result;\n}", "import _curry3 from \"./internal/_curry3.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport _has from \"./internal/_has.js\";\nimport _assoc from \"./internal/_assoc.js\";\nimport _modify from \"./internal/_modify.js\";\n/**\n * Creates a shallow clone of the passed object by applying an `fn` function\n * to the value at the given path.\n *\n * The function will not be invoked, and the object will not change\n * if its corresponding path does not exist in the object.\n * All non-primitive properties are copied to the new object by reference.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig [Idx] -> (v -> v) -> {k: v} -> {k: v}\n * @param {Array} path The path to be modified.\n * @param {Function} fn The function to apply to the path.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const person = {name: 'James', address: { zipCode: '90216' }};\n *      R.modifyPath(['address', 'zipCode'], R.reverse, person); //=> {name: 'James', address: { zipCode: '61209' }}\n *\n *      // Can handle arrays too\n *      const person = {name: 'James', addresses: [{ zipCode: '90216' }]};\n *      R.modifyPath(['addresses', 0, 'zipCode'], R.reverse, person); //=> {name: 'James', addresses: [{ zipCode: '61209' }]}\n */\n\nvar modifyPath =\n/*#__PURE__*/\n_curry3(function modifyPath(path, fn, object) {\n  if (!_isObject(object) && !_isArray(object) || path.length === 0) {\n    return object;\n  }\n\n  var idx = path[0];\n\n  if (!_has(idx, object)) {\n    return object;\n  }\n\n  if (path.length === 1) {\n    return _modify(idx, fn, object);\n  }\n\n  var val = modifyPath(Array.prototype.slice.call(path, 1), fn, object[idx]);\n\n  if (val === object[idx]) {\n    return object;\n  }\n\n  return _assoc(idx, val, object);\n});\n\nexport default modifyPath;", "import _curry3 from \"./internal/_curry3.js\";\nimport modifyPath from \"./modifyPath.js\";\n/**\n * Creates a copy of the passed object by applying an `fn` function to the given `prop` property.\n *\n * The function will not be invoked, and the object will not change\n * if its corresponding property does not exist in the object.\n * All non-primitive properties are copied to the new object by reference.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig Idx -> (v -> v) -> {k: v} -> {k: v}\n * @param {String|Number} prop The property to be modified.\n * @param {Function} fn The function to apply to the property.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const person = {name: 'James', age: 20, pets: ['dog', 'cat']};\n *      R.modify('age', R.add(1), person); //=> {name: 'James', age: 21, pets: ['dog', 'cat']}\n *      R.modify('pets', R.append('turtle'), person); //=> {name: 'James', age: 20, pets: ['dog', 'cat', 'turtle']}\n */\n\nvar modify =\n/*#__PURE__*/\n_curry3(function modify(prop, fn, object) {\n  return modifyPath([prop], fn, object);\n});\n\nexport default modify;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      const isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\n\nvar modulo =\n/*#__PURE__*/\n_curry2(function modulo(a, b) {\n  return a % b;\n});\n\nexport default modulo;", "import _curry3 from \"./internal/_curry3.js\";\n/**\n * Move an item, at index `from`, to index `to`, in a list of elements.\n * A new list will be created containing the new elements order.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} from The source index\n * @param {Number} to The destination index\n * @param {Array} list The list which will serve to realise the move\n * @return {Array} The new list reordered\n * @example\n *\n *      R.move(0, 2, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['b', 'c', 'a', 'd', 'e', 'f']\n *      R.move(-1, 0, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['f', 'a', 'b', 'c', 'd', 'e'] list rotation\n */\n\nvar move =\n/*#__PURE__*/\n_curry3(function (from, to, list) {\n  var length = list.length;\n  var result = list.slice();\n  var positiveFrom = from < 0 ? length + from : from;\n  var positiveTo = to < 0 ? length + to : to;\n  var item = result.splice(positiveFrom, 1);\n  return positiveFrom < 0 || positiveFrom >= list.length || positiveTo < 0 || positiveTo >= list.length ? list : [].concat(result.slice(0, positiveTo)).concat(item).concat(result.slice(positiveTo, list.length));\n});\n\nexport default move;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      const double = R.multiply(2);\n *      const triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\n\nvar multiply =\n/*#__PURE__*/\n_curry2(function multiply(a, b) {\n  return a * b;\n});\n\nexport default multiply;", "import mergeDeepRight from \"./mergeDeepRight.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a function `f` and an object, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the object\n * provided initially merged deeply (right) with the object provided as an argument to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig (({ a, b, c, ..., n }) -> x) -> { a, b, c, ...} -> ({ d, e, f, ..., n } -> x)\n * @param {Function} f\n * @param {Object} props\n * @return {Function}\n * @see R.partial, R.partialRight, R.curry, R.mergeDeepRight\n * @example\n *\n *      const multiply2 = ({ a, b }) => a * b;\n *      const double = R.partialObject(multiply2, { a: 2 });\n *      double({ b: 2 }); //=> 4\n *\n *      const greet = ({ salutation, title, firstName, lastName }) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const sayHello = R.partialObject(greet, { salutation: 'Hello' });\n *      const sayHelloToMs = R.partialObject(sayHello, { title: 'Ms.' });\n *      sayHelloToMs({ firstName: 'Jane', lastName: 'Jones' }); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialObject(f, { a, b })({ c, d }) = f({ a, b, c, d })\n */\n\nexport default\n/*#__PURE__*/\n_curry2((f, o) => props => f.call(this, mergeDeepRight(o, props)));", "import _curry1 from \"./internal/_curry1.js\";\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\n\nvar negate =\n/*#__PURE__*/\n_curry1(function negate(n) {\n  return -n;\n});\n\nexport default negate;", "import _complement from \"./internal/_complement.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport all from \"./all.js\";\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *      const isOdd = n => n % 2 !== 0;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\n\nvar none =\n/*#__PURE__*/\n_curry2(function none(fn, input) {\n  return all(_complement(fn), input);\n});\n\nexport default none;", "import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\nimport nth from \"./nth.js\";\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\n\nvar nthArg =\n/*#__PURE__*/\n_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\n\nexport default nthArg;", "import _curry3 from \"./internal/_curry3.js\";\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument. Also, unlike [`compose`](#compose), `o` is\n * limited to accepting only 2 unary functions. The name o was chosen because\n * of its similarity to the mathematical composition operator \u2218.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      const classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      const yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\n\nvar o =\n/*#__PURE__*/\n_curry3(function o(f, g, x) {\n  return f(g(x));\n});\n\nexport default o;", "export default function _of(x) {\n  return [x];\n}", "import _curry1 from \"./internal/_curry1.js\";\nimport _of from \"./internal/_of.js\";\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\n\nvar of =\n/*#__PURE__*/\n_curry1(_of);\n\nexport default of;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\n\nvar omit =\n/*#__PURE__*/\n_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nexport default omit;", "import curryN from \"./internal/_curryN.js\";\n/**\n * Takes a binary function `f`, a unary function `g`, and two values.\n * Applies `g` to each value, then applies the result of each to `f`.\n *\n * Also known as the P combinator.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig ((a, a) -> b) -> (c -> a) -> c -> c -> b\n * @param {Function} f a binary function\n * @param {Function} g a unary function\n * @param {any} a any value\n * @param {any} b any value\n * @return {any} The result of `f`\n * @example\n *\n *      const eqBy = R.on((a, b) => a === b);\n *      eqBy(R.prop('a'), {b:0, a:1}, {a:1}) //=> true;\n *\n *      const containsInsensitive = R.on(R.contains, R.toLower);\n *      containsInsensitive('o', 'FOO'); //=> true\n * @symb R.on(f, g, a, b) = f(g(a), g(b))\n */\n\nvar on =\n/*#__PURE__*/\ncurryN(4, [], function on(f, g, a, b) {\n  return f(g(a), g(b));\n});\nexport default on;", "import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      const addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\n\nvar once =\n/*#__PURE__*/\n_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\n\nexport default once;", "import _isFunction from \"./_isFunction.js\";\nimport _toString from \"./_toString.js\";\nexport default function _assertPromise(name, p) {\n  if (p == null || !_isFunction(p.then)) {\n    throw new TypeError('`' + name + '` expected a Promise, received ' + _toString(p, []));\n  }\n}", "import _curry2 from \"./internal/_curry2.js\";\nimport _assertPromise from \"./internal/_assertPromise.js\";\n/**\n * Returns the result of applying the onFailure function to the value inside\n * a failed promise. This is useful for handling rejected promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig (e -> b) -> (Promise e a) -> (Promise e b)\n * @sig (e -> (Promise f b)) -> (Promise e a) -> (Promise f b)\n * @param {Function} onFailure The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(null, onFailure)`\n * @see R.andThen\n * @example\n *\n *      const failedFetch = id => Promise.reject('bad ID');\n *      const useDefault = () => ({ firstName: 'Bob', lastName: 'Loblaw' });\n *\n *      //recoverFromFailure :: String -> Promise ({ firstName, lastName })\n *      const recoverFromFailure = R.pipe(\n *        failedFetch,\n *        R.otherwise(useDefault),\n *        R.andThen(R.pick(['firstName', 'lastName'])),\n *      );\n *      recoverFromFailure(12345).then(console.log);\n */\n\nvar otherwise =\n/*#__PURE__*/\n_curry2(function otherwise(f, p) {\n  _assertPromise('otherwise', p);\n\n  return p.then(null, f);\n});\n\nexport default otherwise;", "import _curry3 from \"./internal/_curry3.js\"; // `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\n\nvar Identity = function (x) {\n  return {\n    value: x,\n    map: function (f) {\n      return Identity(f(x));\n    }\n  };\n};\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.view, R.set, R.lens, R.lensIndex, R.lensProp, R.lensPath\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\n\n\nvar over =\n/*#__PURE__*/\n_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\n\nexport default over;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\n\nvar pair =\n/*#__PURE__*/\n_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\n\nexport default pair;", "import _arity from \"./_arity.js\";\nimport _curry2 from \"./_curry2.js\";\nexport default function _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}", "import _concat from \"./internal/_concat.js\";\nimport _createPartialApplicator from \"./internal/_createPartialApplicator.js\";\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight, R.curry\n * @example\n *\n *      const multiply2 = (a, b) => a * b;\n *      const double = R.partial(multiply2, [2]);\n *      double(3); //=> 6\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const sayHello = R.partial(greet, ['Hello']);\n *      const sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\n\nvar partial =\n/*#__PURE__*/\n_createPartialApplicator(_concat);\n\nexport default partial;", "import _concat from \"./internal/_concat.js\";\nimport _createPartialApplicator from \"./internal/_createPartialApplicator.js\";\nimport flip from \"./flip.js\";\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\n\nvar partialRight =\n/*#__PURE__*/\n_createPartialApplicator(\n/*#__PURE__*/\nflip(_concat));\n\nexport default partialRight;", "import filter from \"./filter.js\";\nimport juxt from \"./juxt.js\";\nimport reject from \"./reject.js\";\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.includes('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.includes('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\n\nvar partition =\n/*#__PURE__*/\njuxt([filter, reject]);\nexport default partition;", "import _curry3 from \"./internal/_curry3.js\";\nimport equals from \"./equals.js\";\nimport path from \"./path.js\";\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      const user1 = { address: { zipCode: 90210 } };\n *      const user2 = { address: { zipCode: 55555 } };\n *      const user3 = { name: 'Bob' };\n *      const users = [ user1, user2, user3 ];\n *      const isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\n\nvar pathEq =\n/*#__PURE__*/\n_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\n\nexport default pathEq;", "import _curry3 from \"./internal/_curry3.js\";\nimport defaultTo from \"./defaultTo.js\";\nimport path from \"./path.js\";\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\n\nvar pathOr =\n/*#__PURE__*/\n_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\n\nexport default pathOr;", "import _curry3 from \"./internal/_curry3.js\";\nimport path from \"./path.js\";\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int | Symbol\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n *      R.pathSatisfies(R.is(Object), [], {x: {y: 2}}); //=> true\n */\n\nvar pathSatisfies =\n/*#__PURE__*/\n_curry3(function pathSatisfies(pred, propPath, obj) {\n  return pred(path(propPath, obj));\n});\n\nexport default pathSatisfies;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\n\nvar pick =\n/*#__PURE__*/\n_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default pick;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\n\nvar pickAll =\n/*#__PURE__*/\n_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default pickAll;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      const isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\n\nvar pickBy =\n/*#__PURE__*/\n_curry2(function pickBy(test, obj) {\n  var result = {};\n\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nexport default pickBy;", "import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\n\nvar prepend =\n/*#__PURE__*/\n_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\n\nexport default prepend;", "import multiply from \"./multiply.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\n\nvar product =\n/*#__PURE__*/\nreduce(multiply, 1);\nexport default product;", "import _curry2 from \"./internal/_curry2.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\n\nvar useWith =\n/*#__PURE__*/\n_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\n\nexport default useWith;", "import _map from \"./internal/_map.js\";\nimport identity from \"./identity.js\";\nimport pickAll from \"./pickAll.js\";\nimport useWith from \"./useWith.js\";\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @see R.pluck, R.props, R.prop\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      const kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\n\nvar project =\n/*#__PURE__*/\nuseWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\n\nexport default project;", "export default function _promap(f, g, profunctor) {\n  return function (x) {\n    return g(profunctor(f(x)));\n  };\n}", "import _curry3 from \"./_curry3.js\";\nimport _xfBase from \"./_xfBase.js\";\nimport _promap from \"./_promap.js\";\n\nvar XPromap =\n/*#__PURE__*/\nfunction () {\n  function XPromap(f, g, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.g = g;\n  }\n\n  XPromap.prototype['@@transducer/init'] = _xfBase.init;\n  XPromap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XPromap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, _promap(this.f, this.g, input));\n  };\n\n  return XPromap;\n}();\n\nvar _xpromap =\n/*#__PURE__*/\n_curry3(function _xpromap(f, g, xf) {\n  return new XPromap(f, g, xf);\n});\n\nexport default _xpromap;", "import _curry3 from \"./internal/_curry3.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _promap from \"./internal/_promap.js\";\nimport _xpromap from \"./internal/_xpromap.js\";\n/**\n * Takes two functions as pre- and post- processors respectively for a third function,\n * i.e. `promap(f, g, h)(x) === g(h(f(x)))`.\n *\n * Dispatches to the `promap` method of the third argument, if present,\n * according to the [FantasyLand Profunctor spec](https://github.com/fantasyland/fantasy-land#profunctor).\n *\n * Acts as a transducer if a transformer is given in profunctor position.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig (a -> b) -> (c -> d) -> (b -> c) -> (a -> d)\n * @sig Profunctor p => (a -> b) -> (c -> d) -> p b c -> p a d\n * @param {Function} f The preprocessor function, a -> b\n * @param {Function} g The postprocessor function, c -> d\n * @param {Profunctor} profunctor The profunctor instance to be promapped, e.g. b -> c\n * @return {Profunctor} The new profunctor instance, e.g. a -> d\n * @see R.transduce\n * @example\n *\n *      const decodeChar = R.promap(s => s.charCodeAt(), String.fromCharCode, R.add(-8))\n *      const decodeString = R.promap(R.split(''), R.join(''), R.map(decodeChar))\n *      decodeString(\"ziuli\") //=> \"ramda\"\n *\n * @symb R.promap(f, g, h) = x => g(h(f(x)))\n * @symb R.promap(f, g, profunctor) = profunctor.promap(f, g)\n */\n\nvar promap =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/promap', 'promap'], _xpromap, _promap));\n\nexport default promap;", "import _curry3 from \"./internal/_curry3.js\";\nimport prop from \"./prop.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.whereEq`](#whereEq).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      const rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      const alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      const kids = [abby, fred, rusty, alois];\n *      const hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\n\nvar propEq =\n/*#__PURE__*/\n_curry3(function propEq(name, val, obj) {\n  return equals(val, prop(name, obj));\n});\n\nexport default propEq;", "import _curry3 from \"./internal/_curry3.js\";\nimport prop from \"./prop.js\";\nimport is from \"./is.js\";\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\n\nvar propIs =\n/*#__PURE__*/\n_curry3(function propIs(type, name, obj) {\n  return is(type, prop(name, obj));\n});\n\nexport default propIs;", "import _curry3 from \"./internal/_curry3.js\";\nimport defaultTo from \"./defaultTo.js\";\nimport prop from \"./prop.js\";\n/**\n * Return the specified property of the given non-null object if the property\n * is present and it's value is not `null`, `undefined` or `NaN`.\n *\n * Otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const favorite = R.prop('favoriteLibrary');\n *      const favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\n\nvar propOr =\n/*#__PURE__*/\n_curry3(function propOr(val, p, obj) {\n  return defaultTo(val, prop(p, obj));\n});\n\nexport default propOr;", "import _curry3 from \"./internal/_curry3.js\";\nimport prop from \"./prop.js\";\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\n\nvar propSatisfies =\n/*#__PURE__*/\n_curry3(function propSatisfies(pred, name, obj) {\n  return pred(prop(name, obj));\n});\n\nexport default propSatisfies;", "import _curry2 from \"./internal/_curry2.js\";\nimport path from \"./path.js\";\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @see R.prop, R.pluck, R.project\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      const fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\n\nvar props =\n/*#__PURE__*/\n_curry2(function props(ps, obj) {\n  return ps.map(function (p) {\n    return path([p], obj);\n  });\n});\n\nexport default props;", "import _curry2 from \"./internal/_curry2.js\";\nimport _isNumber from \"./internal/_isNumber.js\";\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in the set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\n\nvar range =\n/*#__PURE__*/\n_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n\n  var result = [];\n  var n = from;\n\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n\n  return result;\n});\n\nexport default range;", "import _curry3 from \"./internal/_curry3.js\";\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*. `reduceRight` may use [`reduced`](#reduced)\n * to short circuit the iteration.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex, R.reduced\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\n\nvar reduceRight =\n/*#__PURE__*/\n_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx -= 1;\n  }\n\n  return acc;\n});\n\nexport default reduceRight;", "import _curryN from \"./internal/_curryN.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _reduced from \"./internal/_reduced.js\";\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator. `reduceWhile` may alternatively be short-circuited\n * via [`reduced`](#reduced).\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      const isOdd = (acc, x) => x % 2 !== 0;\n *      const xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      const ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\n\nvar reduceWhile =\n/*#__PURE__*/\n_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\n\nexport default reduceWhile;", "import _curry1 from \"./internal/_curry1.js\";\nimport _reduced from \"./internal/_reduced.js\";\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * This optimization is available to the below functions:\n * - [`reduce`](#reduce)\n * - [`reduceWhile`](#reduceWhile)\n * - [`reduceBy`](#reduceBy)\n * - [`reduceRight`](#reduceRight)\n * - [`transduce`](#transduce)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.reduceWhile, R.reduceBy, R.reduceRight, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\n\nvar reduced =\n/*#__PURE__*/\n_curry1(_reduced);\n\nexport default reduced;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\n\nvar times =\n/*#__PURE__*/\n_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n\n  list = new Array(len);\n\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n\n  return list;\n});\n\nexport default times;", "import _curry2 from \"./internal/_curry2.js\";\nimport always from \"./always.js\";\nimport times from \"./times.js\";\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      const obj = {};\n *      const repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\n\nvar repeat =\n/*#__PURE__*/\n_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\n\nexport default repeat;", "import _curry3 from \"./internal/_curry3.js\";\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * The first two parameters correspond to the parameters of the\n * `String.prototype.replace()` function, so the second parameter can also be a\n * function.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\n\nvar replace =\n/*#__PURE__*/\n_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\n\nexport default replace;", "import _curry3 from \"./internal/_curry3.js\";\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce, R.mapAccum\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\n\nvar scan =\n/*#__PURE__*/\n_curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default scan;", "import _curry2 from \"./internal/_curry2.js\";\nimport ap from \"./ap.js\";\nimport map from \"./map.js\";\nimport prepend from \"./prepend.js\";\nimport reduceRight from \"./reduceRight.js\";\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\n\nvar sequence =\n/*#__PURE__*/\n_curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\n\nexport default sequence;", "import _curry3 from \"./internal/_curry3.js\";\nimport always from \"./always.js\";\nimport over from \"./over.js\";\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.view, R.over, R.lens, R.lensIndex, R.lensProp, R.lensPath\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\n\nvar set =\n/*#__PURE__*/\n_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\n\nexport default set;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @see R.ascend, R.descend\n * @example\n *\n *      const diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\n\nvar sort =\n/*#__PURE__*/\n_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\n\nexport default sort;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      const sortByFirstItem = R.sortBy(R.prop(0));\n *      const pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *\n *      const sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      const people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\n\nvar sortBy =\n/*#__PURE__*/\n_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\n\nexport default sortBy;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [(a, a) -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @see R.ascend, R.descend\n * @example\n *\n *      const alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      const bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      const people = [clara, bob, alice];\n *      const ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\n\nvar sortWith =\n/*#__PURE__*/\n_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n\n    return result;\n  });\n});\n\nexport default sortWith;", "import invoker from \"./invoker.js\";\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `sep`.\n * @see R.join\n * @example\n *\n *      const pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\n\nvar split =\n/*#__PURE__*/\ninvoker(1, 'split');\nexport default split;", "import _curry2 from \"./internal/_curry2.js\";\nimport length from \"./length.js\";\nimport slice from \"./slice.js\";\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\n\nvar splitAt =\n/*#__PURE__*/\n_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\n\nexport default splitAt;", "import _curry2 from \"./internal/_curry2.js\";\nimport slice from \"./slice.js\";\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\n\nvar splitEvery =\n/*#__PURE__*/\n_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n\n  var result = [];\n  var idx = 0;\n\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n\n  return result;\n});\n\nexport default splitEvery;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\n\nvar splitWhen =\n/*#__PURE__*/\n_curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\n\nexport default splitWhen;", "import _curryN from \"./internal/_curryN.js\";\n/**\n * Splits an array into slices on every occurrence of a value.\n *\n * @func\n * @memberOf R\n * @since v0.26.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhenever(R.equals(2), [1, 2, 3, 2, 4, 5, 2, 6, 7]); //=> [[1], [3], [4, 5], [6, 7]]\n */\n\nvar splitWhenever =\n/*#__PURE__*/\n_curryN(2, [], function splitWhenever(pred, list) {\n  var acc = [];\n  var curr = [];\n\n  for (var i = 0; i < list.length; i = i + 1) {\n    if (!pred(list[i])) {\n      curr.push(list[i]);\n    }\n\n    if ((i < list.length - 1 && pred(list[i + 1]) || i === list.length - 1) && curr.length > 0) {\n      acc.push(curr);\n      curr = [];\n    }\n  }\n\n  return acc;\n});\n\nexport default splitWhenever;", "import _curry2 from \"./internal/_curry2.js\";\nimport equals from \"./equals.js\";\nimport take from \"./take.js\";\n/**\n * Checks if a list starts with the provided sublist.\n *\n * Similarly, checks if a string starts with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @see R.endsWith\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\n\nvar startsWith =\n/*#__PURE__*/\n_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\n\nexport default startsWith;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      const minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      const complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\n\nvar subtract =\n/*#__PURE__*/\n_curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\n\nexport default subtract;", "import _curry2 from \"./internal/_curry2.js\";\nimport concat from \"./concat.js\";\nimport difference from \"./difference.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\n\nvar symmetricDifference =\n/*#__PURE__*/\n_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\n\nexport default symmetricDifference;", "import _curry3 from \"./internal/_curry3.js\";\nimport concat from \"./concat.js\";\nimport differenceWith from \"./differenceWith.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      const eqA = R.eqBy(R.prop('a'));\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      const l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\n\nvar symmetricDifferenceWith =\n/*#__PURE__*/\n_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\n\nexport default symmetricDifferenceWith;", "import _curry2 from \"./internal/_curry2.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      const isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\n\nvar takeLastWhile =\n/*#__PURE__*/\n_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n\n  return slice(idx + 1, Infinity, xs);\n});\n\nexport default takeLastWhile;", "import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XTakeWhile =\n/*#__PURE__*/\nfunction () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nvar _xtakeWhile =\n/*#__PURE__*/\n_curry2(function _xtakeWhile(f, xf) {\n  return new XTakeWhile(f, xf);\n});\n\nexport default _xtakeWhile;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xtakeWhile from \"./internal/_xtakeWhile.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      const isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\n\nvar takeWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n\n  return slice(0, idx, xs);\n}));\n\nexport default takeWhile;", "import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XTap =\n/*#__PURE__*/\nfunction () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nvar _xtap =\n/*#__PURE__*/\n_curry2(function _xtap(f, xf) {\n  return new XTap(f, xf);\n});\n\nexport default _xtap;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xtap from \"./internal/_xtap.js\";\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      const sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\n\nvar tap =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\n\nexport default tap;", "export default function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}", "import _cloneRegExp from \"./internal/_cloneRegExp.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _isRegExp from \"./internal/_isRegExp.js\";\nimport toString from \"./toString.js\";\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\n\nvar test =\n/*#__PURE__*/\n_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('\u2018test\u2019 requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n\n  return _cloneRegExp(pattern).test(str);\n});\n\nexport default test;", "import _curry2 from \"./internal/_curry2.js\";\nimport _assertPromise from \"./internal/_assertPromise.js\";\n/**\n * Returns the result of applying the onSuccess function to the value inside\n * a successfully resolved promise. This is useful for working with promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Function\n * @sig (a -> b) -> (Promise e a) -> (Promise e b)\n * @sig (a -> (Promise e b)) -> (Promise e a) -> (Promise e b)\n * @param {Function} onSuccess The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(onSuccess)`\n * @see R.otherwise\n * @example\n *\n *      const makeQuery = email => ({ query: { email }});\n *      const fetchMember = request =>\n *        Promise.resolve({ firstName: 'Bob', lastName: 'Loblaw', id: 42 });\n *\n *      //getMemberName :: String -> Promise ({ firstName, lastName })\n *      const getMemberName = R.pipe(\n *        makeQuery,\n *        fetchMember,\n *        R.andThen(R.pick(['firstName', 'lastName']))\n *      );\n *\n *      getMemberName('bob@gmail.com').then(console.log);\n */\n\nvar andThen =\n/*#__PURE__*/\n_curry2(function andThen(f, p) {\n  _assertPromise('andThen', p);\n\n  return p.then(f);\n});\n\nexport default andThen;", "import invoker from \"./invoker.js\";\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\n\nvar toLower =\n/*#__PURE__*/\ninvoker(0, 'toLowerCase');\nexport default toLower;", "import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs, R.keys, R.values\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\nvar toPairs =\n/*#__PURE__*/\n_curry1(function toPairs(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n\n  return pairs;\n});\n\nexport default toPairs;", "import _curry1 from \"./internal/_curry1.js\";\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\n\nvar toPairsIn =\n/*#__PURE__*/\n_curry1(function toPairsIn(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n\n  return pairs;\n});\n\nexport default toPairsIn;", "import invoker from \"./invoker.js\";\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\n\nvar toUpper =\n/*#__PURE__*/\ninvoker(0, 'toUpperCase');\nexport default toUpper;", "import _reduce from \"./internal/_reduce.js\";\nimport _xwrap from \"./internal/_xwrap.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      const isOdd = (x) => x % 2 !== 0;\n *      const firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\n\nvar transduce =\n/*#__PURE__*/\ncurryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nexport default transduce;", "import _curry1 from \"./internal/_curry1.js\";\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\n\nvar transpose =\n/*#__PURE__*/\n_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n\n    i += 1;\n  }\n\n  return result;\n});\n\nexport default transpose;", "import _curry3 from \"./internal/_curry3.js\";\nimport map from \"./map.js\";\nimport sequence from \"./sequence.js\";\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Maybe.Nothing` if the given divisor is `0`\n *      const safeDiv = n => d => d === 0 ? Maybe.Nothing() : Maybe.Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Maybe.Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Maybe.Nothing\n */\n\nvar traverse =\n/*#__PURE__*/\n_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : typeof traversable.traverse === 'function' ? traversable.traverse(f, of) : sequence(of, map(f, traversable));\n});\n\nexport default traverse;", "import _curry1 from \"./internal/_curry1.js\";\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\n\nvar trim = !hasProtoTrim ||\n/*#__PURE__*/\nws.trim() || !\n/*#__PURE__*/\nzeroWidth.trim() ?\n/*#__PURE__*/\n_curry1(function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n}) :\n/*#__PURE__*/\n_curry1(function trim(str) {\n  return str.trim();\n});\nexport default trim;", "import _arity from \"./internal/_arity.js\";\nimport _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send them to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(() => { throw 'foo'}, R.always('caught'))('bar') // =>\n *      'caught'\n *      R.tryCatch(R.times(R.identity), R.always([]))('s') // => []\n *      R.tryCatch(() => { throw 'this is not a valid value'}, (err, value)=>({error : err,  value }))('bar') // => {'error': 'this is not a valid value', 'value': 'bar'}\n */\n\nvar tryCatch =\n/*#__PURE__*/\n_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\n\nexport default tryCatch;", "import _curry1 from \"./internal/_curry1.js\";\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\n\nvar unapply =\n/*#__PURE__*/\n_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\n\nexport default unapply;", "import _curry1 from \"./internal/_curry1.js\";\nimport nAry from \"./nAry.js\";\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (a -> b -> c -> ... -> z) -> (a -> z)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      const takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\n\nvar unary =\n/*#__PURE__*/\n_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\n\nexport default unary;", "import _curry2 from \"./internal/_curry2.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n * Note that, the returned function is actually a ramda style\n * curryied function, which can accept one or more arguments in each\n * function calling.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b -> c ... -> z) -> ((a -> b -> c ...) -> z)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry, R.curryN\n * @example\n *\n *      const addFour = a => b => c => d => a + b + c + d;\n *\n *      const uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\n\nvar uncurryN =\n/*#__PURE__*/\n_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n\n    return value;\n  });\n});\n\nexport default uncurryN;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      const f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\n\nvar unfold =\n/*#__PURE__*/\n_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n\n  return result;\n});\n\nexport default unfold;", "import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport compose from \"./compose.js\";\nimport uniq from \"./uniq.js\";\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\n\nvar union =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\ncompose(uniq, _concat));\n\nexport default union;", "import _curry2 from \"./_curry2.js\";\nimport _includesWith from \"./_includesWith.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XUniqWith =\n/*#__PURE__*/\nfunction () {\n  function XUniqWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.items = [];\n  }\n\n  XUniqWith.prototype['@@transducer/init'] = _xfBase.init;\n  XUniqWith.prototype['@@transducer/result'] = _xfBase.result;\n\n  XUniqWith.prototype['@@transducer/step'] = function (result, input) {\n    if (_includesWith(this.pred, input, this.items)) {\n      return result;\n    } else {\n      this.items.push(input);\n      return this.xf['@@transducer/step'](result, input);\n    }\n  };\n\n  return XUniqWith;\n}();\n\nvar _xuniqWith =\n/*#__PURE__*/\n_curry2(function _xuniqWith(pred, xf) {\n  return new XUniqWith(pred, xf);\n});\n\nexport default _xuniqWith;", "import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _includesWith from \"./internal/_includesWith.js\";\nimport _xuniqWith from \"./internal/_xuniqWith.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\n\nvar uniqWith =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xuniqWith, function (pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n\n  while (idx < len) {\n    item = list[idx];\n\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}));\n\nexport default uniqWith;", "import _concat from \"./internal/_concat.js\";\nimport _curry3 from \"./internal/_curry3.js\";\nimport uniqWith from \"./uniqWith.js\";\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements. If an element exists\n * in both lists, the first element from the first list will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      const l1 = [{a: 1}, {a: 2}];\n *      const l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\n\nvar unionWith =\n/*#__PURE__*/\n_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\n\nexport default unionWith;", "import _curry3 from \"./internal/_curry3.js\";\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> b) -> a -> a | b\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when, R.cond\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\n\nvar unless =\n/*#__PURE__*/\n_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\n\nexport default unless;", "import _identity from \"./internal/_identity.js\";\nimport chain from \"./chain.js\";\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\n\nvar unnest =\n/*#__PURE__*/\nchain(_identity);\nexport default unnest;", "import _curry3 from \"./internal/_curry3.js\";\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\n\nvar until =\n/*#__PURE__*/\n_curry3(function until(pred, fn, init) {\n  var val = init;\n\n  while (!pred(val)) {\n    val = fn(val);\n  }\n\n  return val;\n});\n\nexport default until;", "import _curry2 from \"./internal/_curry2.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _map from \"./internal/_map.js\";\nimport _assoc from \"./internal/_assoc.js\";\n/**\n *\n * Deconstructs an array field from the input documents to output a document for each element.\n * Each output document is the input document with the value of the array field replaced by the element.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig String -> {k: [v]} -> [{k: v}]\n * @param {String} key The key to determine which property of the object should be unwind\n * @param {Object} object The object containing list under property named as key which is to unwind\n * @return {List} A new list of object containing the value of input key having list replaced by each element in the object.\n * @example\n *\n * R.unwind('hobbies', {\n *   name: 'alice',\n *   hobbies: ['Golf', 'Hacking'],\n *   colors: ['red', 'green'],\n * });\n * // [\n * //   { name: 'alice', hobbies: 'Golf', colors: ['red', 'green'] },\n * //   { name: 'alice', hobbies: 'Hacking', colors: ['red', 'green'] }\n * // ]\n */\n\nvar unwind =\n/*#__PURE__*/\n_curry2(function (key, object) {\n  // If key is not in object or key is not as a list in object\n  if (!(key in object && _isArray(object[key]))) {\n    return [object];\n  } // Map over object[key] which is a list and assoc each element with key\n\n\n  return _map(function (item) {\n    return _assoc(key, item, object);\n  }, object[key]);\n});\n\nexport default unwind;", "import _curry1 from \"./internal/_curry1.js\";\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\n\nvar valuesIn =\n/*#__PURE__*/\n_curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n\n  return vs;\n});\n\nexport default valuesIn;", "import _curry2 from \"./internal/_curry2.js\"; // `Const` is a functor that effectively ignores the function given to `map`.\n\nvar Const = function (x) {\n  return {\n    value: x,\n    'fantasy-land/map': function () {\n      return this;\n    }\n  };\n};\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.set, R.over, R.lens, R.lensIndex, R.lensProp, R.lensPath\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\n\n\nvar view =\n/*#__PURE__*/\n_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\n\nexport default view;", "import _curry3 from \"./internal/_curry3.js\";\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> b) -> a -> a | b\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless, R.cond\n * @example\n *\n *      // truncate :: String -> String\n *      const truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('\u2026'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789\u2026'\n */\n\nvar when =\n/*#__PURE__*/\n_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\n\nexport default when;", "import _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\n\nvar where =\n/*#__PURE__*/\n_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nexport default where;", "import _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Takes a spec object and a test object; each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `whereAny` returns true if at least one of the predicates return true,\n * false otherwise.\n *\n * `whereAny` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.whereAny({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('xxx')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 8, y: 34}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 9, y: 21}); //=> false\n *      pred({a: 'bar', b: 'xxx', x: 10, y: 20}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 10, y: 20}); //=> true\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> true\n */\n\nvar whereAny =\n/*#__PURE__*/\n_curry2(function whereAny(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && spec[prop](testObj[prop])) {\n      return true;\n    }\n  }\n\n  return false;\n});\n\nexport default whereAny;", "import _curry2 from \"./internal/_curry2.js\";\nimport equals from \"./equals.js\";\nimport map from \"./map.js\";\nimport where from \"./where.js\";\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\n\nvar whereEq =\n/*#__PURE__*/\n_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\n\nexport default whereEq;", "import _includes from \"./internal/_includes.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport flip from \"./flip.js\";\nimport reject from \"./reject.js\";\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\n\nvar without =\n/*#__PURE__*/\n_curry2(function (xs, list) {\n  return reject(flip(_includes)(xs), list);\n});\n\nexport default without;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Exclusive disjunction logical operation.\n * Returns `true` if one of the arguments is truthy and the other is falsy.\n * Otherwise, it returns `false`.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Logic\n * @sig a -> b -> Boolean\n * @param {Any} a\n * @param {Any} b\n * @return {Boolean} true if one of the arguments is truthy and the other is falsy\n * @see R.or, R.and\n * @example\n *\n *      R.xor(true, true); //=> false\n *      R.xor(true, false); //=> true\n *      R.xor(false, true); //=> true\n *      R.xor(false, false); //=> false\n */\n\nvar xor =\n/*#__PURE__*/\n_curry2(function xor(a, b) {\n  return Boolean(!a ^ !b);\n});\n\nexport default xor;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\n\nvar xprod =\n/*#__PURE__*/\n_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n\n  while (idx < ilen) {\n    j = 0;\n\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default xprod;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\n\nvar zip =\n/*#__PURE__*/\n_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n\n  return rv;\n});\n\nexport default zip;", "import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\n\nvar zipObj =\n/*#__PURE__*/\n_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default zipObj;", "import _curry3 from \"./internal/_curry3.js\";\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      const f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\n\nvar zipWith =\n/*#__PURE__*/\n_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n\n  return rv;\n});\n\nexport default zipWith;", "import curryN from \"./curryN.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates a thunk out of a function. A thunk delays a calculation until\n * its result is needed, providing lazy evaluation of arguments.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((a, b, ..., j) -> k) -> (a, b, ..., j) -> (() -> k)\n * @param {Function} fn A function to wrap in a thunk\n * @return {Function} Expects arguments for `fn` and returns a new function\n *  that, when called, applies those arguments to `fn`.\n * @see R.partial, R.partialRight\n * @example\n *\n *      R.thunkify(R.identity)(42)(); //=> 42\n *      R.thunkify((a, b) => a + b)(25, 17)(); //=> 42\n */\n\nvar thunkify =\n/*#__PURE__*/\n_curry1(function thunkify(fn) {\n  return curryN(fn.length, function createThunk() {\n    var fnArgs = arguments;\n    return function invokeThunk() {\n      return fn.apply(this, fnArgs);\n    };\n  });\n});\n\nexport default thunkify;", "export { default as F } from \"./F.js\";\nexport { default as T } from \"./T.js\";\nexport { default as __ } from \"./__.js\";\nexport { default as add } from \"./add.js\";\nexport { default as addIndex } from \"./addIndex.js\";\nexport { default as adjust } from \"./adjust.js\";\nexport { default as all } from \"./all.js\";\nexport { default as allPass } from \"./allPass.js\";\nexport { default as always } from \"./always.js\";\nexport { default as and } from \"./and.js\";\nexport { default as any } from \"./any.js\";\nexport { default as anyPass } from \"./anyPass.js\";\nexport { default as ap } from \"./ap.js\";\nexport { default as aperture } from \"./aperture.js\";\nexport { default as append } from \"./append.js\";\nexport { default as apply } from \"./apply.js\";\nexport { default as applySpec } from \"./applySpec.js\";\nexport { default as applyTo } from \"./applyTo.js\";\nexport { default as ascend } from \"./ascend.js\";\nexport { default as assoc } from \"./assoc.js\";\nexport { default as assocPath } from \"./assocPath.js\";\nexport { default as binary } from \"./binary.js\";\nexport { default as bind } from \"./bind.js\";\nexport { default as both } from \"./both.js\";\nexport { default as call } from \"./call.js\";\nexport { default as chain } from \"./chain.js\";\nexport { default as clamp } from \"./clamp.js\";\nexport { default as clone } from \"./clone.js\";\nexport { default as collectBy } from \"./collectBy.js\";\nexport { default as comparator } from \"./comparator.js\";\nexport { default as complement } from \"./complement.js\";\nexport { default as compose } from \"./compose.js\";\nexport { default as composeWith } from \"./composeWith.js\";\nexport { default as concat } from \"./concat.js\";\nexport { default as cond } from \"./cond.js\";\nexport { default as construct } from \"./construct.js\";\nexport { default as constructN } from \"./constructN.js\";\nexport { default as converge } from \"./converge.js\";\nexport { default as count } from \"./count.js\";\nexport { default as countBy } from \"./countBy.js\";\nexport { default as curry } from \"./curry.js\";\nexport { default as curryN } from \"./curryN.js\";\nexport { default as dec } from \"./dec.js\";\nexport { default as defaultTo } from \"./defaultTo.js\";\nexport { default as descend } from \"./descend.js\";\nexport { default as difference } from \"./difference.js\";\nexport { default as differenceWith } from \"./differenceWith.js\";\nexport { default as dissoc } from \"./dissoc.js\";\nexport { default as dissocPath } from \"./dissocPath.js\";\nexport { default as divide } from \"./divide.js\";\nexport { default as drop } from \"./drop.js\";\nexport { default as dropLast } from \"./dropLast.js\";\nexport { default as dropLastWhile } from \"./dropLastWhile.js\";\nexport { default as dropRepeats } from \"./dropRepeats.js\";\nexport { default as dropRepeatsWith } from \"./dropRepeatsWith.js\";\nexport { default as dropWhile } from \"./dropWhile.js\";\nexport { default as either } from \"./either.js\";\nexport { default as empty } from \"./empty.js\";\nexport { default as endsWith } from \"./endsWith.js\";\nexport { default as eqBy } from \"./eqBy.js\";\nexport { default as eqProps } from \"./eqProps.js\";\nexport { default as equals } from \"./equals.js\";\nexport { default as evolve } from \"./evolve.js\";\nexport { default as filter } from \"./filter.js\";\nexport { default as find } from \"./find.js\";\nexport { default as findIndex } from \"./findIndex.js\";\nexport { default as findLast } from \"./findLast.js\";\nexport { default as findLastIndex } from \"./findLastIndex.js\";\nexport { default as flatten } from \"./flatten.js\";\nexport { default as flip } from \"./flip.js\";\nexport { default as forEach } from \"./forEach.js\";\nexport { default as forEachObjIndexed } from \"./forEachObjIndexed.js\";\nexport { default as fromPairs } from \"./fromPairs.js\";\nexport { default as groupBy } from \"./groupBy.js\";\nexport { default as groupWith } from \"./groupWith.js\";\nexport { default as gt } from \"./gt.js\";\nexport { default as gte } from \"./gte.js\";\nexport { default as has } from \"./has.js\";\nexport { default as hasIn } from \"./hasIn.js\";\nexport { default as hasPath } from \"./hasPath.js\";\nexport { default as head } from \"./head.js\";\nexport { default as identical } from \"./identical.js\";\nexport { default as identity } from \"./identity.js\";\nexport { default as ifElse } from \"./ifElse.js\";\nexport { default as inc } from \"./inc.js\";\nexport { default as includes } from \"./includes.js\";\nexport { default as indexBy } from \"./indexBy.js\";\nexport { default as indexOf } from \"./indexOf.js\";\nexport { default as init } from \"./init.js\";\nexport { default as innerJoin } from \"./innerJoin.js\";\nexport { default as insert } from \"./insert.js\";\nexport { default as insertAll } from \"./insertAll.js\";\nexport { default as intersection } from \"./intersection.js\";\nexport { default as intersperse } from \"./intersperse.js\";\nexport { default as into } from \"./into.js\";\nexport { default as invert } from \"./invert.js\";\nexport { default as invertObj } from \"./invertObj.js\";\nexport { default as invoker } from \"./invoker.js\";\nexport { default as is } from \"./is.js\";\nexport { default as isEmpty } from \"./isEmpty.js\";\nexport { default as isNil } from \"./isNil.js\";\nexport { default as join } from \"./join.js\";\nexport { default as juxt } from \"./juxt.js\";\nexport { default as keys } from \"./keys.js\";\nexport { default as keysIn } from \"./keysIn.js\";\nexport { default as last } from \"./last.js\";\nexport { default as lastIndexOf } from \"./lastIndexOf.js\";\nexport { default as length } from \"./length.js\";\nexport { default as lens } from \"./lens.js\";\nexport { default as lensIndex } from \"./lensIndex.js\";\nexport { default as lensPath } from \"./lensPath.js\";\nexport { default as lensProp } from \"./lensProp.js\";\nexport { default as lift } from \"./lift.js\";\nexport { default as liftN } from \"./liftN.js\";\nexport { default as lt } from \"./lt.js\";\nexport { default as lte } from \"./lte.js\";\nexport { default as map } from \"./map.js\";\nexport { default as mapAccum } from \"./mapAccum.js\";\nexport { default as mapAccumRight } from \"./mapAccumRight.js\";\nexport { default as mapObjIndexed } from \"./mapObjIndexed.js\";\nexport { default as match } from \"./match.js\";\nexport { default as mathMod } from \"./mathMod.js\";\nexport { default as max } from \"./max.js\";\nexport { default as maxBy } from \"./maxBy.js\";\nexport { default as mean } from \"./mean.js\";\nexport { default as median } from \"./median.js\";\nexport { default as memoizeWith } from \"./memoizeWith.js\";\nexport { default as mergeAll } from \"./mergeAll.js\";\nexport { default as mergeDeepLeft } from \"./mergeDeepLeft.js\";\nexport { default as mergeDeepRight } from \"./mergeDeepRight.js\";\nexport { default as mergeDeepWith } from \"./mergeDeepWith.js\";\nexport { default as mergeDeepWithKey } from \"./mergeDeepWithKey.js\";\nexport { default as mergeLeft } from \"./mergeLeft.js\";\nexport { default as mergeRight } from \"./mergeRight.js\";\nexport { default as mergeWith } from \"./mergeWith.js\";\nexport { default as mergeWithKey } from \"./mergeWithKey.js\";\nexport { default as min } from \"./min.js\";\nexport { default as minBy } from \"./minBy.js\";\nexport { default as modify } from \"./modify.js\";\nexport { default as modifyPath } from \"./modifyPath.js\";\nexport { default as modulo } from \"./modulo.js\";\nexport { default as move } from \"./move.js\";\nexport { default as multiply } from \"./multiply.js\";\nexport { default as nAry } from \"./nAry.js\";\nexport { default as partialObject } from \"./partialObject.js\";\nexport { default as negate } from \"./negate.js\";\nexport { default as none } from \"./none.js\";\nexport { default as not } from \"./not.js\";\nexport { default as nth } from \"./nth.js\";\nexport { default as nthArg } from \"./nthArg.js\";\nexport { default as o } from \"./o.js\";\nexport { default as objOf } from \"./objOf.js\";\nexport { default as of } from \"./of.js\";\nexport { default as omit } from \"./omit.js\";\nexport { default as on } from \"./on.js\";\nexport { default as once } from \"./once.js\";\nexport { default as or } from \"./or.js\";\nexport { default as otherwise } from \"./otherwise.js\";\nexport { default as over } from \"./over.js\";\nexport { default as pair } from \"./pair.js\";\nexport { default as partial } from \"./partial.js\";\nexport { default as partialRight } from \"./partialRight.js\";\nexport { default as partition } from \"./partition.js\";\nexport { default as path } from \"./path.js\";\nexport { default as paths } from \"./paths.js\";\nexport { default as pathEq } from \"./pathEq.js\";\nexport { default as pathOr } from \"./pathOr.js\";\nexport { default as pathSatisfies } from \"./pathSatisfies.js\";\nexport { default as pick } from \"./pick.js\";\nexport { default as pickAll } from \"./pickAll.js\";\nexport { default as pickBy } from \"./pickBy.js\";\nexport { default as pipe } from \"./pipe.js\";\nexport { default as pipeWith } from \"./pipeWith.js\";\nexport { default as pluck } from \"./pluck.js\";\nexport { default as prepend } from \"./prepend.js\";\nexport { default as product } from \"./product.js\";\nexport { default as project } from \"./project.js\";\nexport { default as promap } from \"./promap.js\";\nexport { default as prop } from \"./prop.js\";\nexport { default as propEq } from \"./propEq.js\";\nexport { default as propIs } from \"./propIs.js\";\nexport { default as propOr } from \"./propOr.js\";\nexport { default as propSatisfies } from \"./propSatisfies.js\";\nexport { default as props } from \"./props.js\";\nexport { default as range } from \"./range.js\";\nexport { default as reduce } from \"./reduce.js\";\nexport { default as reduceBy } from \"./reduceBy.js\";\nexport { default as reduceRight } from \"./reduceRight.js\";\nexport { default as reduceWhile } from \"./reduceWhile.js\";\nexport { default as reduced } from \"./reduced.js\";\nexport { default as reject } from \"./reject.js\";\nexport { default as remove } from \"./remove.js\";\nexport { default as repeat } from \"./repeat.js\";\nexport { default as replace } from \"./replace.js\";\nexport { default as reverse } from \"./reverse.js\";\nexport { default as scan } from \"./scan.js\";\nexport { default as sequence } from \"./sequence.js\";\nexport { default as set } from \"./set.js\";\nexport { default as slice } from \"./slice.js\";\nexport { default as sort } from \"./sort.js\";\nexport { default as sortBy } from \"./sortBy.js\";\nexport { default as sortWith } from \"./sortWith.js\";\nexport { default as split } from \"./split.js\";\nexport { default as splitAt } from \"./splitAt.js\";\nexport { default as splitEvery } from \"./splitEvery.js\";\nexport { default as splitWhen } from \"./splitWhen.js\";\nexport { default as splitWhenever } from \"./splitWhenever.js\";\nexport { default as startsWith } from \"./startsWith.js\";\nexport { default as subtract } from \"./subtract.js\";\nexport { default as sum } from \"./sum.js\";\nexport { default as symmetricDifference } from \"./symmetricDifference.js\";\nexport { default as symmetricDifferenceWith } from \"./symmetricDifferenceWith.js\";\nexport { default as tail } from \"./tail.js\";\nexport { default as take } from \"./take.js\";\nexport { default as takeLast } from \"./takeLast.js\";\nexport { default as takeLastWhile } from \"./takeLastWhile.js\";\nexport { default as takeWhile } from \"./takeWhile.js\";\nexport { default as tap } from \"./tap.js\";\nexport { default as test } from \"./test.js\";\nexport { default as andThen } from \"./andThen.js\";\nexport { default as times } from \"./times.js\";\nexport { default as toLower } from \"./toLower.js\";\nexport { default as toPairs } from \"./toPairs.js\";\nexport { default as toPairsIn } from \"./toPairsIn.js\";\nexport { default as toString } from \"./toString.js\";\nexport { default as toUpper } from \"./toUpper.js\";\nexport { default as transduce } from \"./transduce.js\";\nexport { default as transpose } from \"./transpose.js\";\nexport { default as traverse } from \"./traverse.js\";\nexport { default as trim } from \"./trim.js\";\nexport { default as tryCatch } from \"./tryCatch.js\";\nexport { default as type } from \"./type.js\";\nexport { default as unapply } from \"./unapply.js\";\nexport { default as unary } from \"./unary.js\";\nexport { default as uncurryN } from \"./uncurryN.js\";\nexport { default as unfold } from \"./unfold.js\";\nexport { default as union } from \"./union.js\";\nexport { default as unionWith } from \"./unionWith.js\";\nexport { default as uniq } from \"./uniq.js\";\nexport { default as uniqBy } from \"./uniqBy.js\";\nexport { default as uniqWith } from \"./uniqWith.js\";\nexport { default as unless } from \"./unless.js\";\nexport { default as unnest } from \"./unnest.js\";\nexport { default as until } from \"./until.js\";\nexport { default as unwind } from \"./unwind.js\";\nexport { default as update } from \"./update.js\";\nexport { default as useWith } from \"./useWith.js\";\nexport { default as values } from \"./values.js\";\nexport { default as valuesIn } from \"./valuesIn.js\";\nexport { default as view } from \"./view.js\";\nexport { default as when } from \"./when.js\";\nexport { default as where } from \"./where.js\";\nexport { default as whereAny } from \"./whereAny.js\";\nexport { default as whereEq } from \"./whereEq.js\";\nexport { default as without } from \"./without.js\";\nexport { default as xor } from \"./xor.js\";\nexport { default as xprod } from \"./xprod.js\";\nexport { default as zip } from \"./zip.js\";\nexport { default as zipObj } from \"./zipObj.js\";\nexport { default as zipWith } from \"./zipWith.js\";\nexport { default as thunkify } from \"./thunkify.js\";", "import * as r from 'ramda'\n\nexport type DeepPartial<T> = T extends object ? {\n    [P in keyof T]?: DeepPartial<T[P]>;\n} : T;\n\nexport const isFunction = (item: any): item is Function => typeof item === 'function'\nexport const isNumber = (item): item is number => typeof item === 'number'\nexport const isString = (item): item is string => typeof item === 'string'\nexport const isArray = (item): item is Array<any> => Array.isArray(item);\nexport const isObject = (item) => typeof item === 'object' && item !== null;\nexport const hasOwnProperty = (item, prop) => isObject(item) && prop in item;\nexport const hasSymbol = (item, symbol) => isObject(item) && hasOwnProperty(item, symbol);\n\nexport const isNotNil = r.complement(r.isNil)\n\nexport const random = (from, to=0) => {\n    const min = Math.min(from, to)\n    const max = Math.max(from, to)\n    return (Math.random() * (max - min)) + min\n}\n\nexport const createEnum = <T extends string>(...args: T[]): Record<T, number> & Record<number, T> => {\n    return Object.fromEntries(\n        args.map((enumName, index) => [\n            [enumName, index],\n            [index, enumName],\n        ]).flat()\n    )\n}\n\nexport const loadImage = (url: string) => new Promise((resolve, reject) => {\n    const img = new Image()\n    img.onload = () => resolve(img)\n    img.onerror = (e) => reject(e)\n    img.src = url;\n})\n", "const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t},\n\t24: \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n", "import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtype,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === Archtype.Object) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): Archtype {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? Archtype.Array\n\t\t: isMap(thing)\n\t\t? Archtype.Map\n\t\t: isSet(thing)\n\t\t? Archtype.Set\n\t\t: Archtype.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === Archtype.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === Archtype.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === Archtype.Map) thing.set(propOrOldValue, value)\n\telse if (t === Archtype.Set) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n", "import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\tbase: any,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: ProxyType.ES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: ProxyType.ES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ProxyType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ProxyType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n", "import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyType,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyType.ProxyObject ||\n\t\tstate.type_ === ProxyType.ProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n", "import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE].base_,\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumerable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyType.ES5Object || state.type_ === ProxyType.ES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// Although the original test case doesn't seem valid anyway, so if this in the way we can turn the next line\n\t\t// back to each(result, ....)\n\t\teach(\n\t\t\tstate.type_ === ProxyType.Set ? new Set(result) : result,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n", "import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyType\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyType.ProxyArray : (ProxyType.ProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\tstate.copy_![prop] === value &&\n\t\t\t// special case: NaN\n\t\t\ttypeof value !== \"number\" &&\n\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t(value !== undefined || prop in state.copy_)\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyType.ProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\t// @ts-ignore\n\treturn arrayTraps.set!.call(this, state, prop, undefined)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n", "import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === undefined) result = base\n\t\t\tif (result === NOTHING) result = undefined\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\tif (patchListener) {\n\t\t\t\tconst p: Patch[] = []\n\t\t\t\tconst ip: Patch[] = []\n\t\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip)\n\t\t\t\tpatchListener(p, ip)\n\t\t\t}\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (\n\t\targ1: any,\n\t\targ2?: any,\n\t\targ3?: any\n\t): any => {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst result = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\n\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\treturn result.then(nextState => [nextState, patches!, inversePatches!])\n\t\t}\n\t\treturn [result, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// If there was a patch that replaced the entire state, start from the\n\t\t// patch after that.\n\t\tif (i > -1) {\n\t\t\tpatches = patches.slice(i + 1)\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches)\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n", "import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtype,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === Archtype.Set ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase Archtype.Map:\n\t\t\treturn new Map(value)\n\t\tcase Archtype.Set:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n", "import {\n\tImmerState,\n\tDrafted,\n\tES5ArrayState,\n\tES5ObjectState,\n\teach,\n\thas,\n\tisDraft,\n\tlatest,\n\tDRAFT_STATE,\n\tis,\n\tloadPlugin,\n\tImmerScope,\n\tProxyType,\n\tgetCurrentScope,\n\tdie,\n\tmarkChanged,\n\tobjectTraps,\n\townKeys,\n\tgetOwnPropertyDescriptors\n} from \"../internal\"\n\ntype ES5State = ES5ArrayState | ES5ObjectState\n\nexport function enableES5() {\n\tfunction willFinalizeES5_(\n\t\tscope: ImmerScope,\n\t\tresult: any,\n\t\tisReplaced: boolean\n\t) {\n\t\tif (!isReplaced) {\n\t\t\tif (scope.patches_) {\n\t\t\t\tmarkChangesRecursively(scope.drafts_![0])\n\t\t\t}\n\t\t\t// This is faster when we don't care about which attributes changed.\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t\t// When a child draft is returned, look for changes.\n\t\telse if (\n\t\t\tisDraft(result) &&\n\t\t\t(result[DRAFT_STATE] as ES5State).scope_ === scope\n\t\t) {\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t}\n\n\tfunction createES5Draft(isArray: boolean, base: any) {\n\t\tif (isArray) {\n\t\t\tconst draft = new Array(base.length)\n\t\t\tfor (let i = 0; i < base.length; i++)\n\t\t\t\tObject.defineProperty(draft, \"\" + i, proxyProperty(i, true))\n\t\t\treturn draft\n\t\t} else {\n\t\t\tconst descriptors = getOwnPropertyDescriptors(base)\n\t\t\tdelete descriptors[DRAFT_STATE as any]\n\t\t\tconst keys = ownKeys(descriptors)\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key: any = keys[i]\n\t\t\t\tdescriptors[key] = proxyProperty(\n\t\t\t\t\tkey,\n\t\t\t\t\tisArray || !!descriptors[key].enumerable\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n\t\t}\n\t}\n\n\tfunction createES5Proxy_<T>(\n\t\tbase: T,\n\t\tparent?: ImmerState\n\t): Drafted<T, ES5ObjectState | ES5ArrayState> {\n\t\tconst isArray = Array.isArray(base)\n\t\tconst draft = createES5Draft(isArray, base)\n\n\t\tconst state: ES5ObjectState | ES5ArrayState = {\n\t\t\ttype_: isArray ? ProxyType.ES5Array : (ProxyType.ES5Object as any),\n\t\t\tscope_: parent ? parent.scope_ : getCurrentScope(),\n\t\t\tmodified_: false,\n\t\t\tfinalized_: false,\n\t\t\tassigned_: {},\n\t\t\tparent_: parent,\n\t\t\t// base is the object we are drafting\n\t\t\tbase_: base,\n\t\t\t// draft is the draft object itself, that traps all reads and reads from either the base (if unmodified) or copy (if modified)\n\t\t\tdraft_: draft,\n\t\t\tcopy_: null,\n\t\t\trevoked_: false,\n\t\t\tisManual_: false\n\t\t}\n\n\t\tObject.defineProperty(draft, DRAFT_STATE, {\n\t\t\tvalue: state,\n\t\t\t// enumerable: false <- the default\n\t\t\twritable: true\n\t\t})\n\t\treturn draft\n\t}\n\n\t// property descriptors are recycled to make sure we don't create a get and set closure per property,\n\t// but share them all instead\n\tconst descriptors: {[prop: string]: PropertyDescriptor} = {}\n\n\tfunction proxyProperty(\n\t\tprop: string | number,\n\t\tenumerable: boolean\n\t): PropertyDescriptor {\n\t\tlet desc = descriptors[prop]\n\t\tif (desc) {\n\t\t\tdesc.enumerable = enumerable\n\t\t} else {\n\t\t\tdescriptors[prop] = desc = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable,\n\t\t\t\tget(this: any) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn objectTraps.get(state, prop)\n\t\t\t\t},\n\t\t\t\tset(this: any, value) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tobjectTraps.set(state, prop, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn desc\n\t}\n\n\t// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\tfunction markChangesSweep(drafts: Drafted<any, ImmerState>[]) {\n\t\t// The natural order of drafts in the `scope` array is based on when they\n\t\t// were accessed. By processing drafts in reverse natural order, we have a\n\t\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t\t// have changed, we can avoid any traversal of its ancestor nodes.\n\t\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\t\tconst state: ES5State = drafts[i][DRAFT_STATE]\n\t\t\tif (!state.modified_) {\n\t\t\t\tswitch (state.type_) {\n\t\t\t\t\tcase ProxyType.ES5Array:\n\t\t\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase ProxyType.ES5Object:\n\t\t\t\t\t\tif (hasObjectChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction markChangesRecursively(object: any) {\n\t\tif (!object || typeof object !== \"object\") return\n\t\tconst state: ES5State | undefined = object[DRAFT_STATE]\n\t\tif (!state) return\n\t\tconst {base_, draft_, assigned_, type_} = state\n\t\tif (type_ === ProxyType.ES5Object) {\n\t\t\t// Look for added keys.\n\t\t\t// probably there is a faster way to detect changes, as sweep + recurse seems to do some\n\t\t\t// unnecessary work.\n\t\t\t// also: probably we can store the information we detect here, to speed up tree finalization!\n\t\t\teach(draft_, key => {\n\t\t\t\tif ((key as any) === DRAFT_STATE) return\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif ((base_ as any)[key] === undefined && !has(base_, key)) {\n\t\t\t\t\tassigned_[key] = true\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t} else if (!assigned_[key]) {\n\t\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\t\tmarkChangesRecursively(draft_[key])\n\t\t\t\t}\n\t\t\t})\n\t\t\t// Look for removed keys.\n\t\t\teach(base_, key => {\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif (draft_[key] === undefined && !has(draft_, key)) {\n\t\t\t\t\tassigned_[key] = false\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (type_ === ProxyType.ES5Array) {\n\t\t\tif (hasArrayChanges(state as ES5ArrayState)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t\tassigned_.length = true\n\t\t\t}\n\n\t\t\tif (draft_.length < base_.length) {\n\t\t\t\tfor (let i = draft_.length; i < base_.length; i++) assigned_[i] = false\n\t\t\t} else {\n\t\t\t\tfor (let i = base_.length; i < draft_.length; i++) assigned_[i] = true\n\t\t\t}\n\n\t\t\t// Minimum count is enough, the other parts has been processed.\n\t\t\tconst min = Math.min(draft_.length, base_.length)\n\n\t\t\tfor (let i = 0; i < min; i++) {\n\t\t\t\t// Only untouched indices trigger recursion.\n\t\t\t\tif (!draft_.hasOwnProperty(i)) {\n\t\t\t\t\tassigned_[i] = true\n\t\t\t\t}\n\t\t\t\tif (assigned_[i] === undefined) markChangesRecursively(draft_[i])\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasObjectChanges(state: ES5ObjectState) {\n\t\tconst {base_, draft_} = state\n\n\t\t// Search for added keys and changed keys. Start at the back, because\n\t\t// non-numeric keys are ordered by time of definition on the object.\n\t\tconst keys = ownKeys(draft_)\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key: any = keys[i]\n\t\t\tif (key === DRAFT_STATE) continue\n\t\t\tconst baseValue = base_[key]\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (baseValue === undefined && !has(base_, key)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t\t// descriptor is erased. This branch detects any missed changes.\n\t\t\telse {\n\t\t\t\tconst value = draft_[key]\n\t\t\t\tconst state: ImmerState = value && value[DRAFT_STATE]\n\t\t\t\tif (state ? state.base_ !== baseValue : !is(value, baseValue)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, no keys were added or changed.\n\t\t// Compare key count to determine if keys were deleted.\n\t\tconst baseIsDraft = !!base_[DRAFT_STATE as any]\n\t\treturn keys.length !== ownKeys(base_).length + (baseIsDraft ? 0 : 1) // + 1 to correct for DRAFT_STATE\n\t}\n\n\tfunction hasArrayChanges(state: ES5ArrayState) {\n\t\tconst {draft_} = state\n\t\tif (draft_.length !== state.base_.length) return true\n\t\t// See #116\n\t\t// If we first shorten the length, our array interceptors will be removed.\n\t\t// If after that new items are added, result in the same original length,\n\t\t// those last items will have no intercepting property.\n\t\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t\t// the last one\n\t\t// last descriptor can be not a trap, if the array was extended\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\tdraft_,\n\t\t\tdraft_.length - 1\n\t\t)\n\t\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\t\tif (descriptor && !descriptor.get) return true\n\t\t// if we miss a property, it has been deleted, so array probobaly changed\n\t\tfor (let i = 0; i < draft_.length; i++) {\n\t\t\tif (!draft_.hasOwnProperty(i)) return true\n\t\t}\n\t\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\t\treturn false\n\t}\n\n\tfunction hasChanges_(state: ES5State) {\n\t\treturn state.type_ === ProxyType.ES5Object\n\t\t\t? hasObjectChanges(state)\n\t\t\t: hasArrayChanges(state)\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"ES5\", {\n\t\tcreateES5Proxy_,\n\t\twillFinalizeES5_,\n\t\thasChanges_\n\t})\n}\n", "import {immerable} from \"../immer\"\nimport {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tES5ArrayState,\n\tProxyArrayState,\n\tMapState,\n\tES5ObjectState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tProxyType,\n\tArchtype,\n\tdie,\n\tisDraft,\n\tisDraftable,\n\tNOTHING\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ProxyType.ProxyObject:\n\t\t\tcase ProxyType.ES5Object:\n\t\t\tcase ProxyType.Map:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ProxyType.ES5Array:\n\t\t\tcase ProxyType.ProxyArray:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ProxyType.Set:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ES5ArrayState | ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tif (base_.length < copy_.length) {\n\t\t\tinversePatches.push({\n\t\t\t\top: REPLACE,\n\t\t\t\tpath: basePath.concat([\"length\"]),\n\t\t\t\tvalue: base_.length\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ES5ObjectState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\tbaseValue: any,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement === NOTHING ? undefined : replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: baseValue\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tconst parentType = getArchtype(base)\n\t\t\t\tconst p = \"\" + path[i]\n\t\t\t\t// See #738, avoid prototype pollution\n\t\t\t\tif (\n\t\t\t\t\t(parentType === Archtype.Object || parentType === Archtype.Array) &&\n\t\t\t\t\t(p === \"__proto__\" || p === \"constructor\")\n\t\t\t\t)\n\t\t\t\t\tdie(24)\n\t\t\t\tif (typeof base === \"function\" && p === \"prototype\") die(24)\n\t\t\t\tbase = get(base, p)\n\t\t\t\tif (typeof base !== \"object\") die(15, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\tdie(16)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Array:\n\t\t\t\t\t\t\treturn key === \"-\"\n\t\t\t\t\t\t\t\t? base.push(value)\n\t\t\t\t\t\t\t\t: base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Array:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(17, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\tif (has(obj, immerable)) cloned[immerable] = obj[immerable]\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n", "// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\titeratorSymbol,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tProxyType,\n\tdie,\n\teach\n} from \"../internal\"\n\nexport function enableMapSet() {\n\t/* istanbul ignore next */\n\tvar extendStatics = function(d: any, b: any): any {\n\t\textendStatics =\n\t\t\tObject.setPrototypeOf ||\n\t\t\t({__proto__: []} instanceof Array &&\n\t\t\t\tfunction(d, b) {\n\t\t\t\t\td.__proto__ = b\n\t\t\t\t}) ||\n\t\t\tfunction(d, b) {\n\t\t\t\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]\n\t\t\t}\n\t\treturn extendStatics(d, b)\n\t}\n\n\t// Ugly hack to resolve #502 and inherit built in Map / Set\n\tfunction __extends(d: any, b: any): any {\n\t\textendStatics(d, b)\n\t\tfunction __(this: any): any {\n\t\t\tthis.constructor = d\n\t\t}\n\t\td.prototype =\n\t\t\t// @ts-ignore\n\t\t\t((__.prototype = b.prototype), new __())\n\t}\n\n\tconst DraftMap = (function(_super) {\n\t\t__extends(DraftMap, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftMap(this: any, target: AnyMap, parent?: ImmerState): any {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyType.Map,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t} as MapState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftMap.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: false,\n\t\t\t// configurable: true\n\t\t})\n\n\t\tp.has = function(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tp.set = function(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!latest(state).has(key) || latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tif (state.base_.has(key)) {\n\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t} else {\n\t\t\t\tstate.assigned_!.delete(key)\n\t\t\t}\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_ = new Map()\n\t\t\t\teach(state.base_, key => {\n\t\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t\t})\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.forEach = function(\n\t\t\tcb: (value: any, key: any, self: any) => void,\n\t\t\tthisArg?: any\n\t\t) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tp.get = function(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp.entries = function(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.entries()\n\t\t}\n\n\t\treturn DraftMap\n\t})(Map)\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tconst DraftSet = (function(_super) {\n\t\t__extends(DraftSet, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftSet(this: any, target: AnySet, parent?: ImmerState) {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyType.Set,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t} as SetState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftSet.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: true,\n\t\t})\n\n\t\tp.has = function(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tp.add = function(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tp.entries = function entries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp.forEach = function forEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\n\t\treturn DraftSet\n\t})(Set)\n\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n", "import {enableES5} from \"./es5\"\nimport {enableMapSet} from \"./mapset\"\nimport {enablePatches} from \"./patches\"\n\nexport function enableAllPlugins() {\n\tenableES5()\n\tenableMapSet()\n\tenablePatches()\n}\n", "import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n", "// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n", "import { isArray, isFunction } from '../utilities/generic';\nimport produce, { Draft, enableAllPlugins } from 'immer';\nenableAllPlugins()\n\nexport const State = <T>(initialState: T) => {\n  let internalState: T = initialState;\n  return (handler?: T | ((internalState: T) => T)) => {\n    if (handler) {\n      internalState = isFunction(handler) ? handler(internalState) : handler;\n    }\n    return internalState;\n  }\n}\n\nexport const StateImmer = <T>(initialState: T) => {\n  let internalState: T = initialState;\n  return (handler?: ((internalState: Draft<T>) => any)) => {\n    if (handler) {\n      internalState = produce<T>(internalState, draft => {\n        handler(draft);\n      });\n    }\n    return internalState;\n  }\n}\n\nexport const SValue = <T extends Record<string, any>, V extends T[keyof T]>(\n  key: keyof T,\n  handler: V | ((v: V) => V),\n) => (internalState: T): T => {\n  return {\n    ...internalState,\n    [key]: isFunction(handler) ? handler(internalState[key]) : handler,\n  }\n}\n\n\n\nexport const SExtendValue = <T extends Record<string, any>, V extends T[keyof T]>(\n  key: keyof T,\n  handler: Partial<V> | ((v: V) => Partial<V>)\n) => SValue<T, V>(key, (item) => ({\n  ...item,\n  ...(\n    isFunction(handler)\n      ? handler(item)\n      : handler\n  )\n}))\n\nexport const SExtend = <T extends Record<string, any>>(\n  changes: Partial<T> | ((v: T) => Partial<T>)\n) => (original: T): T => ({\n  ...original,\n  ...(isFunction(changes) ? changes(original) : changes),\n})\n\nexport const SMapValues = <T extends Record<string, any>, V extends T[keyof T]>(\n  handler: (v: V, prop: keyof T) => V,\n) => (items: T): T => {\n  const r = Object.entries(items)\n    .map(([prop, value]) => [prop, handler(value, prop)]);\n  return Object.fromEntries(r as any) as T;\n}\n\n\nexport const SFilterValues = <T extends Record<string, any>, V extends T[keyof T]>(\n  handler: (v: V, prop: keyof T) => boolean,\n) => (items: T): T => {\n  const r = Object.entries(items)\n    .filter(([prop, value]) => handler(value, prop));\n  return Object.fromEntries(r as any) as T;\n}\n\n\nexport const SMapExtendValues = <T extends Record<string, any>, V extends T[keyof T]>(\n  handler: (v: T[keyof T], prop: keyof T) => Partial<V>,\n) => {\n  return SMapValues<T, V>((item, prop) => ({\n    ...item,\n    ...handler(item, prop),\n  }));\n}\n", "import { createEnum } from './utilities/generic'\n\nlet activeContext = null;\nexport const renderContext = (method: () => any) => {\n  activeContext = [];\n  method();\n  let response = activeContext;\n  activeContext = null;\n  return response\n}\nconst sendToContext = (item) => {\n  if (!activeContext) throw new Error('Outside of context');\n  activeContext.push(item);\n}\n\nexport const e = createEnum(\n'arcTo',\n'beginPath',\n'bezierCurveTo',\n'clearRect',\n'clip',\n'closePath',\n'createConicGradient',\n'createImageData',\n'createLinearGradient',\n'createPattern',\n'createRadialGradient',\n'drawFocusIfNeeded',\n'drawImage',\n'ellipse',\n'fill',\n'fillRect',\n'fillText',\n'getContextAttributes',\n'getImageData',\n'getLineDash',\n'getTransform',\n'isContextLost',\n'isPointInPath',\n'isPointInStroke',\n'lineTo',\n'measureText',\n'moveTo',\n'putImageData',\n'quadraticCurveTo',\n'rect',\n'reset',\n'resetTransform',\n'restore',\n'rotate',\n'roundRect',\n'save',\n'scale',\n'setLineDash',\n'setTransform',\n'stroke',\n'strokeRect',\n'strokeText',\n'transform',\n'translate',\n\n\n'direction',\n'fillStyle',\n'filter',\n'font',\n'fontKerning',\n'fontStretch',\n'fontVariantCaps',\n'globalAlpha',\n'globalCompositeOperation',\n'imageSmoothingEnabled',\n'imageSmoothingQuality',\n'letterSpacing',\n'lineCap',\n'lineDashOffset',\n'lineJoin',\n'lineWidth',\n'miterLimit',\n'shadowBlur',\n'shadowColor',\n'shadowOffsetX',\n'shadowOffsetY',\n'strokeStyle',\n'textAlign',\n'textBaseline',\n'textRendering',\n'wordSpacing',\n);\n\nexport const c = (e: number) => {\n  return (...args) => sendToContext([e, args])\n}\nexport const hf = () => (ctx, enumber, args) => {\n  ctx[e[enumber]](...args);\n}\nexport const hs = () => (ctx, enumber, [value]) => {\n  ctx[e[enumber]] = value;\n}\n\nexport const drawHandlers = new Map();\nexport const arcTo: CanvasRenderingContext2D['arcTo'] = c(e.arcTo);\nexport const beginPath: CanvasRenderingContext2D['beginPath'] = c(e.beginPath);\nexport const bezierCurveTo: CanvasRenderingContext2D['bezierCurveTo'] = c(e.bezierCurveTo);\nexport const clearRect: CanvasRenderingContext2D['clearRect'] = c(e.clearRect);\nexport const clip: CanvasRenderingContext2D['clip'] = c(e.clip);\nexport const closePath: CanvasRenderingContext2D['closePath'] = c(e.closePath);\nexport const createConicGradient: CanvasRenderingContext2D['createConicGradient'] = c(e.createConicGradient);\nexport const createImageData: CanvasRenderingContext2D['createImageData'] = c(e.createImageData);\nexport const createLinearGradient: CanvasRenderingContext2D['createLinearGradient'] = c(e.createLinearGradient);\nexport const createPattern: CanvasRenderingContext2D['createPattern'] = c(e.createPattern);\nexport const createRadialGradient: CanvasRenderingContext2D['createRadialGradient'] = c(e.createRadialGradient);\nexport const drawFocusIfNeeded: CanvasRenderingContext2D['drawFocusIfNeeded'] = c(e.drawFocusIfNeeded);\nexport const drawImage: CanvasRenderingContext2D['drawImage'] = c(e.drawImage);\nexport const ellipse: CanvasRenderingContext2D['ellipse'] = c(e.ellipse);\nexport const fill: CanvasRenderingContext2D['fill'] = c(e.fill);\nexport const fillRect: CanvasRenderingContext2D['fillRect'] = c(e.fillRect);\nexport const fillText: CanvasRenderingContext2D['fillText'] = c(e.fillText);\nexport const getContextAttributes: CanvasRenderingContext2D['getContextAttributes'] = c(e.getContextAttributes);\nexport const getImageData: CanvasRenderingContext2D['getImageData'] = c(e.getImageData);\nexport const getLineDash: CanvasRenderingContext2D['getLineDash'] = c(e.getLineDash);\nexport const getTransform: CanvasRenderingContext2D['getTransform'] = c(e.getTransform);\nexport const isContextLost: CanvasRenderingContext2D['isContextLost'] = c(e.isContextLost);\nexport const isPointInPath: CanvasRenderingContext2D['isPointInPath'] = c(e.isPointInPath);\nexport const isPointInStroke: CanvasRenderingContext2D['isPointInStroke'] = c(e.isPointInStroke);\nexport const lineTo: CanvasRenderingContext2D['lineTo'] = c(e.lineTo);\nexport const measureText: CanvasRenderingContext2D['measureText'] = c(e.measureText);\nexport const moveTo: CanvasRenderingContext2D['moveTo'] = c(e.moveTo);\nexport const putImageData: CanvasRenderingContext2D['putImageData'] = c(e.putImageData);\nexport const quadraticCurveTo: CanvasRenderingContext2D['quadraticCurveTo'] = c(e.quadraticCurveTo);\nexport const rect: CanvasRenderingContext2D['rect'] = c(e.rect);\nexport const reset: CanvasRenderingContext2D['reset'] = c(e.reset);\nexport const resetTransform: CanvasRenderingContext2D['resetTransform'] = c(e.resetTransform);\nexport const restore: CanvasRenderingContext2D['restore'] = c(e.restore);\nexport const rotate: CanvasRenderingContext2D['rotate'] = c(e.rotate);\nexport const roundRect: CanvasRenderingContext2D['roundRect'] = c(e.roundRect);\nexport const save: CanvasRenderingContext2D['save'] = c(e.save);\nexport const scale: CanvasRenderingContext2D['scale'] = c(e.scale);\nexport const setLineDash: CanvasRenderingContext2D['setLineDash'] = c(e.setLineDash);\nexport const setTransform: CanvasRenderingContext2D['setTransform'] = c(e.setTransform);\nexport const stroke: CanvasRenderingContext2D['stroke'] = c(e.stroke);\nexport const strokeRect: CanvasRenderingContext2D['strokeRect'] = c(e.strokeRect);\nexport const strokeText: CanvasRenderingContext2D['strokeText'] = c(e.strokeText);\nexport const transform: CanvasRenderingContext2D['transform'] = c(e.transform);\nexport const translate: CanvasRenderingContext2D['translate'] = c(e.translate);\ndrawHandlers.set(e.arcTo, hf());\ndrawHandlers.set(e.beginPath, hf());\ndrawHandlers.set(e.bezierCurveTo, hf());\ndrawHandlers.set(e.clearRect, hf());\ndrawHandlers.set(e.clip, hf());\ndrawHandlers.set(e.closePath, hf());\ndrawHandlers.set(e.createConicGradient, hf());\ndrawHandlers.set(e.createImageData, hf());\ndrawHandlers.set(e.createLinearGradient, hf());\ndrawHandlers.set(e.createPattern, hf());\ndrawHandlers.set(e.createRadialGradient, hf());\ndrawHandlers.set(e.drawFocusIfNeeded, hf());\ndrawHandlers.set(e.drawImage, hf());\ndrawHandlers.set(e.ellipse, hf());\ndrawHandlers.set(e.fill, hf());\ndrawHandlers.set(e.fillRect, hf());\ndrawHandlers.set(e.fillText, hf());\ndrawHandlers.set(e.getContextAttributes, hf());\ndrawHandlers.set(e.getImageData, hf());\ndrawHandlers.set(e.getLineDash, hf());\ndrawHandlers.set(e.getTransform, hf());\ndrawHandlers.set(e.isContextLost, hf());\ndrawHandlers.set(e.isPointInPath, hf());\ndrawHandlers.set(e.isPointInStroke, hf());\ndrawHandlers.set(e.lineTo, hf());\ndrawHandlers.set(e.measureText, hf());\ndrawHandlers.set(e.moveTo, hf());\ndrawHandlers.set(e.putImageData, hf());\ndrawHandlers.set(e.quadraticCurveTo, hf());\ndrawHandlers.set(e.rect, hf());\ndrawHandlers.set(e.reset, hf());\ndrawHandlers.set(e.resetTransform, hf());\ndrawHandlers.set(e.restore, hf());\ndrawHandlers.set(e.rotate, hf());\ndrawHandlers.set(e.roundRect, hf());\ndrawHandlers.set(e.save, hf());\ndrawHandlers.set(e.scale, hf());\ndrawHandlers.set(e.setLineDash, hf());\ndrawHandlers.set(e.setTransform, hf());\ndrawHandlers.set(e.stroke, hf());\ndrawHandlers.set(e.strokeRect, hf());\ndrawHandlers.set(e.strokeText, hf());\ndrawHandlers.set(e.transform, hf());\ndrawHandlers.set(e.translate, hf());\n\ntype SetMethod<T> = (value: T) => void;\nexport const direction: SetMethod<CanvasRenderingContext2D['direction']> = c(e.direction);\nexport const fillStyle: SetMethod<CanvasRenderingContext2D['fillStyle']> = c(e.fillStyle);\nexport const filter: SetMethod<CanvasRenderingContext2D['filter']> = c(e.filter);\nexport const font: SetMethod<CanvasRenderingContext2D['font']> = c(e.font);\nexport const fontKerning: SetMethod<CanvasRenderingContext2D['fontKerning']> = c(e.fontKerning);\nexport const fontStretch: SetMethod<CanvasRenderingContext2D['fontStretch']> = c(e.fontStretch);\nexport const fontVariantCaps: SetMethod<CanvasRenderingContext2D['fontVariantCaps']> = c(e.fontVariantCaps);\nexport const globalAlpha: SetMethod<CanvasRenderingContext2D['globalAlpha']> = c(e.globalAlpha);\nexport const globalCompositeOperation: SetMethod<CanvasRenderingContext2D['globalCompositeOperation']> = c(e.globalCompositeOperation);\nexport const imageSmoothingEnabled: SetMethod<CanvasRenderingContext2D['imageSmoothingEnabled']> = c(e.imageSmoothingEnabled);\nexport const imageSmoothingQuality: SetMethod<CanvasRenderingContext2D['imageSmoothingQuality']> = c(e.imageSmoothingQuality);\nexport const letterSpacing: SetMethod<CanvasRenderingContext2D['letterSpacing']> = c(e.letterSpacing);\nexport const lineCap: SetMethod<CanvasRenderingContext2D['lineCap']> = c(e.lineCap);\nexport const lineDashOffset: SetMethod<CanvasRenderingContext2D['lineDashOffset']> = c(e.lineDashOffset);\nexport const lineJoin: SetMethod<CanvasRenderingContext2D['lineJoin']> = c(e.lineJoin);\nexport const lineWidth: SetMethod<CanvasRenderingContext2D['lineWidth']> = c(e.lineWidth);\nexport const miterLimit: SetMethod<CanvasRenderingContext2D['miterLimit']> = c(e.miterLimit);\nexport const shadowBlur: SetMethod<CanvasRenderingContext2D['shadowBlur']> = c(e.shadowBlur);\nexport const shadowColor: SetMethod<CanvasRenderingContext2D['shadowColor']> = c(e.shadowColor);\nexport const shadowOffsetX: SetMethod<CanvasRenderingContext2D['shadowOffsetX']> = c(e.shadowOffsetX);\nexport const shadowOffsetY: SetMethod<CanvasRenderingContext2D['shadowOffsetY']> = c(e.shadowOffsetY);\nexport const strokeStyle: SetMethod<CanvasRenderingContext2D['strokeStyle']> = c(e.strokeStyle);\nexport const textAlign: SetMethod<CanvasRenderingContext2D['textAlign']> = c(e.textAlign);\nexport const textBaseline: SetMethod<CanvasRenderingContext2D['textBaseline']> = c(e.textBaseline);\nexport const textRendering: SetMethod<CanvasRenderingContext2D['textRendering']> = c(e.textRendering);\nexport const wordSpacing: SetMethod<CanvasRenderingContext2D['wordSpacing']> = c(e.wordSpacing);\ndrawHandlers.set(e.direction, hs());\ndrawHandlers.set(e.fillStyle, hs());\ndrawHandlers.set(e.filter, hs());\ndrawHandlers.set(e.font, hs());\ndrawHandlers.set(e.fontKerning, hs());\ndrawHandlers.set(e.fontStretch, hs());\ndrawHandlers.set(e.fontVariantCaps, hs());\ndrawHandlers.set(e.globalAlpha, hs());\ndrawHandlers.set(e.globalCompositeOperation, hs());\ndrawHandlers.set(e.imageSmoothingEnabled, hs());\ndrawHandlers.set(e.imageSmoothingQuality, hs());\ndrawHandlers.set(e.letterSpacing, hs());\ndrawHandlers.set(e.lineCap, hs());\ndrawHandlers.set(e.lineDashOffset, hs());\ndrawHandlers.set(e.lineJoin, hs());\ndrawHandlers.set(e.lineWidth, hs());\ndrawHandlers.set(e.miterLimit, hs());\ndrawHandlers.set(e.shadowBlur, hs());\ndrawHandlers.set(e.shadowColor, hs());\ndrawHandlers.set(e.shadowOffsetX, hs());\ndrawHandlers.set(e.shadowOffsetY, hs());\ndrawHandlers.set(e.strokeStyle, hs());\ndrawHandlers.set(e.textAlign, hs());\ndrawHandlers.set(e.textBaseline, hs());\ndrawHandlers.set(e.textRendering, hs());\ndrawHandlers.set(e.wordSpacing, hs());\n\nexport const executeOnCanvas = (ctx, [enumber, args]) => {\n  drawHandlers.get(enumber)(ctx, enumber, args)\n};", "import { CBTracker } from './CBTracker'\nimport { State } from './State/State';\nimport { renderContext } from './draw';\n\n\ntype FinalCallback = () => any;\n\nexport const $$initiate = CBTracker<() => any>('$$initiate2')\nexport const inputs = CBTracker<() => any>('inputs2')\nexport const preframe = CBTracker<() => any>('preframe2')\nexport const physics = CBTracker<() => any>('physics2')\nexport const update = CBTracker<() => any>('update2')\nexport const removal = CBTracker<() => any>('removal2');\n\nexport const prerender = CBTracker<() => any>('prerender')\nexport const render = CBTracker<() => any>('render')\n\nexport const final = CBTracker<FinalCallback>('final')\n\nexport const timeMS = State(0);\nexport const timeDiffMS = State(0);\nexport const timeS = State(0);\nexport const timeDiffS = State(0);\nexport const fps = State(0);\nconst calculateFpsFromDiff = (timeDiff) => Math.round(1 / timeDiff);\n\nconst attachTimes = (animateTimeMs) => {\n    const lastTimeMs = timeMS();\n    const diffTimeMs = animateTimeMs - lastTimeMs;\n    timeMS(animateTimeMs);\n    timeDiffMS(diffTimeMs);\n    timeS(animateTimeMs / 1000);\n    timeDiffS(diffTimeMs / 1000);\n    fps(calculateFpsFromDiff(timeDiffS()))\n}\n\nconst frame = (method) => {\n    // return setTimeout(method, 200);\n    return requestAnimationFrame(method)\n}\n\nexport const sentTracker = new WeakSet();\nexport function activate(canvasWorker) {\n    function animate(t) {\n        attachTimes(t)\n        const stateMethods = [...$$initiate, ...inputs, ...preframe, ...physics, ...update ]\n        const renderMethods = [...prerender, ...render ]\n        const endMethods = [ ...removal, ...final ];\n\n        stateMethods.forEach(callback => callback());\n        const renderContext2 = renderContext(() => {\n            renderMethods.forEach(callback => callback())\n        })\n        endMethods.forEach(callback => callback())\n        canvasWorker.newRenderer2(renderContext2);\n        frame(animate)\n    }\n    frame(animate)\n\n}", "import { curry } from 'ramda'\n\n\nconst getX = ([x]) => x;\nconst setX = ([_x, _y], value) => [value, _y];\nconst getY = ([_, y]) => y;\nconst setY = ([_x], value) => [_x, value];\n\nexport const from = (x = 0, y = x) => {\n    if (Array.isArray(x)) return from(x[0], x[1]);\n    return [x, y];\n}\n\nexport const zero = () => from(0)\nexport const x = (...args) => {\n    if (args.length === 0) throw new Error('X requires a method')\n    if (args.length === 1) return getX(...args);\n    if (args.length === 2) return setX(...args)\n}\nexport const y = (...args) => {\n    if (args.length === 0) throw new Error('X requires a method')\n    if (args.length === 1) return getY(...args)\n    if (args.length === 2) return setY(...args);\n}\n\nexport const add = curry((_1, _2) => {\n    const [x1, y1] = from(_1);\n    const [x2, y2] = from(_2);\n    return [x1 + x2, y1 + y2];\n})\n\nexport const up = (value) => from(0, value * -1)\nexport const down = (value) => from(0, value)\nexport const left = (value) => from(value * -1, 0)\nexport const right = (value) => from(value, 0)", "import { prerender } from './animate'\nimport { clearRect } from './draw'\nimport { curry } from 'ramda'\nimport { zero } from './Vector'\nimport { State } from './State/State'\n\nconst Canvas = State({ width: 1920, height: 1080 });\n\nexport const call = curry((key, args, actions) => [...actions, ['c', key, args]])\nexport const set = curry((key, value, actions) => [...actions, ['s', key, value]])\n\nexport const save = call('save')\nexport const fillRect = call('fillRect')\nexport const restore = call('restore')\nexport const fillStyle = set('fillStyle')\n\nexport const createCanvas = () => {\n    const canvas = document.createElement('canvas')\n    const { width, height } = Canvas();\n    Object.assign(canvas, { width, height })\n    Object.assign(canvas.style, { border: '1px solid #ccc', maxWidth: '100%' })\n    document.body.appendChild(canvas)\n    return canvas;\n}\n\nprerender.add(() => {\n  const { width, height } = Canvas();\n  clearRect(...zero(), width, height);\n})\n", "/** @hidden */\nfunction nop() { }\n/** @hidden */\nconst isArray = Array.isArray || function (xs) { return xs instanceof Array; };\n/** @hidden */\nfunction isObservable(x) {\n    return x && x._isObservable;\n}\n\n/** @hidden */\nfunction all(xs, f) {\n    for (var i = 0, x; i < xs.length; i++) {\n        x = xs[i];\n        if (!f(x)) {\n            return false;\n        }\n    }\n    return true;\n}\n/** @hidden */\nfunction always(x) { return () => x; }\n/** @hidden */\nfunction any(xs, f) {\n    for (var i = 0, x; i < xs.length; i++) {\n        x = xs[i];\n        if (f(x)) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @hidden */\nfunction bind(fn, me) {\n    return function () { return fn.apply(me, arguments); };\n}\n/** @hidden */\nfunction contains(xs, x) { return indexOf(xs, x) !== -1; }\n/** @hidden */\nfunction each(xs, f) {\n    for (var key in xs) {\n        if (Object.prototype.hasOwnProperty.call(xs, key)) {\n            var value = xs[key];\n            f(key, value);\n        }\n    }\n}\n/** @hidden */\nfunction empty(xs) { return xs.length === 0; }\n/** @hidden */\nfunction filter(f, xs) {\n    var filtered = [];\n    for (var i = 0, x; i < xs.length; i++) {\n        x = xs[i];\n        if (f(x)) {\n            filtered.push(x);\n        }\n    }\n    return filtered;\n}\n/** @hidden */\nfunction flatMap(f, xs) {\n    return fold(xs, [], (function (ys, x) {\n        return ys.concat(f(x));\n    }));\n}\n/** @hidden */\nfunction flip(f) {\n    return (a, b) => f(b, a);\n}\n/** @hidden */\nfunction fold(xs, seed, f) {\n    for (var i = 0, x; i < xs.length; i++) {\n        x = xs[i];\n        seed = f(seed, x);\n    }\n    return seed;\n}\n/** @hidden */\nfunction head(xs) {\n    return xs[0];\n}\n/** @hidden */\nfunction id(x) { return x; }\n/** @hidden */\nfunction indexOfDefault(xs, x) { return xs.indexOf(x); }\n/** @hidden */\nfunction indexOfFallback(xs, x) {\n    for (var i = 0, y; i < xs.length; i++) {\n        y = xs[i];\n        if (x === y) {\n            return i;\n        }\n    }\n    return -1;\n}\n/** @hidden */\nconst indexOf = Array.prototype.indexOf ? indexOfDefault : indexOfFallback;\n/** @hidden */\nfunction indexWhere(xs, f) {\n    for (var i = 0, y; i < xs.length; i++) {\n        y = xs[i];\n        if (f(y)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/** @hidden */\nfunction isFunction(f) { return typeof f === \"function\"; }\n/** @hidden */\nfunction last(xs) { return xs[xs.length - 1]; }\n/** @hidden */\nfunction map(f, xs) {\n    var result = [];\n    for (var i = 0, x; i < xs.length; i++) {\n        x = xs[i];\n        result.push(f(x));\n    }\n    return result;\n}\n/** @hidden */\nfunction negate(f) { return function (x) { return !f(x); }; }\n/** @hidden */\nfunction remove(x, xs) {\n    var i = indexOf(xs, x);\n    if (i >= 0) {\n        return xs.splice(i, 1);\n    }\n}\n/** @hidden */\nfunction tail(xs) {\n    return xs.slice(1, xs.length);\n}\n/** @hidden */\nfunction toArray(xs) { return (isArray(xs) ? xs : [xs]); }\n/** @hidden */\nfunction toFunction(f) {\n    if (typeof f == \"function\") {\n        return f;\n    }\n    return x => f;\n}\n/** @hidden */\nfunction toString(obj) {\n    var hasProp = {}.hasOwnProperty;\n    try {\n        recursionDepth++;\n        if (obj == null) {\n            return \"undefined\";\n        }\n        else if (isFunction(obj)) {\n            return \"function\";\n        }\n        else if (isArray(obj)) {\n            if (recursionDepth > 5) {\n                return \"[..]\";\n            }\n            return \"[\" + map(toString, obj).toString() + \"]\";\n        }\n        else if (((obj != null ? obj.toString : void 0) != null) && obj.toString !== Object.prototype.toString) {\n            return obj.toString();\n        }\n        else if (typeof obj === \"object\") {\n            if (recursionDepth > 5) {\n                return \"{..}\";\n            }\n            var results = [];\n            for (var key in obj) {\n                if (!hasProp.call(obj, key))\n                    continue;\n                let value = (function () {\n                    try {\n                        return obj[key];\n                    }\n                    catch (error) {\n                        return error;\n                    }\n                })();\n                results.push(toString(key) + \":\" + toString(value));\n            }\n            return \"{\" + results + \"}\";\n        }\n        else {\n            return obj;\n        }\n    }\n    finally {\n        recursionDepth--;\n    }\n}\n/** @hidden */\nfunction without(x, xs) {\n    return filter((function (y) { return y !== x; }), xs);\n}\nvar _ = {\n    indexOf,\n    indexWhere,\n    head,\n    always,\n    negate,\n    empty,\n    tail,\n    filter,\n    map,\n    each,\n    toArray,\n    contains,\n    id,\n    last,\n    all,\n    any,\n    without,\n    remove,\n    fold,\n    flatMap,\n    bind,\n    isFunction,\n    toFunction,\n    toString\n};\nvar recursionDepth = 0;\n\n/**\n * Reply for \"more data, please\".\n */\nconst more = undefined;\n/**\n * Reply for \"no more data, please\".\n */\nconst noMore = \"<no-more>\";\n\n/** @hidden */\nfunction assert(message, condition) {\n    if (!condition) {\n        throw new Error(message);\n    }\n}\n/** @hidden */\nfunction assertEventStream(event) {\n    if (!(event != null ? event._isEventStream : void 0)) {\n        throw new Error(\"not an EventStream : \" + event);\n    }\n}\n/** @hidden */\nfunction assertObservable(observable) {\n    if (!(observable != null ? observable._isObservable : void 0)) {\n        throw new Error(\"not an Observable : \" + observable);\n    }\n}\n/** @hidden */\nfunction assertFunction(f) {\n    return assert(\"not a function : \" + f, _.isFunction(f));\n}\n/** @hidden */\nfunction assertArray(xs) {\n    if (!isArray(xs)) {\n        throw new Error(\"not an array : \" + xs);\n    }\n}\n/** @hidden */\nfunction assertNoArguments(args) {\n    return assert(\"no arguments supported\", args.length === 0);\n}\n\n/** @hidden */\nconst defaultScheduler = {\n    setTimeout(f, d) { return setTimeout(f, d); },\n    setInterval(f, i) { return setInterval(f, i); },\n    clearInterval(id) { return clearInterval(id); },\n    clearTimeout(id) { return clearTimeout(id); },\n    now() { return new Date().getTime(); }\n};\nconst GlobalScheduler = {\n    scheduler: defaultScheduler\n};\nfunction getScheduler() {\n    return GlobalScheduler.scheduler;\n}\nfunction setScheduler(newScheduler) {\n    GlobalScheduler.scheduler = newScheduler;\n}\n\nvar rootEvent = undefined;\nvar waiterObs = [];\nvar waiters = {};\nvar aftersStack = [];\nvar aftersStackHeight = 0;\nvar flushed = {};\nvar processingAfters = false;\nfunction toString$1() {\n    return _.toString({ rootEvent, processingAfters, waiterObs, waiters, aftersStack, aftersStackHeight, flushed });\n}\nfunction ensureStackHeight(h) {\n    if (h <= aftersStackHeight)\n        return;\n    if (!aftersStack[h - 1]) {\n        aftersStack[h - 1] = [[], 0];\n    }\n    aftersStackHeight = h;\n}\nfunction isInTransaction() {\n    return rootEvent !== undefined;\n}\nfunction soonButNotYet(obs, f) {\n    if (rootEvent) {\n        // If in transaction -> perform within transaction\n        //console.log('in tx')\n        whenDoneWith(obs, f);\n    }\n    else {\n        // Otherwise -> perform with timeout\n        //console.log('with timeout')\n        GlobalScheduler.scheduler.setTimeout(f, 0);\n    }\n}\nfunction afterTransaction(obs, f) {\n    if (rootEvent || processingAfters) {\n        ensureStackHeight(1);\n        var stackIndexForThisObs = 0;\n        while (stackIndexForThisObs < aftersStackHeight - 1) {\n            if (containsObs(obs, aftersStack[stackIndexForThisObs][0])) {\n                // this observable is already being processed at this stack index -> use this index\n                break;\n            }\n            stackIndexForThisObs++;\n        }\n        var listFromStack = aftersStack[stackIndexForThisObs][0];\n        listFromStack.push([obs, f]);\n        if (!rootEvent) {\n            processAfters(); // wouldn't be called otherwise\n        }\n    }\n    else {\n        return f();\n    }\n}\nfunction containsObs(obs, aftersList) {\n    for (var i = 0; i < aftersList.length; i++) {\n        if (aftersList[i][0].id == obs.id)\n            return true;\n    }\n    return false;\n}\nfunction processAfters() {\n    let stackSizeAtStart = aftersStackHeight;\n    if (!stackSizeAtStart)\n        return;\n    let isRoot = !processingAfters;\n    processingAfters = true;\n    try {\n        while (aftersStackHeight >= stackSizeAtStart) { // to prevent sinking to levels started by others\n            var topOfStack = aftersStack[aftersStackHeight - 1];\n            if (!topOfStack)\n                throw new Error(\"Unexpected stack top: \" + topOfStack);\n            var [topAfters, index] = topOfStack;\n            if (index < topAfters.length) {\n                var [, after] = topAfters[index];\n                topOfStack[1]++; // increase index already here to indicate that this level is being processed\n                ensureStackHeight(aftersStackHeight + 1); // to ensure there's a new level for recursively added afters\n                var callSuccess = false;\n                try {\n                    after();\n                    callSuccess = true;\n                    while (aftersStackHeight > stackSizeAtStart && aftersStack[aftersStackHeight - 1][0].length == 0) {\n                        aftersStackHeight--;\n                    }\n                }\n                finally {\n                    if (!callSuccess) {\n                        aftersStack = [];\n                        aftersStackHeight = 0; // reset state to prevent stale updates after error\n                    }\n                }\n            }\n            else {\n                topOfStack[0] = [];\n                topOfStack[1] = 0; // reset this level\n                break;\n            }\n        }\n    }\n    finally {\n        if (isRoot)\n            processingAfters = false;\n    }\n}\nfunction whenDoneWith(obs, f) {\n    if (rootEvent) {\n        var obsWaiters = waiters[obs.id];\n        if (obsWaiters === undefined) {\n            obsWaiters = waiters[obs.id] = [f];\n            return waiterObs.push(obs);\n        }\n        else {\n            return obsWaiters.push(f);\n        }\n    }\n    else {\n        return f();\n    }\n}\nfunction flush() {\n    while (waiterObs.length > 0) {\n        flushWaiters(0, true);\n    }\n    flushed = {};\n}\nfunction flushWaiters(index, deps) {\n    var obs = waiterObs[index];\n    var obsId = obs.id;\n    var obsWaiters = waiters[obsId];\n    waiterObs.splice(index, 1);\n    delete waiters[obsId];\n    if (deps && waiterObs.length > 0) {\n        flushDepsOf(obs);\n    }\n    for (var i = 0, f; i < obsWaiters.length; i++) {\n        f = obsWaiters[i];\n        f();\n    }\n}\nfunction flushDepsOf(obs) {\n    if (flushed[obs.id])\n        return;\n    var deps = obs.internalDeps();\n    for (var i = 0, dep; i < deps.length; i++) {\n        dep = deps[i];\n        flushDepsOf(dep);\n        if (waiters[dep.id]) {\n            var index = _.indexOf(waiterObs, dep);\n            flushWaiters(index, false);\n        }\n    }\n    flushed[obs.id] = true;\n}\nfunction inTransaction(event, context, f, args) {\n    if (rootEvent) {\n        //console.log(\"in tx\")\n        return f.apply(context, args);\n    }\n    else {\n        //console.log(\"start tx\")\n        rootEvent = event;\n        try {\n            var result = f.apply(context, args);\n            //console.log(\"done with tx\")\n            flush();\n        }\n        finally {\n            rootEvent = undefined;\n            processAfters();\n        }\n        return result;\n    }\n}\nfunction currentEventId() {\n    return rootEvent ? rootEvent.id : undefined;\n}\nfunction wrappedSubscribe(obs, subscribe, sink) {\n    assertFunction(sink);\n    let unsubd = false;\n    let shouldUnsub = false;\n    let doUnsub = () => {\n        shouldUnsub = true;\n    };\n    let unsub = () => {\n        unsubd = true;\n        doUnsub();\n    };\n    doUnsub = subscribe(function (event) {\n        afterTransaction(obs, function () {\n            if (!unsubd) {\n                var reply = sink(event);\n                if (reply === noMore) {\n                    unsub();\n                }\n            }\n        });\n        return more;\n    });\n    if (shouldUnsub) {\n        doUnsub();\n    }\n    return unsub;\n}\nfunction hasWaiters() { return waiterObs.length > 0; }\nvar UpdateBarrier = { toString: toString$1, whenDoneWith, hasWaiters, inTransaction, currentEventId, wrappedSubscribe, afterTransaction, soonButNotYet, isInTransaction };\n\nclass Desc {\n    constructor(context, method, args = []) {\n        /** @hidden */\n        this._isDesc = true;\n        //assert(\"context missing\", context)\n        //assert(\"method missing\", method)\n        //assert(\"args missing\", args)\n        this.context = context;\n        this.method = method;\n        this.args = args;\n    }\n    deps() {\n        if (!this.cachedDeps) {\n            this.cachedDeps = findDeps([this.context].concat(this.args));\n        }\n        return this.cachedDeps;\n    }\n    toString() {\n        let args = _.map(_.toString, this.args);\n        return _.toString(this.context) + \".\" + _.toString(this.method) + \"(\" + args + \")\";\n    }\n}\n/** @hidden */\nfunction describe(context, method, ...args) {\n    const ref = context || method;\n    if (ref && ref._isDesc) {\n        return context || method;\n    }\n    else {\n        return new Desc(context, method, args);\n    }\n}\n/** @hidden */\nfunction findDeps(x) {\n    if (isArray(x)) {\n        return _.flatMap(findDeps, x);\n    }\n    else if (isObservable(x)) {\n        return [x];\n    }\n    else if ((typeof x !== \"undefined\" && x !== null) ? x._isSource : undefined) {\n        return [x.obs];\n    }\n    else {\n        return [];\n    }\n}\n\n/** @hidden */\nconst nullSink = () => more;\n/** @hidden */\nconst nullVoidSink = () => more;\n\n/** @hidden */\nfunction withStateMachine(initState, f, src) {\n    return src.transform(withStateMachineT(initState, f), new Desc(src, \"withStateMachine\", [initState, f]));\n}\nfunction withStateMachineT(initState, f) {\n    let state = initState;\n    return (event, sink) => {\n        var fromF = f(state, event);\n        var [newState, outputs] = fromF;\n        state = newState;\n        var reply = more;\n        for (var i = 0; i < outputs.length; i++) {\n            let output = outputs[i];\n            reply = sink(output);\n            if (reply === noMore) {\n                return reply;\n            }\n        }\n        return reply;\n    };\n}\n\n/** @hidden */\nclass Some {\n    constructor(value) {\n        this._isSome = true;\n        this.isDefined = true;\n        this.value = value;\n    }\n    getOrElse(arg) { return this.value; }\n    get() { return this.value; }\n    filter(f) {\n        if (f(this.value)) {\n            return new Some(this.value);\n        }\n        else {\n            return None;\n        }\n    }\n    map(f) {\n        return new Some(f(this.value));\n    }\n    forEach(f) {\n        f(this.value);\n    }\n    toArray() { return [this.value]; }\n    inspect() { return \"Some(\" + this.value + \")\"; }\n    toString() { return this.inspect(); }\n}\n/** @hidden */\nconst None = {\n    _isNone: true,\n    getOrElse(value) { return value; },\n    get() { throw new Error(\"None.get()\"); },\n    filter() { return None; },\n    map() { return None; },\n    forEach() { },\n    isDefined: false,\n    toArray() { return []; },\n    inspect() { return \"None\"; },\n    toString() { return this.inspect(); }\n};\nfunction none() { return None; }\nfunction toOption(v) {\n    if (v && (v._isSome || v._isNone)) {\n        return v;\n    }\n    else {\n        return new Some(v);\n    }\n}\nfunction isNone(object) {\n    return ((typeof object !== \"undefined\" && object !== null) ? object._isNone : false);\n}\n\n/** @hidden */\nvar eventIdCounter = 0;\n/**\n * Base class for all events passed through [EventStreams](eventstream.html) and [Properties](property.html).\n */\nclass Event {\n    constructor() {\n        this.id = ++eventIdCounter;\n        /** @hidden */\n        this.isEvent = true;\n        /** @hidden */\n        this._isEvent = true;\n        this.isEnd = false;\n        this.isInitial = false;\n        this.isNext = false;\n        this.isError = false;\n        this.hasValue = false;\n    }\n    /** @hidden */\n    filter(f) { return true; }\n    /** @hidden */\n    inspect() { return this.toString(); }\n    /** @hidden */\n    log() { return this.toString(); }\n    /** @hidden */\n    toNext() { return this; }\n}\n/**\n *  Base class for all [Events](event.html) carrying a value.\n *\n *  Can be distinguished from other events using [hasValue](../globals.html#hasvalue)\n **/\nclass Value extends Event {\n    constructor(value) {\n        super();\n        this.hasValue = true;\n        if (value instanceof Event) {\n            throw new Error$1(\"Wrapping an event inside other event\");\n        }\n        this.value = value;\n    }\n    /** @hidden */\n    fmap(f) {\n        return this.apply(f(this.value));\n    }\n    /** @hidden */\n    filter(f) { return f(this.value); }\n    /** @hidden */\n    toString() { return _.toString(this.value); }\n    //toString(): string { return \"<value \" + this.id + \">\" + _.toString(this.value) }\n    /** @hidden */\n    log() { return this.value; }\n}\n/**\n *  Indicates a new value in an [EventStream](eventstream.html) or a [Property](property.html).\n *\n *  Can be distinguished from other events using [isNext](../globals.html#isnext)\n */\nclass Next extends Value {\n    constructor(value) {\n        super(value);\n        this.isNext = true;\n        /** @hidden */\n        this._isNext = true; // some compatibility stuff?\n    }\n    /** @hidden */\n    apply(value) { return new Next(value); }\n}\n/**\n * An event carrying the initial value of a [Property](classes/property.html). This event can be emitted by a property\n * immediately when subscribing to it.\n *\n * Can be distinguished from other events using [isInitial](../globals.html#isinitial)\n */\nclass Initial extends Value {\n    constructor(value) {\n        super(value);\n        this.isInitial = true;\n        /** @hidden */\n        this._isInitial = true;\n    }\n    /** @hidden */\n    apply(value) { return new Initial(value); }\n    /** @hidden */\n    toNext() { return new Next(this.value); }\n}\n/**\n * Base class for events not carrying a value.\n */\nclass NoValue extends Event {\n    constructor() {\n        super(...arguments);\n        this.hasValue = false;\n    }\n    /** @hidden */\n    fmap(f) {\n        return this;\n    }\n}\n/**\n * An event that indicates the end of an [EventStream](classes/eventstream.html) or a [Property](classes/property.html).\n * No more events can be emitted after this one.\n *\n * Can be distinguished from other events using [isEnd](../globals.html#isend)\n */\nclass End extends NoValue {\n    constructor() {\n        super(...arguments);\n        this.isEnd = true;\n    }\n    /** @hidden */\n    toString() { return \"<end>\"; }\n}\n/**\n *  An event carrying an error. You can use [onError](observable.html#onerror) to subscribe to errors.\n */\nclass Error$1 extends NoValue {\n    constructor(error) {\n        super();\n        this.isError = true;\n        this.error = error;\n    }\n    /** @hidden */\n    toString() {\n        return \"<error> \" + _.toString(this.error);\n    }\n}\n/** @hidden */\nfunction initialEvent(value) { return new Initial(value); }\n/** @hidden */\nfunction nextEvent(value) { return new Next(value); }\n/** @hidden */\nfunction endEvent() { return new End(); }\n/** @hidden */\nfunction toEvent(x) {\n    if (x && x._isEvent) {\n        return x;\n    }\n    else {\n        return nextEvent(x);\n    }\n}\n/**\n * Returns true if the given object is an [Event](classes/event.html).\n */\nfunction isEvent(e) {\n    return e && e._isEvent;\n}\n/**\n * Returns true if the given event is an [Initial](classes/initial.html) value of a [Property](classes/property.html).\n */\nfunction isInitial(e) {\n    return e && e._isInitial;\n}\n/**\n * Returns true if the given event is an [Error](classes/error.html) event of an [Observable](classes/observable.html).\n */\nfunction isError(e) {\n    return e.isError;\n}\n/**\n * Returns true if the given event is a [Value](classes/value.html), i.e. a [Next](classes/next.html) or\n * an [Initial](classes/error.html) value of an [Observable](classes/observable.html).\n */\nfunction hasValue(e) {\n    return e.hasValue;\n}\n/**\n * Returns true if the given event is an [End](classes/end.html)\n */\nfunction isEnd(e) {\n    return e.isEnd;\n}\n/**\n * Returns true if the given event is a [Next](classes/next.html)\n */\nfunction isNext(e) {\n    return e.isNext;\n}\n\n/** @hidden */\nfunction equals(a, b) { return a === b; }\n/** @hidden */\nfunction skipDuplicates(src, isEqual = equals) {\n    let desc = new Desc(src, \"skipDuplicates\", []);\n    return withStateMachine(none(), function (prev, event) {\n        if (!hasValue(event)) {\n            return [prev, [event]];\n        }\n        else if (event.isInitial || isNone(prev) || !isEqual(prev.get(), event.value)) {\n            return [new Some(event.value), [event]];\n        }\n        else {\n            return [prev, []];\n        }\n    }, src).withDesc(desc);\n}\n\n/** @hidden */\nfunction take(count, src, desc) {\n    return src.transform(takeT(count), desc || new Desc(src, \"take\", [count]));\n}\n/** @hidden */\nfunction takeT(count) {\n    return (e, sink) => {\n        if (!e.hasValue) {\n            return sink(e);\n        }\n        else {\n            count--;\n            if (count > 0) {\n                return sink(e);\n            }\n            else {\n                if (count === 0) {\n                    sink(e);\n                }\n                sink(endEvent());\n                return noMore;\n            }\n        }\n    };\n}\n\n/** @hidden */\nfunction log(args, src) {\n    src.subscribe(function (event) {\n        if (typeof console !== \"undefined\" && typeof console.log === \"function\") {\n            console.log(...args.concat([event.log()]));\n        }\n        return more;\n    });\n}\n\n/** @hidden */\nfunction doLogT(args) {\n    return (event, sink) => {\n        if (typeof console !== \"undefined\" && console !== null && typeof console.log === \"function\") {\n            console.log(...args.concat([event.log()]));\n        }\n        return sink(event);\n    };\n}\n\n/** @hidden */\nfunction doErrorT(f) {\n    return (event, sink) => {\n        if (isError(event)) {\n            f(event.error);\n        }\n        return sink(event);\n    };\n}\n\n/** @hidden */\nfunction doActionT(f) {\n    return (event, sink) => {\n        if (hasValue(event)) {\n            f(event.value);\n        }\n        return sink(event);\n    };\n}\n\n/** @hidden */\nfunction doEndT(f) {\n    return (event, sink) => {\n        if (isEnd(event)) {\n            f();\n        }\n        return sink(event);\n    };\n}\n\n/** @hidden */\nfunction scan(src, seed, f) {\n    let resultProperty;\n    let acc = seed;\n    let initHandled = false;\n    const subscribe = (sink) => {\n        var initSent = false;\n        var unsub = nop;\n        var reply = more;\n        const sendInit = function () {\n            if (!initSent) {\n                initSent = initHandled = true;\n                reply = sink(new Initial(acc));\n                if (reply === noMore) {\n                    unsub();\n                    unsub = nop;\n                }\n            }\n            return reply;\n        };\n        unsub = src.subscribeInternal(function (event) {\n            if (hasValue(event)) {\n                if (initHandled && event.isInitial) {\n                    //console.log \"skip INITIAL\"\n                    return more; // init already sent, skip this one\n                }\n                else {\n                    if (!event.isInitial) {\n                        sendInit();\n                    }\n                    initSent = initHandled = true;\n                    var prev = acc;\n                    var next = f(prev, event.value);\n                    //console.log prev , \",\", event.value, \"->\", next\n                    acc = next;\n                    return sink(event.apply(next));\n                }\n            }\n            else {\n                if (event.isEnd) {\n                    reply = sendInit();\n                }\n                if (reply !== noMore) {\n                    return sink(event);\n                }\n                return reply;\n            }\n        });\n        UpdateBarrier.whenDoneWith(resultProperty, sendInit);\n        return unsub;\n    };\n    return resultProperty = new Property(new Desc(src, \"scan\", [seed, f]), subscribe);\n}\n\n/** @hidden */\nfunction mapEndT(f) {\n    let theF = _.toFunction(f);\n    return function (event, sink) {\n        if (isEnd(event)) {\n            sink(nextEvent(theF(event)));\n            sink(endEvent());\n            return noMore;\n        }\n        else {\n            return sink(event);\n        }\n    };\n}\n\n/** @hidden */\nfunction mapErrorT(f) {\n    let theF = _.toFunction(f);\n    return function (event, sink) {\n        if (isError(event)) {\n            return sink(nextEvent(theF(event.error)));\n        }\n        else {\n            return sink(event);\n        }\n    };\n}\n\n/** @hidden */\nfunction skipErrors(src) {\n    return src.transform(function (event, sink) {\n        if (isError(event)) {\n            return more;\n        }\n        else {\n            return sink(event);\n        }\n    }, new Desc(src, \"skipErrors\", []));\n}\n\n/** @hidden */\nfunction last$1(src) {\n    var lastEvent;\n    return src.transform(function (event, sink) {\n        if (isEnd(event)) {\n            if (lastEvent) {\n                sink(lastEvent);\n            }\n            sink(endEvent());\n            return noMore;\n        }\n        else if (hasValue(event)) {\n            lastEvent = event;\n            return more;\n        }\n        else {\n            return sink(event);\n        }\n    }).withDesc(new Desc(src, \"last\", []));\n}\n\n/** @hidden */\nclass CompositeUnsubscribe {\n    constructor(ss = []) {\n        this.unsubscribed = false;\n        this.unsubscribe = _.bind(this.unsubscribe, this);\n        this.unsubscribed = false;\n        this.subscriptions = [];\n        this.starting = [];\n        for (var i = 0, s; i < ss.length; i++) {\n            s = ss[i];\n            this.add(s);\n        }\n    }\n    add(subscription) {\n        if (!this.unsubscribed) {\n            var ended = false;\n            var unsub = nop;\n            this.starting.push(subscription);\n            var unsubMe = () => {\n                if (this.unsubscribed) {\n                    return;\n                }\n                ended = true;\n                this.remove(unsub);\n                _.remove(subscription, this.starting);\n            };\n            unsub = subscription(this.unsubscribe, unsubMe);\n            if (!(this.unsubscribed || ended)) {\n                this.subscriptions.push(unsub);\n            }\n            else {\n                unsub();\n            }\n            _.remove(subscription, this.starting);\n        }\n    }\n    remove(unsub) {\n        if (this.unsubscribed) {\n            return;\n        }\n        if ((_.remove(unsub, this.subscriptions)) !== undefined) {\n            return unsub();\n        }\n    }\n    unsubscribe() {\n        if (this.unsubscribed) {\n            return;\n        }\n        this.unsubscribed = true;\n        var iterable = this.subscriptions;\n        for (var i = 0; i < iterable.length; i++) {\n            iterable[i]();\n        }\n        this.subscriptions = [];\n        this.starting = [];\n    }\n    count() {\n        if (this.unsubscribed) {\n            return 0;\n        }\n        return this.subscriptions.length + this.starting.length;\n    }\n    empty() {\n        return this.count() === 0;\n    }\n}\n\n/** @hidden */\nfunction streamSubscribeToPropertySubscribe(initValue, streamSubscribe) {\n    //assertFunction(streamSubscribe)\n    return function (sink) {\n        var initSent = false;\n        var subbed = false;\n        var unsub = nop;\n        var reply = more;\n        var sendInit = function () {\n            if (!initSent) {\n                return initValue.forEach(function (value) {\n                    initSent = true;\n                    reply = sink(new Initial(value));\n                    if (reply === noMore) {\n                        unsub();\n                        unsub = nop;\n                        return nop;\n                    }\n                });\n            }\n        };\n        unsub = streamSubscribe(function (event) {\n            if (event instanceof Value) {\n                if (event.isInitial && !subbed) {\n                    initValue = new Some(event.value);\n                    return more;\n                }\n                else {\n                    if (!event.isInitial) {\n                        sendInit();\n                    }\n                    initSent = true;\n                    initValue = new Some(event.value);\n                    return sink(event);\n                }\n            }\n            else {\n                if (event.isEnd) {\n                    reply = sendInit();\n                }\n                if (reply !== noMore) {\n                    return sink(event);\n                }\n                return reply;\n            }\n        });\n        subbed = true;\n        sendInit();\n        return unsub;\n    };\n}\n\n/** @hidden */\nfunction propertyFromStreamSubscribe(desc, subscribe) {\n    assertFunction(subscribe);\n    return new Property(desc, streamSubscribeToPropertySubscribe(none(), subscribe));\n}\n\n/**\n Creates an EventStream that delivers the given\n single value for the first subscriber. The stream will end immediately\n after this value. You can also send an [`Bacon.Error`](#bacon-error) event instead of a\n value: `Bacon.once(new Bacon.Error(\"fail\"))`.\n\n @param   value   the value or event to emit\n @typeparam V Type of stream elements\n */\nfunction once(value) {\n    const s = new EventStream(new Desc(\"Bacon\", \"once\", [value]), function (sink) {\n        UpdateBarrier.soonButNotYet(s, function () {\n            sink(toEvent(value));\n            sink(endEvent());\n        });\n        return nop;\n    });\n    return s;\n}\n\n/** @hidden */\nfunction flatMap_(spawner, src, params = {}) {\n    const root = src;\n    const rootDep = [root];\n    const childDeps = [];\n    const isProperty = src._isProperty;\n    const ctor = (isProperty ? propertyFromStreamSubscribe : newEventStreamAllowSync);\n    let initialSpawned = false;\n    const desc = params.desc || new Desc(src, \"flatMap_\", [spawner]);\n    const result = ctor(desc, function (sink) {\n        const composite = new CompositeUnsubscribe();\n        const queue = [];\n        function spawn(event) {\n            if (isProperty && event.isInitial) {\n                if (initialSpawned) {\n                    return more;\n                }\n                initialSpawned = true;\n            }\n            const child = makeObservable(spawner(event));\n            childDeps.push(child);\n            return composite.add(function (unsubAll, unsubMe) {\n                return child.subscribeInternal(function (event) {\n                    if (event.isEnd) {\n                        _.remove(child, childDeps);\n                        checkQueue();\n                        checkEnd(unsubMe);\n                        return noMore;\n                    }\n                    else {\n                        event = event.toNext(); // To support Property as the spawned stream\n                        const reply = sink(event);\n                        if (reply === noMore) {\n                            unsubAll();\n                        }\n                        return reply;\n                    }\n                });\n            });\n        }\n        function checkQueue() {\n            const event = queue.shift();\n            if (event) {\n                spawn(event);\n            }\n        }\n        function checkEnd(unsub) {\n            unsub();\n            if (composite.empty()) {\n                return sink(endEvent());\n            }\n            return more;\n        }\n        composite.add(function (__, unsubRoot) {\n            return root.subscribeInternal(function (event) {\n                if (event.isEnd) {\n                    return checkEnd(unsubRoot);\n                }\n                else if (event.isError && !params.mapError) {\n                    return sink(event);\n                }\n                else if (params.firstOnly && composite.count() > 1) {\n                    return more;\n                }\n                else {\n                    if (composite.unsubscribed) {\n                        return noMore;\n                    }\n                    if (params.limit && composite.count() > params.limit) {\n                        queue.push(event);\n                    }\n                    else {\n                        spawn(event);\n                    }\n                    return more;\n                }\n            });\n        });\n        return composite.unsubscribe;\n    });\n    result.internalDeps = function () {\n        if (childDeps.length) {\n            return rootDep.concat(childDeps);\n        }\n        else {\n            return rootDep;\n        }\n    };\n    return result;\n}\n/** @hidden */\nfunction handleEventValueWith(f) {\n    if (typeof f == \"function\") {\n        return ((event) => {\n            if (hasValue(event)) {\n                return f(event.value);\n            }\n            return event;\n        });\n    }\n    return ((event) => f);\n}\n/** @hidden */\nfunction makeObservable(x) {\n    if (isObservable(x)) {\n        return x;\n    }\n    else {\n        return once(x);\n    }\n}\n\n/** @hidden */\nfunction flatMapEvent(src, f) {\n    return flatMap_(f, src, {\n        mapError: true,\n        desc: new Desc(src, \"flatMapEvent\", [f])\n    });\n}\n\n/** @hidden */\nfunction endAsValue(src) {\n    return src.transform((event, sink) => {\n        if (isEnd(event)) {\n            sink(nextEvent({}));\n            sink(endEvent());\n            return noMore;\n        }\n        return more;\n    });\n}\n\n/** @hidden */\nfunction endOnError(src, predicate = x => true) {\n    return src.transform((event, sink) => {\n        if (isError(event) && predicate(event.error)) {\n            sink(event);\n            return sink(endEvent());\n        }\n        else {\n            return sink(event);\n        }\n    }, new Desc(src, \"endOnError\", []));\n}\n\n/** @hidden */\nclass Source {\n    constructor(obs, sync) {\n        this._isSource = true;\n        this.flatten = true;\n        this.ended = false;\n        this.obs = obs;\n        this.sync = sync;\n    }\n    subscribe(sink) {\n        return this.obs.subscribeInternal(sink);\n    }\n    toString() {\n        return this.obs.toString();\n    }\n    markEnded() {\n        this.ended = true;\n    }\n    mayHave(count) { return true; }\n}\n/** @hidden */\nclass DefaultSource extends Source {\n    consume() {\n        return this.value;\n    }\n    push(x) {\n        this.value = x;\n    }\n    hasAtLeast(c) {\n        return !!this.value;\n    }\n}\n/** @hidden */\nclass ConsumingSource extends Source {\n    constructor(obs, sync) {\n        super(obs, sync);\n        this.flatten = false;\n        this.queue = [];\n    }\n    consume() {\n        return this.queue.shift();\n    }\n    push(x) {\n        this.queue.push(x);\n    }\n    mayHave(count) {\n        return !this.ended || this.queue.length >= count;\n    }\n    hasAtLeast(count) {\n        return this.queue.length >= count;\n    }\n}\n/** @hidden */\nclass BufferingSource extends Source {\n    constructor(obs) {\n        super(obs, true);\n        this.queue = [];\n    }\n    consume() {\n        const values = this.queue;\n        this.queue = [];\n        return {\n            value: values\n        };\n    }\n    push(x) {\n        return this.queue.push(x.value);\n    }\n    hasAtLeast(count) {\n        return true;\n    }\n}\n/** @hidden */\nfunction isTrigger(s) {\n    if (s == null)\n        return false;\n    if (s._isSource) {\n        return s.sync;\n    }\n    else {\n        return s._isEventStream;\n    }\n}\n/** @hidden */\nfunction fromObservable(s) {\n    if (s != null && s._isSource) {\n        return s;\n    }\n    else if (s != null && s._isProperty) {\n        return new DefaultSource(s, false);\n    }\n    else {\n        return new ConsumingSource(s, true);\n    }\n}\n\n/**\n Creates an EventStream that immediately ends.\n @typeparam V Type of stream elements\n */\nfunction never() {\n    return new EventStream(describe(\"Bacon\", \"never\"), (sink) => {\n        sink(endEvent());\n        return nop;\n    });\n}\n\n/**\n The `when` method provides a generalization of the [`zip`](classes/observable.html#zip) function. While zip\n synchronizes events from multiple streams pairwse, the join patterns used in `when` allow\n the implementation of more advanced synchronization patterns.\n\n Consider implementing a game with discrete time ticks. We want to\n handle key-events synchronized on tick-events, with at most one key\n event handled per tick. If there are no key events, we want to just\n process a tick.\n\n ```js\n Bacon.when(\n [tick, keyEvent, function(_, k) { handleKeyEvent(k); return handleTick(); }],\n [tick, handleTick])\n ```\n\n Order is important here. If the [tick] patterns had been written\n first, this would have been tried first, and preferred at each tick.\n\n Join patterns are indeed a generalization of zip, and for EventStreams, zip is\n equivalent to a single-rule join pattern. The following observables\n have the same output, assuming that all sources are EventStreams.\n\n ```js\n Bacon.zipWith(a,b,c, combine)\n Bacon.when([a,b,c], combine)\n ```\n\n Note that [`Bacon.when`](#bacon-when) does not trigger updates for events from Properties though;\n if you use a Property in your pattern, its value will be just sampled when all the\n other sources (EventStreams) have a value. This is useful when you need a value of a Property\n in your calculations. If you want your pattern to fire for a Property too, you can\n convert it into an EventStream using [`property.changes()`](#property-changes) or [`property.toEventStream()`](#property-toeventstream)\n\n * @param {Pattern<O>} patterns Join patterns\n * @typeparam O result type\n */\nfunction when(...patterns) {\n    return when_(newEventStream, patterns);\n}\n/** @hidden */\nfunction whenP(...patterns) {\n    return when_(propertyFromStreamSubscribe, patterns);\n}\n/** @hidden */\nfunction when_(ctor, patterns) {\n    if (patterns.length === 0) {\n        return never();\n    }\n    var [sources, ixPats] = processRawPatterns(extractRawPatterns(patterns));\n    if (!sources.length) {\n        return never();\n    }\n    var needsBarrier = (any(sources, (s) => s.flatten)) && containsDuplicateDeps(map(((s) => s.obs), sources));\n    var desc = new Desc(\"Bacon\", \"when\", Array.prototype.slice.call(patterns));\n    var resultStream = ctor(desc, function (sink) {\n        var triggers = [];\n        var ends = false;\n        function match(p) {\n            for (var i = 0; i < p.ixs.length; i++) {\n                let ix = p.ixs[i];\n                if (!sources[ix.index].hasAtLeast(ix.count)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        function cannotMatch(p) {\n            for (var i = 0; i < p.ixs.length; i++) {\n                let ix = p.ixs[i];\n                if (!sources[ix.index].mayHave(ix.count)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function nonFlattened(trigger) { return !trigger.source.flatten; }\n        function part(source) {\n            return function (unsubAll) {\n                function flushLater() {\n                    return UpdateBarrier.whenDoneWith(resultStream, flush);\n                }\n                function flushWhileTriggers() {\n                    var trigger;\n                    if ((trigger = triggers.pop()) !== undefined) {\n                        var reply = more;\n                        for (var i = 0, p; i < ixPats.length; i++) {\n                            p = ixPats[i];\n                            if (match(p)) {\n                                const values = [];\n                                for (var j = 0; j < p.ixs.length; j++) {\n                                    let event = sources[p.ixs[j].index].consume();\n                                    if (!event)\n                                        throw new Error(\"Event was undefined\");\n                                    values.push(event.value);\n                                }\n                                //console.log(\"flushing values\", values)\n                                let applied = p.f.apply(null, values);\n                                //console.log('sinking', applied)\n                                reply = sink((trigger).e.apply(applied));\n                                if (triggers.length) {\n                                    triggers = filter(nonFlattened, triggers);\n                                }\n                                if (reply === noMore) {\n                                    return reply;\n                                }\n                                else {\n                                    return flushWhileTriggers();\n                                }\n                            }\n                        }\n                    }\n                    return more;\n                }\n                function flush() {\n                    //console.log \"flushing\", _.toString(resultStream)\n                    var reply = flushWhileTriggers();\n                    if (ends) {\n                        //console.log \"ends detected\"\n                        if (all(sources, cannotSync) || all(ixPats, cannotMatch)) {\n                            //console.log \"actually ending\"\n                            reply = noMore;\n                            sink(endEvent());\n                        }\n                    }\n                    if (reply === noMore) {\n                        unsubAll();\n                    }\n                }\n                return source.subscribe(function (e) {\n                    var reply = more;\n                    if (e.isEnd) {\n                        //console.log \"got end\"\n                        ends = true;\n                        source.markEnded();\n                        flushLater();\n                    }\n                    else if (e.isError) {\n                        reply = sink(e);\n                    }\n                    else {\n                        let valueEvent = e;\n                        //console.log \"got value\", e.value\n                        source.push(valueEvent);\n                        if (source.sync) {\n                            //console.log \"queuing\", e.toString(), toString(resultStream)\n                            triggers.push({ source: source, e: valueEvent });\n                            if (needsBarrier || UpdateBarrier.hasWaiters()) {\n                                flushLater();\n                            }\n                            else {\n                                flush();\n                            }\n                        }\n                    }\n                    if (reply === noMore) {\n                        unsubAll();\n                    }\n                    return reply;\n                });\n            };\n        }\n        return new CompositeUnsubscribe(map(part, sources)).unsubscribe;\n    });\n    return resultStream;\n}\nfunction processRawPatterns(rawPatterns) {\n    var sources = [];\n    var pats = [];\n    for (let i = 0; i < rawPatterns.length; i++) {\n        let [patSources, f] = rawPatterns[i];\n        var pat = { f, ixs: [] };\n        var triggerFound = false;\n        for (var j = 0, s; j < patSources.length; j++) {\n            s = patSources[j];\n            var index = indexOf(sources, s);\n            if (!triggerFound) {\n                triggerFound = isTrigger(s);\n            }\n            if (index < 0) {\n                sources.push(s);\n                index = sources.length - 1;\n            }\n            for (var k = 0; k < pat.ixs.length; k++) {\n                let ix = pat.ixs[k];\n                if (ix.index === index) {\n                    ix.count++;\n                }\n            }\n            pat.ixs.push({ index: index, count: 1 });\n        }\n        if (patSources.length > 0 && !triggerFound) {\n            throw new Error(\"At least one EventStream required, none found in \" + patSources);\n        }\n        if (patSources.length > 0) {\n            pats.push(pat);\n        }\n    }\n    return [map(fromObservable /* sorry */, sources), pats];\n}\nfunction extractLegacyPatterns(sourceArgs) {\n    var i = 0;\n    var len = sourceArgs.length;\n    var rawPatterns = [];\n    while (i < len) {\n        let patSources = toArray(sourceArgs[i++]);\n        let f = toFunction(sourceArgs[i++]);\n        rawPatterns.push([patSources, f]);\n    }\n    var usage = \"when: expecting arguments in the form (Observable+,function)+\";\n    assert(usage, (len % 2 === 0));\n    return rawPatterns;\n}\nfunction isTypedOrRawPattern(pattern) {\n    return (pattern instanceof Array) && (!isObservable(pattern[pattern.length - 1]));\n}\nfunction isRawPattern(pattern) {\n    return pattern[0] instanceof Array;\n}\n/** @hidden */\nfunction extractRawPatterns(patterns) {\n    let rawPatterns = [];\n    for (let i = 0; i < patterns.length; i++) {\n        let pattern = patterns[i];\n        if (!isTypedOrRawPattern(pattern)) {\n            // Fallback to legacy patterns\n            return extractLegacyPatterns(patterns);\n        }\n        if (isRawPattern(pattern)) {\n            rawPatterns.push([pattern[0], toFunction(pattern[1])]);\n        }\n        else { // typed pattern, then\n            let sources = pattern.slice(0, pattern.length - 1);\n            let f = toFunction(pattern[pattern.length - 1]);\n            rawPatterns.push([sources, f]);\n        }\n    }\n    return rawPatterns;\n}\nfunction containsDuplicateDeps(observables, state = []) {\n    function checkObservable(obs) {\n        if (contains(state, obs)) {\n            return true;\n        }\n        else {\n            var deps = obs.internalDeps();\n            if (deps.length) {\n                state.push(obs);\n                return any(deps, checkObservable);\n            }\n            else {\n                state.push(obs);\n                return false;\n            }\n        }\n    }\n    return any(observables, checkObservable);\n}\nfunction cannotSync(source) {\n    return !source.sync || source.ended;\n}\n\n/** @hidden */\nfunction withLatestFromE(sampler, samplee, f) {\n    var result = when([new DefaultSource(samplee.toProperty(), false), new DefaultSource(sampler, true), flip(f)]);\n    return result.withDesc(new Desc(sampler, \"withLatestFrom\", [samplee, f]));\n}\n/** @hidden */\nfunction withLatestFromP(sampler, samplee, f) {\n    var result = whenP([new DefaultSource(samplee.toProperty(), false), new DefaultSource(sampler, true), flip(f)]);\n    return result.withDesc(new Desc(sampler, \"withLatestFrom\", [samplee, f]));\n}\n/** @hidden */\nfunction withLatestFrom(sampler, samplee, f) {\n    if (sampler instanceof Property) {\n        return withLatestFromP(sampler, samplee, f);\n    }\n    else if (sampler instanceof EventStream) {\n        return withLatestFromE(sampler, samplee, f);\n    }\n    else {\n        throw new Error(\"Unknown observable: \" + sampler);\n    }\n}\n\n/** @hidden */\nfunction map$1(src, f) {\n    if (f instanceof Property) {\n        return withLatestFrom(src, f, (a, b) => b);\n    }\n    return src.transform(mapT(f), new Desc(src, \"map\", [f]));\n}\n/** @hidden */\nfunction mapT(f) {\n    let theF = _.toFunction(f);\n    return (e, sink) => {\n        return sink(e.fmap(theF));\n    };\n}\n\n/**\n Creates a constant property with value `x`.\n */\nfunction constant(x) {\n    return new Property(new Desc(\"Bacon\", \"constant\", [x]), function (sink) {\n        sink(initialEvent(x));\n        sink(endEvent());\n        return nop;\n    });\n}\n\n/** @hidden */\nfunction argumentsToObservables(args) {\n    args = (Array.prototype.slice.call(args));\n    return _.flatMap(singleToObservables, args);\n}\nfunction singleToObservables(x) {\n    if (isObservable(x)) {\n        return [x];\n    }\n    else if (isArray(x)) {\n        return argumentsToObservables(x);\n    }\n    else {\n        return [constant(x)];\n    }\n}\n/** @hidden */\nfunction argumentsToObservablesAndFunction(args) {\n    if (_.isFunction(args[0])) {\n        return [argumentsToObservables(Array.prototype.slice.call(args, 1)), args[0]];\n    }\n    else {\n        return [argumentsToObservables(Array.prototype.slice.call(args, 0, args.length - 1)), _.last(args)];\n    }\n}\n\n/** @hidden */\nfunction groupSimultaneous(...streams) {\n    return groupSimultaneous_(argumentsToObservables(streams));\n}\n// TODO: type is not exactly correct, because different inputs may have different types.\n// Result values are arrays where each element is the list from each input observable. Type this.\n/** @hidden */\nfunction groupSimultaneous_(streams, options) {\n    let sources = _.map((stream) => new BufferingSource(stream), streams);\n    let ctor = (desc, subscribe) => new EventStream(desc, subscribe, undefined, options);\n    return when_(ctor, [sources, (function (...xs) {\n            return xs;\n        })]).withDesc(new Desc(\"Bacon\", \"groupSimultaneous\", streams));\n}\n\n/** @hidden */\nfunction awaiting(src, other) {\n    return groupSimultaneous_([src, other], allowSync)\n        .map((values) => values[1].length === 0)\n        .toProperty(false)\n        .skipDuplicates()\n        .withDesc(new Desc(src, \"awaiting\", [other]));\n}\n\n/**\n Combines Properties, EventStreams and constant values so that the result Property will have an array of the latest\n values from all sources as its value. The inputs may contain both Properties and EventStreams.\n\n\n ```js\n property = Bacon.constant(1)\n stream = Bacon.once(2)\n constant = 3\n Bacon.combineAsArray(property, stream, constant)\n # produces the value [1,2,3]\n ```\n\n * @param streams streams and properties to combine\n */\nfunction combineAsArray(...streams) {\n    streams = argumentsToObservables(streams);\n    if (streams.length) {\n        var sources = [];\n        for (var i = 0; i < streams.length; i++) {\n            let stream = (isObservable(streams[i])\n                ? streams[i]\n                : constant(streams[i]));\n            sources.push(wrap(stream));\n        }\n        return whenP([sources, (...xs) => xs]).withDesc(new Desc(\"Bacon\", \"combineAsArray\", streams));\n    }\n    else {\n        return constant([]);\n    }\n}\nfunction combineWith(...args) {\n    // TODO: untyped\n    var [streams, f] = argumentsToObservablesAndFunction(arguments);\n    var desc = new Desc(\"Bacon\", \"combineWith\", [f, ...streams]);\n    return combineAsArray(streams).map(function (values) {\n        return f(...values);\n    }).withDesc(desc);\n}\nconst combine = combineWith;\n/** @hidden */\nfunction combineTwo(left, right, f) {\n    return whenP([[wrap(left), wrap(right)], f]).withDesc(new Desc(left, \"combine\", [right, f]));\n}\nfunction wrap(obs) {\n    return new DefaultSource(obs, true);\n}\n\n/** @hidden */\nfunction skip(src, count) {\n    return src.transform((event, sink) => {\n        if (!event.hasValue) {\n            return sink(event);\n        }\n        else if (count > 0) {\n            count--;\n            return more;\n        }\n        else {\n            return sink(event);\n        }\n    }, new Desc(src, \"skip\", [count]));\n}\n\n/** @hidden */\nfunction flatMapConcat(src, f) {\n    return flatMap_(handleEventValueWith(f), src, {\n        desc: new Desc(src, \"flatMapConcat\", [f]),\n        limit: 1\n    });\n}\n\n/**\n If none of the other factory methods above apply, you may of course roll your own EventStream by using `fromBinder`.\n\n <a name=\"bacon-frombinder\"></a>\n [`Bacon.fromBinder(subscribe)`](#bacon-frombinder \"Bacon.fromBinder(subscribe)\") The parameter `subscribe` is a function that accepts a `sink` which is a function that your `subscribe` function can \"push\" events to.\n\n For example:\n\n ```js\n var stream = Bacon.fromBinder(function(sink) {\n  sink(\"first value\")\n  sink([new Bacon.Next(\"2nd\"), new Bacon.Next(\"3rd\")])\n  sink(new Bacon.Error(\"oops, an error\"))\n  sink(new Bacon.End())\n  return function() {\n     // unsub functionality here, this one's a no-op\n  }\n})\n stream.log()\n ```\n\n As shown in the example, you can push\n\n - A plain value, like `\"first value\"`\n - An [`Event`](#event) object including [`Bacon.Error`](#bacon-error) (wraps an error) and [`Bacon.End`](#bacon-end) (indicates\n stream end).\n - An array of [event](#event) objects at once\n\n Other examples can be found on [JSFiddle](http://jsfiddle.net/PG4c4/) and the\n [Bacon.js blog](http://baconjs.blogspot.fi/2013/12/wrapping-things-in-bacon.html).\n\n The `subscribe` function must return a function. Let's call that function\n `unsubscribe`. The returned function can be used by the subscriber (directly or indirectly) to\n unsubscribe from the EventStream. It should release all resources that the subscribe function reserved.\n\n The `sink` function may return [`Bacon.noMore`](#bacon-nomore) (as well as [`Bacon.more`](#bacon-more)\n or any other value). If it returns [`Bacon.noMore`](#bacon-nomore), no further events will be consumed\n by the subscriber. The `subscribe` function may choose to clean up all resources at this point (e.g.,\n by calling `unsubscribe`). This is usually not necessary, because further calls to `sink` are ignored,\n but doing so can increase performance in [rare cases](https://github.com/baconjs/bacon.js/issues/484).\n\n The EventStream will wrap your `subscribe` function so that it will\n only be called when the first stream listener is added, and the `unsubscribe`\n function is called only after the last listener has been removed.\n The subscribe-unsubscribe cycle may of course be repeated indefinitely,\n so prepare for multiple calls to the subscribe function.\n\n\n @param  binder\n @param  eventTransformer\n @typeparam V Type of stream elements\n\n */\nfunction fromBinder(binder, eventTransformer = _.id) {\n    var desc = new Desc(\"Bacon\", \"fromBinder\", [binder, eventTransformer]);\n    return new EventStream(desc, function (sink) {\n        var unbound = false;\n        var shouldUnbind = false;\n        var unbind = function () {\n            if (!unbound) {\n                if ((typeof unbinder !== \"undefined\" && unbinder !== null)) {\n                    unbinder();\n                    return unbound = true;\n                }\n                else {\n                    return shouldUnbind = true;\n                }\n            }\n        };\n        var unbinder = binder(function (...args) {\n            var value_ = eventTransformer(...args);\n            let valueArray = isArray(value_) && isEvent(_.last(value_))\n                ? value_\n                : [value_];\n            var reply = more;\n            for (var i = 0; i < valueArray.length; i++) {\n                let event = toEvent(valueArray[i]);\n                reply = sink(event);\n                if (reply === noMore || event.isEnd) {\n                    // defer if binder calls handler in sync before returning unbinder\n                    unbind();\n                    return reply;\n                }\n            }\n            return reply;\n        });\n        if (shouldUnbind) {\n            unbind();\n        }\n        return unbind;\n    });\n}\n\n/**\n Polls given function with given interval.\n Function should return Events: either [`Bacon.Next`](classes/next.html) or [`Bacon.End`](classes/end.html). Polling occurs only\n when there are subscribers to the stream. Polling ends permanently when\n `f` returns [`Bacon.End`](classes/end.html).\n * @param delay poll interval in milliseconds\n * @param poll function to be polled\n * @typeparam V Type of stream elements\n */\nfunction fromPoll(delay, poll) {\n    var desc = new Desc(\"Bacon\", \"fromPoll\", [delay, poll]);\n    return fromBinder((function (handler) {\n        var id = GlobalScheduler.scheduler.setInterval(handler, delay);\n        return function () {\n            return GlobalScheduler.scheduler.clearInterval(id);\n        };\n    }), poll).withDesc(desc);\n}\n\n/**\n Repeats the single element indefinitely with the given interval (in milliseconds)\n\n @param   delay   Repeat delay in milliseconds\n @param   value   The single value to repeat\n @typeparam V Type of stream elements\n */\nfunction interval(delay, value) {\n    return fromPoll(delay, function () {\n        return nextEvent(value);\n    }).withDesc(new Desc(\"Bacon\", \"interval\", [delay, value]));\n}\n\nfunction makeCombinator(combinator) {\n    if (typeof combinator == \"function\") {\n        return combinator;\n    }\n    else {\n        return _.id;\n    }\n}\n/** @hidden */\nfunction sampledBy(samplee, sampler, f) {\n    if (samplee instanceof EventStream) {\n        return sampledByE(samplee, sampler, f);\n    }\n    else {\n        return sampledByP(samplee, sampler, f);\n    }\n}\n/** @hidden */\nfunction sampledByP(samplee, sampler, f) {\n    let combinator = makeCombinator(f);\n    var result = withLatestFrom(sampler, samplee, flip(combinator));\n    return result.withDesc(new Desc(samplee, \"sampledBy\", [sampler]));\n}\n/** @hidden */\nfunction sampledByE(samplee, sampler, f) {\n    return sampledByP(samplee.toProperty(), sampler, f).withDesc(new Desc(samplee, \"sampledBy\", [sampler]));\n}\n/** @hidden */\nfunction sampleP(samplee, samplingInterval) {\n    return sampledByP(samplee, interval(samplingInterval, {}), (a, b) => a).withDesc(new Desc(samplee, \"sample\", [samplingInterval]));\n}\n\n/** @hidden */\nfunction transformP(src, transformer, desc) {\n    return new Property(new Desc(src, \"transform\", [transformer]), sink => src.subscribeInternal(e => transformer(e, sink))).withDesc(desc);\n}\n/** @hidden */\nfunction transformE(src, transformer, desc) {\n    return new EventStream(new Desc(src, \"transform\", [transformer]), sink => src.subscribeInternal(e => transformer(e, sink)), undefined, allowSync).withDesc(desc);\n}\n/** @hidden */\nfunction composeT(t1, t2) {\n    let finalSink; // mutation used to avoid closure creation while dispatching events\n    const sink2 = (event) => {\n        return t2(event, finalSink);\n    };\n    return (event, sink) => {\n        finalSink = sink;\n        return t1(event, sink2);\n    };\n}\n\n/** @hidden */\nfunction toPredicate(f) {\n    if (typeof f == \"boolean\") {\n        return _.always(f);\n    }\n    else if (typeof f != \"function\") {\n        throw new Error(\"Not a function: \" + f);\n    }\n    else {\n        return f;\n    }\n}\n/** @hidden */\nfunction withPredicate(src, f, predicateTransformer, desc) {\n    if (f instanceof Property) {\n        return withLatestFrom(src, f, (p, v) => [p, v])\n            .transform(composeT(predicateTransformer(((tuple) => tuple[1])), mapT((tuple) => tuple[0])), desc);\n        // the `any` type above is needed because the type argument for Predicate2Transformer is fixed. We'd need higher-kinded types to be able to express this properly, I think.\n    }\n    return src.transform(predicateTransformer(toPredicate(f)), desc);\n}\n\n/** @hidden */\nfunction filter$1(src, f) {\n    return withPredicate(src, f, filterT, new Desc(src, \"filter\", [f]));\n}\n/** @hidden */\nfunction filterT(f) {\n    return (e, sink) => {\n        if (e.filter(f)) {\n            return sink(e);\n        }\n        else {\n            return more;\n        }\n    };\n}\n\n/** @hidden */\nfunction not(src) {\n    return src.map(x => !x).withDesc(new Desc(src, \"not\", []));\n}\n/** @hidden */\nfunction and(left, right) {\n    return left.combine(toProperty(right), (x, y) => !!(x && y)).withDesc(new Desc(left, \"and\", [right]));\n}\n/** @hidden */\nfunction or(left, right) {\n    return left.combine(toProperty(right), (x, y) => x || y).withDesc(new Desc(left, \"or\", [right]));\n}\nfunction toProperty(x) {\n    if (isProperty(x)) {\n        return x;\n    }\n    return constant(x);\n}\n\n/** @hidden */\nfunction flatMapFirst(src, f) {\n    return flatMap_(handleEventValueWith(f), src, {\n        firstOnly: true,\n        desc: new Desc(src, \"flatMapFirst\", [f])\n    });\n}\n\n/** @hidden */\nfunction concatE(left, right, options) {\n    return new EventStream(new Desc(left, \"concat\", [right]), function (sink) {\n        var unsubRight = nop;\n        var unsubLeft = left.dispatcher.subscribe(function (e) {\n            if (e.isEnd) {\n                unsubRight = right.toEventStream().dispatcher.subscribe(sink);\n                return more;\n            }\n            else {\n                return sink(e);\n            }\n        });\n        return function () {\n            return unsubLeft(), unsubRight();\n        };\n    }, undefined, options);\n}\n/**\n Concatenates given array of EventStreams or Properties. Works by subscribing to the first source, and listeing to that\n until it ends. Then repeatedly subscribes to the next source, until all sources have ended.\n\n See [`concat`](#observable-concat)\n */\nfunction concatAll(...streams_) {\n    let streams = argumentsToObservables(streams_);\n    return (streams.length\n        ? fold(tail(streams), head(streams).toEventStream(), (a, b) => a.concat(b))\n        : never()).withDesc(new Desc(\"Bacon\", \"concatAll\", streams));\n}\n\n/** @hidden */\nfunction transformPropertyChanges(property, f, desc) {\n    let initValue;\n    let comboSink;\n    // Create a `changes` stream to be transformed, which also snatches the Initial value for later use.\n    const changes = new EventStream(describe(property, \"changes\", []), (sink) => property.dispatcher.subscribe(function (event) {\n        if (!initValue && isInitial(event)) {\n            initValue = event;\n            UpdateBarrier.whenDoneWith(combo, function () {\n                if (!comboSink) {\n                    throw new Error(\"Init sequence fail\");\n                }\n                comboSink(initValue);\n            });\n        }\n        if (!event.isInitial) {\n            return sink(event);\n        }\n        return more;\n    }), undefined, allowSync);\n    const transformedChanges = f(changes);\n    const combo = propertyFromStreamSubscribe(desc, (sink) => {\n        comboSink = sink;\n        return transformedChanges.dispatcher.subscribe(function (event) {\n            sink(event);\n        });\n    });\n    return combo;\n}\n\n/** @hidden */\nfunction fold$1(src, seed, f) {\n    return src.scan(seed, f)\n        .last()\n        .withDesc(new Desc(src, \"fold\", [seed, f]));\n}\n\n/** @hidden */\nfunction startWithE(src, seed) {\n    return once(seed).concat(src).withDesc(new Desc(src, \"startWith\", [seed]));\n}\n/** @hidden */\nfunction startWithP(src, seed) {\n    return src.scan(seed, (prev, next) => next).withDesc(new Desc(src, \"startWith\", [seed]));\n}\n\n/** @hidden */\nconst endMarker = {};\n/** @hidden */\nfunction takeUntil(src, stopper) {\n    let endMapped = src.mapEnd(endMarker);\n    let withEndMarker = groupSimultaneous_([endMapped, stopper.skipErrors()], allowSync);\n    if (src instanceof Property)\n        withEndMarker = withEndMarker.toProperty();\n    return withEndMarker.transform(function (event, sink) {\n        if (hasValue(event)) {\n            var [data, stopper] = event.value;\n            if (stopper.length) {\n                return sink(endEvent());\n            }\n            else {\n                var reply = more;\n                for (var i = 0; i < data.length; i++) {\n                    let value = data[i];\n                    if (value === endMarker) {\n                        return sink(endEvent());\n                    }\n                    else {\n                        reply = sink(nextEvent(value));\n                    }\n                }\n                return reply;\n            }\n        }\n        else {\n            return sink(event);\n        }\n    }, new Desc(src, \"takeUntil\", [stopper]));\n}\n\n/** @hidden */\nfunction flatMap$1(src, f) {\n    return flatMap_(handleEventValueWith(f), src, { desc: new Desc(src, \"flatMap\", [f]) });\n}\n\n/** @hidden */\nfunction flatMapError(src, f) {\n    return flatMap_((x) => {\n        if (x instanceof Error$1) {\n            let error = x.error;\n            return f(error); // I don't understand why I need this little lie\n        }\n        else {\n            return x;\n        }\n    }, src, {\n        mapError: true,\n        desc: new Desc(src, \"flatMapError\", [f])\n    });\n}\n\nvar spies = [];\nvar running = false;\n/** @hidden */\nfunction registerObs(obs) {\n    if (spies.length) {\n        if (!running) {\n            try {\n                running = true;\n                spies.forEach(function (spy) {\n                    spy(obs);\n                });\n            }\n            finally {\n                running = false;\n            }\n        }\n    }\n}\n/**\n Adds your function as a \"spy\" that will get notified on all new Observables.\n This will allow a visualization/analytics tool to spy on all Bacon activity.\n */\nconst spy = (spy) => spies.push(spy);\n\n/** @hidden */\nfunction flatMapLatest(src, f_) {\n    let f = _.toFunction(f_);\n    var stream = isProperty(src) ? src.toEventStream(allowSync) : src;\n    let flatMapped = flatMap$1(stream, (value) => makeObservable(f(value)).takeUntil(stream));\n    if (isProperty(src))\n        flatMapped = flatMapped.toProperty();\n    return flatMapped.withDesc(new Desc(src, \"flatMapLatest\", [f]));\n}\n\n/** @hidden */\nclass Dispatcher {\n    constructor(observable, _subscribe, _handleEvent) {\n        this.pushing = false;\n        this.ended = false;\n        this.prevError = undefined;\n        this.unsubSrc = undefined;\n        this._subscribe = _subscribe;\n        this._handleEvent = _handleEvent;\n        this.subscribe = _.bind(this.subscribe, this);\n        this.handleEvent = _.bind(this.handleEvent, this);\n        this.subscriptions = [];\n        this.observable = observable;\n        this.queue = [];\n    }\n    hasSubscribers() {\n        return this.subscriptions.length > 0;\n    }\n    removeSub(subscription) {\n        this.subscriptions = _.without(subscription, this.subscriptions);\n        return this.subscriptions;\n    }\n    push(event) {\n        if (event.isEnd) {\n            this.ended = true;\n        }\n        return UpdateBarrier.inTransaction(event, this, this.pushIt, [event]);\n    }\n    pushToSubscriptions(event) {\n        try {\n            let tmp = this.subscriptions;\n            const len = tmp.length;\n            for (let i = 0; i < len; i++) {\n                const sub = tmp[i];\n                let reply = sub.sink(event);\n                if (reply === noMore || event.isEnd) {\n                    this.removeSub(sub);\n                }\n            }\n            return true;\n        }\n        catch (error) {\n            this.pushing = false;\n            this.queue = []; // ditch queue in case of exception to avoid unexpected behavior\n            throw error;\n        }\n    }\n    pushIt(event) {\n        if (!this.pushing) {\n            if (event === this.prevError) {\n                return;\n            }\n            if (event.isError) {\n                this.prevError = event;\n            }\n            this.pushing = true;\n            this.pushToSubscriptions(event);\n            this.pushing = false;\n            while (true) {\n                let e = this.queue.shift();\n                if (e) {\n                    this.push(e);\n                }\n                else {\n                    break;\n                }\n            }\n            if (this.hasSubscribers()) {\n                return more;\n            }\n            else {\n                this.unsubscribeFromSource();\n                return noMore;\n            }\n        }\n        else {\n            this.queue.push(event);\n            return more;\n        }\n    }\n    handleEvent(event) {\n        if (this._handleEvent) {\n            return this._handleEvent(event);\n        }\n        else {\n            return this.push(event);\n        }\n    }\n    ;\n    unsubscribeFromSource() {\n        if (this.unsubSrc) {\n            this.unsubSrc();\n        }\n        this.unsubSrc = undefined;\n    }\n    subscribe(sink) {\n        if (this.ended) {\n            sink(endEvent());\n            return nop;\n        }\n        else {\n            assertFunction(sink);\n            let subscription = {\n                sink: sink\n            };\n            this.subscriptions.push(subscription);\n            if (this.subscriptions.length === 1) {\n                this.unsubSrc = this._subscribe(this.handleEvent);\n                assertFunction(this.unsubSrc);\n            }\n            return () => {\n                this.removeSub(subscription);\n                if (!this.hasSubscribers()) {\n                    return this.unsubscribeFromSource();\n                }\n            };\n        }\n    }\n    inspect() {\n        return this.observable.toString();\n    }\n}\n\n/** @hidden */\nclass PropertyDispatcher extends Dispatcher {\n    constructor(property, subscribe, handleEvent) {\n        super(property, subscribe, handleEvent);\n        this.current = none();\n        this.propertyEnded = false;\n        this.subscribe = _.bind(this.subscribe, this);\n    }\n    push(event) {\n        //console.log(\"dispatch\", event, \"from\",  this)\n        if (event.isEnd) {\n            this.propertyEnded = true;\n        }\n        if (event instanceof Value) {\n            //console.log(\"setting current\")\n            this.current = new Some(event);\n            this.currentValueRootId = UpdateBarrier.currentEventId();\n        }\n        else if (event.hasValue) {\n            console.error(\"Unknown event, two Bacons loaded?\", event.constructor);\n        }\n        return super.push(event);\n    }\n    maybeSubSource(sink, reply) {\n        if (reply === noMore) {\n            return nop;\n        }\n        else if (this.propertyEnded) {\n            sink(endEvent());\n            return nop;\n        }\n        else {\n            return super.subscribe(sink);\n        }\n    }\n    subscribe(sink) {\n        // init value is \"bounced\" here because the base Dispatcher class\n        // won't add more than one subscription to the underlying observable.\n        // without bouncing, the init value would be missing from all new subscribers\n        // after the first one\n        var reply = more;\n        if (this.current.isDefined && (this.hasSubscribers() || this.propertyEnded)) {\n            // should bounce init value\n            var dispatchingId = UpdateBarrier.currentEventId();\n            var valId = this.currentValueRootId;\n            if (!this.propertyEnded && valId && dispatchingId && dispatchingId !== valId) {\n                // when subscribing while already dispatching a value and this property hasn't been updated yet\n                // we cannot bounce before this property is up to date.\n                //console.log(\"bouncing with possibly stale value\", event.value, \"root at\", valId, \"vs\", dispatchingId)\n                UpdateBarrier.whenDoneWith(this.observable, () => {\n                    if (this.currentValueRootId === valId) {\n                        //console.log(\"bouncing\", this.current.get().value)\n                        return sink(initialEvent(this.current.get().value));\n                    }\n                });\n                // the subscribing thing should be defered\n                return this.maybeSubSource(sink, reply);\n            }\n            else {\n                //console.log(\"bouncing immdiately\", this.current.get().value)\n                UpdateBarrier.inTransaction(undefined, this, () => {\n                    reply = sink(initialEvent(this.current.get().value));\n                    return reply;\n                }, []);\n                return this.maybeSubSource(sink, reply);\n            }\n        }\n        else {\n            //console.log(\"normal subscribe\", this)\n            return this.maybeSubSource(sink, reply);\n        }\n    }\n    inspect() {\n        return this.observable + \" current= \" + this.current;\n    }\n}\n\n/** @hidden */\nfunction flatMapWithConcurrencyLimit(src, limit, f) {\n    return flatMap_(handleEventValueWith(f), src, {\n        desc: new Desc(src, \"flatMapWithConcurrencyLimit\", [limit, f]),\n        limit\n    });\n}\n\n/** @hidden */\nfunction bufferWithTime(src, delay) {\n    return bufferWithTimeOrCount(src, delay, Number.MAX_VALUE).withDesc(new Desc(src, \"bufferWithTime\", [delay]));\n}\n/** @hidden */\nfunction bufferWithCount(src, count) {\n    return bufferWithTimeOrCount(src, undefined, count).withDesc(new Desc(src, \"bufferWithCount\", [count]));\n}\n/** @hidden */\nfunction bufferWithTimeOrCount(src, delay, count) {\n    const delayFunc = toDelayFunction(delay);\n    function flushOrSchedule(buffer) {\n        if (buffer.values.length === count) {\n            //console.log Bacon.scheduler.now() + \": count-flush\"\n            return buffer.flush();\n        }\n        else if (delayFunc !== undefined) {\n            return buffer.schedule(delayFunc);\n        }\n    }\n    var desc = new Desc(src, \"bufferWithTimeOrCount\", [delay, count]);\n    return buffer(src, flushOrSchedule, flushOrSchedule).withDesc(desc);\n}\nclass Buffer {\n    constructor(onFlush, onInput) {\n        this.push = (e) => more;\n        this.scheduled = null;\n        this.end = undefined;\n        this.values = [];\n        this.onFlush = onFlush;\n        this.onInput = onInput;\n    }\n    flush() {\n        if (this.scheduled) {\n            GlobalScheduler.scheduler.clearTimeout(this.scheduled);\n            this.scheduled = null;\n        }\n        if (this.values.length > 0) {\n            //console.log Bacon.scheduler.now() + \": flush \" + @values\n            var valuesToPush = this.values;\n            this.values = [];\n            var reply = this.push(nextEvent(valuesToPush));\n            if ((this.end != null)) {\n                return this.push(this.end);\n            }\n            else if (reply !== noMore) {\n                return this.onFlush(this);\n            }\n        }\n        else {\n            if ((this.end != null)) {\n                return this.push(this.end);\n            }\n        }\n    }\n    schedule(delay) {\n        if (!this.scheduled) {\n            return this.scheduled = delay(() => {\n                //console.log Bacon.scheduler.now() + \": scheduled flush\"\n                return this.flush();\n            });\n        }\n    }\n}\nfunction toDelayFunction(delay) {\n    if (delay === undefined) {\n        return undefined;\n    }\n    if (typeof delay === \"number\") {\n        var delayMs = delay;\n        return function (f) {\n            //console.log Bacon.scheduler.now() + \": schedule for \" + (Bacon.scheduler.now() + delayMs)\n            return GlobalScheduler.scheduler.setTimeout(f, delayMs);\n        };\n    }\n    return delay;\n}\n/** @hidden */\nfunction buffer(src, onInput = nop, onFlush = nop) {\n    var reply = more;\n    var buffer = new Buffer(onFlush, onInput);\n    return src.transform((event, sink) => {\n        buffer.push = sink;\n        if (hasValue(event)) {\n            buffer.values.push(event.value);\n            //console.log Bacon.scheduler.now() + \": input \" + event.value\n            onInput(buffer);\n        }\n        else if (isError(event)) {\n            reply = sink(event);\n        }\n        else if (isEnd(event)) {\n            buffer.end = event;\n            if (!buffer.scheduled) {\n                //console.log Bacon.scheduler.now() + \": end-flush\"\n                buffer.flush();\n            }\n        }\n        return reply;\n    }).withDesc(new Desc(src, \"buffer\", []));\n}\n\n/** @hidden */\nfunction asyncWrapSubscribe(obs, subscribe) {\n    //assertFunction(subscribe)\n    var subscribing = false;\n    return function wrappedSubscribe(sink) {\n        //assertFunction(sink)\n        const inTransaction = UpdateBarrier.isInTransaction();\n        subscribing = true;\n        var asyncDeliveries;\n        function deliverAsync() {\n            //console.log(\"delivering async\", obs, asyncDeliveries)\n            var toDeliverNow = asyncDeliveries || [];\n            asyncDeliveries = undefined;\n            for (var i = 0; i < toDeliverNow.length; i++) {\n                var event = toDeliverNow[i];\n                sink(event);\n            }\n        }\n        try {\n            return subscribe(function wrappedSink(event) {\n                if (subscribing || asyncDeliveries) {\n                    // Deliver async if currently subscribing\n                    // Also queue further events until async delivery has been completed\n                    //console.log(\"Stream responded synchronously\", obs)\n                    if (!asyncDeliveries) {\n                        asyncDeliveries = [event];\n                        if (inTransaction) {\n                            UpdateBarrier.soonButNotYet(obs, deliverAsync);\n                        }\n                        else {\n                            GlobalScheduler.scheduler.setTimeout(deliverAsync, 0);\n                        }\n                    }\n                    else {\n                        asyncDeliveries.push(event);\n                    }\n                    return more;\n                }\n                else {\n                    return sink(event);\n                }\n            });\n        }\n        finally {\n            subscribing = false;\n        }\n    };\n}\n\n/**\n Merges given array of EventStreams or Properties, by collecting the values from all of the sources into a single\n EventStream.\n\n See also [`merge`](classes/eventstream.html#merge).\n */\nfunction mergeAll(...streams) {\n    let flattenedStreams = argumentsToObservables(streams);\n    if (flattenedStreams.length) {\n        return new EventStream(new Desc(\"Bacon\", \"mergeAll\", flattenedStreams), function (sink) {\n            var ends = 0;\n            var smartSink = function (obs) {\n                return function (unsubBoth) {\n                    return obs.subscribeInternal(function (event) {\n                        if (event.isEnd) {\n                            ends++;\n                            if (ends === flattenedStreams.length) {\n                                return sink(endEvent());\n                            }\n                            else {\n                                return more;\n                            }\n                        }\n                        else {\n                            event = event.toNext();\n                            var reply = sink(event);\n                            if (reply === noMore) {\n                                unsubBoth();\n                            }\n                            return reply;\n                        }\n                    });\n                };\n            };\n            var sinks = map(smartSink, flattenedStreams);\n            return new CompositeUnsubscribe(sinks).unsubscribe;\n        });\n    }\n    else {\n        return never();\n    }\n}\n\n/**\n\n Creates a single-element stream that emits given value after given delay and ends.\n\n @param delay delay in milliseconds\n @param value value to be emitted\n @typeparam V Type of stream elements\n\n */\nfunction later(delay, value) {\n    return fromBinder(function (sink) {\n        var sender = function () {\n            return sink([toEvent(value), endEvent()]);\n        };\n        var id = GlobalScheduler.scheduler.setTimeout(sender, delay);\n        return function () {\n            return GlobalScheduler.scheduler.clearTimeout(id);\n        };\n    }).withDesc(new Desc(\"Bacon\", \"later\", [delay, value]));\n}\n\n/** @hidden */\nfunction delay(src, delay) {\n    return src.transformChanges(new Desc(src, \"delay\", [delay]), function (changes) {\n        return changes.flatMap(function (value) {\n            return later(delay, value);\n        });\n    });\n}\n\n/** @hidden */\nfunction debounce(src, delay) {\n    return src.transformChanges(new Desc(src, \"debounce\", [delay]), function (changes) {\n        return changes.flatMapLatest(function (value) {\n            return later(delay, value);\n        });\n    });\n}\n/** @hidden */\nfunction debounceImmediate(src, delay) {\n    return src.transformChanges(new Desc(src, \"debounceImmediate\", [delay]), function (changes) {\n        return changes.flatMapFirst(function (value) {\n            return once(value).concat(later(delay, value).errors());\n        });\n    });\n}\n\n/** @hidden */\nfunction throttle(src, delay) {\n    return src.transformChanges(new Desc(src, \"throttle\", [delay]), (changes) => changes.bufferWithTime(delay).map((values) => values[values.length - 1]));\n}\n\n/** @hidden */\nfunction bufferingThrottle(src, minimumInterval) {\n    var desc = new Desc(src, \"bufferingThrottle\", [minimumInterval]);\n    return src.transformChanges(desc, changes => changes.flatMapConcat((x) => {\n        return once(x).concat(later(minimumInterval, x).errors());\n    }));\n}\n\n/** @hidden */\nfunction takeWhile(src, f) {\n    return withPredicate(src, f, takeWhileT, new Desc(src, \"takeWhile\", [f]));\n}\nfunction takeWhileT(f) {\n    return (event, sink) => {\n        if (event.filter(f)) {\n            return sink(event);\n        }\n        else {\n            sink(endEvent());\n            return noMore;\n        }\n    };\n}\n\n/** @hidden */\nfunction skipUntil(src, starter) {\n    var started = starter\n        .transform(composeT(takeT(1), mapT(true)))\n        .toProperty()\n        .startWith(false);\n    return src.filter(started).withDesc(new Desc(src, \"skipUntil\", [starter]));\n}\n\n/** @hidden */\nfunction skipWhile(src, f) {\n    return withPredicate(src, f, skipWhileT, new Desc(src, \"skipWhile\", [f]));\n}\n/** @hidden */\nfunction skipWhileT(f) {\n    var started = false;\n    return function (event, sink) {\n        if (started || !hasValue(event) || !f(event.value)) {\n            if (event.hasValue) {\n                started = true;\n            }\n            return sink(event);\n        }\n        else {\n            return more;\n        }\n    };\n}\n\n/** @hidden */\nfunction groupBy(src, keyF, limitF = _.id) {\n    var streams = {};\n    return src.transform(composeT(filterT((x) => !streams[keyF(x)]), mapT(function (firstValue) {\n        var key = keyF(firstValue);\n        var similarValues = src.changes().filter(x => keyF(x) === key);\n        var data = once(firstValue).concat(similarValues);\n        var limited = limitF(data, firstValue).toEventStream().transform((event, sink) => {\n            let reply = sink(event);\n            if (event.isEnd) {\n                delete streams[key];\n            }\n            return reply;\n        });\n        streams[key] = limited;\n        return limited;\n    })));\n}\n\n/** @hidden */\nfunction slidingWindow(src, maxValues, minValues = 0) {\n    return src.scan([], (function (window, value) {\n        return window.concat([value]).slice(-maxValues);\n    }))\n        .filter((function (values) {\n        return values.length >= minValues;\n    })).withDesc(new Desc(src, \"slidingWindow\", [maxValues, minValues]));\n}\n\nconst nullMarker = {};\n/** @hidden */\nfunction diff(src, start, f) {\n    return transformP(scan(src, [start, nullMarker], ((prevTuple, next) => [next, f(prevTuple[0], next)])), composeT(filterT(tuple => tuple[1] !== nullMarker), mapT(tuple => tuple[1])), new Desc(src, \"diff\", [start, f]));\n}\n\n/** @hidden */\nfunction flatScan(src, seed, f) {\n    let current = seed;\n    return src.flatMapConcat((next) => makeObservable(f(current, next)).doAction(updated => current = updated)).toProperty().startWith(seed).withDesc(new Desc(src, \"flatScan\", [seed, f]));\n}\n\n/** @hidden */\nfunction holdWhen(src, valve) {\n    var onHold = false;\n    var bufferedValues = [];\n    var srcIsEnded = false;\n    return new EventStream(new Desc(src, \"holdWhen\", [valve]), function (sink) {\n        var composite = new CompositeUnsubscribe();\n        var subscribed = false;\n        var endIfBothEnded = function (unsub) {\n            if (unsub) {\n                unsub();\n            }\n            if (composite.empty() && subscribed) {\n                return sink(endEvent());\n            }\n            return more;\n        };\n        composite.add(function (unsubAll, unsubMe) {\n            return valve.subscribeInternal(function (event) {\n                if (hasValue(event)) {\n                    onHold = event.value;\n                    var result = more;\n                    if (!onHold) {\n                        var toSend = bufferedValues;\n                        bufferedValues = [];\n                        for (var i = 0; i < toSend.length; i++) {\n                            result = sink(nextEvent(toSend[i]));\n                        }\n                        if (srcIsEnded) {\n                            sink(endEvent());\n                            unsubMe();\n                            result = noMore;\n                        }\n                    }\n                    return result;\n                }\n                else if (event.isEnd) {\n                    return endIfBothEnded(unsubMe);\n                }\n                else {\n                    return sink(event);\n                }\n            });\n        });\n        composite.add(function (unsubAll, unsubMe) {\n            return src.subscribeInternal(function (event) {\n                if (onHold && hasValue(event)) {\n                    bufferedValues.push(event.value);\n                    return more;\n                }\n                else if (event.isEnd && bufferedValues.length) {\n                    srcIsEnded = true;\n                    return endIfBothEnded(unsubMe);\n                }\n                else {\n                    return sink(event);\n                }\n            });\n        });\n        subscribed = true;\n        endIfBothEnded();\n        return composite.unsubscribe;\n    });\n}\n\n/**\n Zips the array of EventStreams / Properties in to a new\n EventStream that will have an array of values from each source as\n its value. Zipping means that events from each source are combined\n pairwise so that the 1st event from each source is published first, then\n the 2nd event from each. The results will be published as soon as there\n is a value from each source.\n\n Be careful not to have too much \"drift\" between streams. If one stream\n produces many more values than some other excessive buffering will\n occur inside the zipped observable.\n\n Example:\n\n ```js\n x = Bacon.fromArray([1,2,3])\n y = Bacon.fromArray([10, 20, 30])\n z = Bacon.fromArray([100, 200, 300])\n Bacon.zipAsArray(x, y, z)\n\n # produces values [1, 10, 100], [2, 20, 200] and [3, 30, 300]\n ```\n\n */\nfunction zipAsArray(...args) {\n    let streams = _.map(((s) => s.toEventStream()), argumentsToObservables(args));\n    return when([streams, (...xs) => xs]).withDesc(new Desc(\"Bacon\", \"zipAsArray\", args));\n}\n/**\n Like [`zipAsArray`](#bacon-zipasarray) but uses the given n-ary\n function to combine the n values from n sources, instead of returning them in an Array.\n */\nfunction zipWith(f, ...streams) {\n    var [streams, f] = argumentsToObservablesAndFunction(arguments);\n    streams = _.map(((s) => s.toEventStream()), streams);\n    return when([streams, f]).withDesc(new Desc(\"Bacon\", \"zipWith\", [f].concat(streams)));\n}\n/** @hidden */\nfunction zip(left, right, f) {\n    return zipWith(f || Array, left, right).withDesc(new Desc(left, \"zip\", [right]));\n}\n\nfunction combineTemplate(template) {\n    function current(ctxStack) { return ctxStack[ctxStack.length - 1]; }\n    function setValue(ctxStack, key, value) {\n        current(ctxStack)[key] = value;\n        return value;\n    }\n    function applyStreamValue(key, index) {\n        return function (ctxStack, values) {\n            setValue(ctxStack, key, values[index]);\n        };\n    }\n    function constantValue(key, value) {\n        return function (ctxStack) {\n            setValue(ctxStack, key, value);\n        };\n    }\n    function mkContext(template) {\n        return isArray(template) ? [] : {};\n    }\n    function pushContext(key, value) {\n        return function (ctxStack) {\n            const newContext = mkContext(value);\n            setValue(ctxStack, key, newContext);\n            ctxStack.push(newContext);\n        };\n    }\n    function containsObservables(value) {\n        if (isObservable(value)) {\n            return true;\n        }\n        else if (value && (value.constructor == Object || value.constructor == Array)) {\n            for (var key in value) {\n                if (Object.prototype.hasOwnProperty.call(value, key)) {\n                    const child = value[key];\n                    if (containsObservables(child))\n                        return true;\n                }\n            }\n        }\n    }\n    function compile(key, value) {\n        if (isObservable(value)) {\n            streams.push(value);\n            funcs.push(applyStreamValue(key, streams.length - 1));\n        }\n        else if (containsObservables(value)) {\n            const popContext = function (ctxStack) { ctxStack.pop(); };\n            funcs.push(pushContext(key, value));\n            compileTemplate(value);\n            funcs.push(popContext);\n        }\n        else {\n            funcs.push(constantValue(key, value));\n        }\n    }\n    function combinator(values) {\n        const rootContext = mkContext(template);\n        const ctxStack = [rootContext];\n        for (var i = 0, f; i < funcs.length; i++) {\n            f = funcs[i];\n            f(ctxStack, values);\n        }\n        return rootContext;\n    }\n    function compileTemplate(template) { _.each(template, compile); }\n    const funcs = [];\n    const streams = [];\n    const resultProperty = containsObservables(template)\n        ? (compileTemplate(template), combineAsArray(streams).map(combinator))\n        : constant(template);\n    return resultProperty.withDesc(new Desc(\"Bacon\", \"combineTemplate\", [template]));\n}\n\n/** @hidden */\nfunction decode(src, cases) {\n    return src.combine(combineTemplate(cases), (key, values) => values[key])\n        .withDesc(new Desc(src, \"decode\", [cases]));\n}\n\n/** @hidden */\nfunction firstToPromise(src, PromiseCtr) {\n    const generator = (resolve, reject) => src.subscribe((event) => {\n        if (hasValue(event)) {\n            resolve(event.value);\n        }\n        if (isError(event)) {\n            reject(event.error);\n        }\n        // One event is enough\n        return noMore;\n    });\n    // Can't do in the global scope, as shim can be applied after Bacon is loaded.\n    if (typeof PromiseCtr === \"function\") {\n        return new PromiseCtr(generator);\n    }\n    else if (typeof Promise === \"function\") {\n        return new Promise(generator);\n    }\n    else {\n        throw new Error(\"There isn't default Promise, use shim or parameter\");\n    }\n}\n/** @hidden */\nfunction toPromise(src, PromiseCtr) {\n    return src.last().firstToPromise(PromiseCtr);\n}\n\nvar idCounter = 0;\n/**\n Observable is the base class for [EventsStream](eventstream.html) and [Property](property.html)\n\n @typeparam V   Type of the elements/values in the stream/property\n */\nclass Observable {\n    constructor(desc) {\n        /**\n         * Unique numeric id of this Observable. Implemented using a simple counter starting from 1.\n         */\n        this.id = ++idCounter;\n        /** @hidden */\n        this._isObservable = true;\n        this.desc = desc;\n        this.initialDesc = desc;\n    }\n    /**\n  Creates a Property that indicates whether\n  `observable` is awaiting `otherObservable`, i.e. has produced a value after the latest\n  value from `otherObservable`. This is handy for keeping track whether we are\n  currently awaiting an AJAX response:\n  \n  ```js\n  var showAjaxIndicator = ajaxRequest.awaiting(ajaxResponse)\n  ```\n  \n     */\n    awaiting(other) {\n        return awaiting(this, other);\n    }\n    /**\n  Throttles the observable using a buffer so that at most one value event in minimumInterval is issued.\n  Unlike [`throttle`](#observable-throttle), it doesn't discard the excessive events but buffers them instead, outputting\n  them with a rate of at most one value per minimumInterval.\n  \n  Example:\n  \n  ```js\n  var throttled = source.bufferingThrottle(2)\n  ```\n  \n  ```\n  source:    asdf----asdf----\n  throttled: a-s-d-f-a-s-d-f-\n  ```\n     */\n    bufferingThrottle(minimumInterval) {\n        return bufferingThrottle(this, minimumInterval);\n    }\n    /**\n  Combines the latest values of the two\n  streams or properties using a two-arg function. Similarly to [`scan`](#scan), you can use a\n  method name instead, so you could do `a.combine(b, \".concat\")` for two\n  properties with array value. The result is a [Property](property.html).\n     */\n    combine(right, f) {\n        return combineTwo(this, right, f).withDesc(new Desc(this, \"combine\", [right, f]));\n    }\n    /**\n  Throttles stream/property by given amount\n  of milliseconds, but so that event is only emitted after the given\n  \"quiet period\". Does not affect emitting the initial value of a [Property](property.html).\n  The difference of [`throttle`](#throttle) and [`debounce`](#debounce) is the same as it is in the\n  same methods in jQuery.\n  \n  Example:\n  \n  ```\n  source:             asdf----asdf----\n  source.debounce(2): -----f-------f--\n  ```\n  \n     */\n    debounce(minimumInterval) {\n        return debounce(this, minimumInterval);\n    }\n    /**\n  Passes the first event in the\n  stream through, but after that, only passes events after a given number\n  of milliseconds have passed since previous output.\n  \n  Example:\n  \n  ```\n  source:                      asdf----asdf----\n  source.debounceImmediate(2): a-d-----a-d-----\n  ```\n     */\n    debounceImmediate(minimumInterval) {\n        return debounceImmediate(this, minimumInterval);\n    }\n    /**\n  Decodes input using the given mapping. Is a\n  bit like a switch-case or the decode function in Oracle SQL. For\n  example, the following would map the value 1 into the string \"mike\"\n  and the value 2 into the value of the `who` property.\n  \n  ```js\n  property.decode({1 : \"mike\", 2 : who})\n  ```\n  \n  This is actually based on [`combineTemplate`](#combinetemplate) so you can compose static\n  and dynamic data quite freely, as in\n  \n  ```js\n  property.decode({1 : { type: \"mike\" }, 2 : { type: \"other\", whoThen : who }})\n  ```\n  \n  The return value of [`decode`](#decode) is always a [`Property`](property.html).\n  \n     */\n    //decode<T extends Record<any, any>>(src: Observable<keyof T>, cases: T): Property<DecodedValueOf<T>>\n    decode(cases) {\n        return decode(this, cases);\n    }\n    /**\n  Delays the stream/property by given amount of milliseconds. Does not delay the initial value of a [`Property`](property.html).\n  \n  ```js\n  var delayed = source.delay(2)\n  ```\n  \n  ```\n  source:    asdf----asdf----\n  delayed:   --asdf----asdf--\n  ```\n  \n     */\n    delay(delayMs) {\n        return delay(this, delayMs);\n    }\n    /**\n     * Returns the an array of dependencies that the Observable has. For instance, for `a.map(function() {}).deps()`, would return `[a]`.\n     This method returns the \"visible\" dependencies only, skipping internal details.  This method is thus suitable for visualization tools.\n     Internally, many combinator functions depend on other combinators to create intermediate Observables that the result will actually depend on.\n     The `deps` method will skip these internal dependencies. See also: [internalDeps](#internaldeps)\n     */\n    deps() {\n        return this.desc.deps();\n    }\n    /**\n  Returns a Property that represents the result of a comparison\n  between the previous and current value of the Observable. For the initial value of the Observable,\n  the previous value will be the given start.\n  \n  Example:\n  \n  ```js\n  var distance = function (a,b) { return Math.abs(b - a) }\n  Bacon.sequentially(1, [1,2,3]).diff(0, distance)\n  ```\n  \n  This would result to following elements in the result stream:\n  \n      1 - 0 = 1\n      2 - 1 = 1\n      3 - 2 = 1\n  \n     */\n    diff(start, f) {\n        return diff(this, start, f);\n    }\n    /**\n  Returns a stream/property where the function f\n  is executed for each value, before dispatching to subscribers. This is\n  useful for debugging, but also for stuff like calling the\n  `preventDefault()` method for events. In fact, you can\n  also use a property-extractor string instead of a function, as in\n  `\".preventDefault\"`.\n  \n  Please note that for Properties, it's not guaranteed that the function will be called exactly once\n  per event; when a Property loses all of its subscribers it will re-emit its current value when a\n  new subscriber is added.\n     */\n    doAction(f) {\n        return this.transform(doActionT(f), new Desc(this, \"doAction\", [f]));\n    }\n    doEnd(f) {\n        return this.transform(doEndT(f), new Desc(this, \"doEnd\", [f]));\n    }\n    /**\n  Returns a stream/property where the function f\n  is executed for each error, before dispatching to subscribers.\n  That is, same as [`doAction`](#observable-doaction) but for errors.\n     */\n    doError(f) {\n        return this.transform(doErrorT(f), new Desc(this, \"doError\", [f]));\n    }\n    /**\n  Logs each value of the Observable to the console. doLog() behaves like [`log`](#log)\n  but does not subscribe to the event stream. You can think of doLog() as a\n  logger function that \u2013 unlike log() \u2013 is safe to use in production. doLog() is\n  safe, because it does not cause the same surprising side-effects as log()\n  does.\n     */\n    doLog(...args) {\n        return this.transform(doLogT(args), new Desc(this, \"doLog\", args));\n    }\n    endAsValue() {\n        return endAsValue(this);\n    }\n    /**\n    Returns a stream/property that ends the on first [`Error`](error.html) event. The\n    error is included in the output of the returned Observable.\n    \n    @param  predicate   optional predicate function to determine whether to end on a given error\n     */\n    endOnError(predicate = x => true) {\n        return endOnError(this, predicate);\n    }\n    /**\n  Returns a stream containing [`Error`](error.html) events only.\n  Same as filtering with a function that always returns false.\n     */\n    errors() {\n        return this.filter(x => false).withDesc(new Desc(this, \"errors\"));\n    }\n    /**\n  Filters values using given predicate function.\n  Instead of a function, you can use a constant value (`true` to include all, `false` to exclude all).\n  \n  You can also filter values based on the value of a\n  property. Event will be included in output [if and only if](http://en.wikipedia.org/wiki/If_and_only_if) the property holds `true`\n  at the time of the event.\n     */\n    filter(f) {\n        return filter$1(this, f);\n    }\n    /**\n  Takes the first element from the stream. Essentially `observable.take(1)`.\n     */\n    first() {\n        return take(1, this, new Desc(this, \"first\"));\n    }\n    /**\n  Returns a Promise which will be resolved with the first event coming from an Observable.\n  Like [`toPromise`](#topromise), the global ES6 promise implementation will be used unless a promise\n  constructor is given.\n     */\n    firstToPromise(PromiseCtr) {\n        return firstToPromise(this, PromiseCtr);\n    }\n    /**\n  Works like [`scan`](#scan) but only emits the final\n  value, i.e. the value just before the observable ends. Returns a\n  [`Property`](property.html).\n     */\n    fold(seed, f) {\n        return fold$1(this, seed, f);\n    }\n    /**\n     An alias for [onValue](#onvalue).\n  \n     Subscribes a given handler function to the observable. Function will be called for each new value (not for errors or stream end).\n     */\n    forEach(f = nullSink) {\n        // TODO: inefficient alias. Also, similar assign alias missing.\n        return this.onValue(f);\n    }\n    /**\n  Pauses and buffers the event stream if last event in valve is truthy.\n  All buffered events are released when valve becomes falsy.\n     */\n    holdWhen(valve) {\n        return holdWhen(this, valve);\n    }\n    inspect() { return this.toString(); }\n    /**\n     * Returns the true dependencies of the observable, including the intermediate \"hidden\" Observables.\n     This method is for Bacon.js internal purposes but could be useful for debugging/analysis tools as well.\n     See also: [deps](#deps)\n     */\n    internalDeps() {\n        return this.initialDesc.deps();\n    }\n    /**\n  Takes the last element from the stream. None, if stream is empty.\n  \n  \n  *Note:* `neverEndingStream.last()` creates the stream which doesn't produce any events and never ends.\n     */\n    last() {\n        return last$1(this);\n    }\n    /**\n  Logs each value of the Observable to the console.\n  It optionally takes arguments to pass to console.log() alongside each\n  value. To assist with chaining, it returns the original Observable. Note\n  that as a side-effect, the observable will have a constant listener and\n  will not be garbage-collected. So, use this for debugging only and\n  remove from production code. For example:\n  \n  ```js\n  myStream.log(\"New event in myStream\")\n  ```\n  \n  or just\n  \n  ```js\n  myStream.log()\n  ```\n  \n     */\n    log(...args) {\n        log(args, this);\n        return this;\n    }\n    /**\n  Adds an extra [`Next`](next.html) event just before End. The value is created\n  by calling the given function when the source stream ends. Instead of a\n  function, a static value can be used.\n     */\n    // TODO: mapEnd and mapError signatures should allow V|V2\n    mapEnd(f) {\n        return this.transform(mapEndT(f), new Desc(this, \"mapEnd\", [f]));\n    }\n    /**\n  Maps errors using given function. More\n  specifically, feeds the \"error\" field of the error event to the function\n  and produces a [`Next`](next.html) event based on the return value.\n     */\n    mapError(f) {\n        return this.transform(mapErrorT(f), new Desc(this, \"mapError\", [f]));\n    }\n    /**\n  Sets the name of the observable. Overrides the default\n  implementation of [`toString`](#tostring) and `inspect`.\n  Returns the same observable, with mutated name.\n     */\n    name(name) {\n        this._name = name;\n        return this;\n    }\n    /**\n  Subscribes a callback to stream end. The function will be called when the stream ends.\n  Just like `subscribe`, this method returns a function for unsubscribing.\n     */\n    onEnd(f = nullVoidSink) {\n        return this.subscribe(function (event) {\n            if (event.isEnd) {\n                return f();\n            }\n            return more;\n        });\n    }\n    /**\n  Subscribes a handler to error events. The function will be called for each error in the stream.\n  Just like `subscribe`, this method returns a function for unsubscribing.\n     */\n    onError(f = nullSink) {\n        return this.subscribe(function (event) {\n            if (isError(event)) {\n                return f(event.error);\n            }\n            return more;\n        });\n    }\n    /**\n  Subscribes a given handler function to the observable. Function will be called for each new value.\n  This is the simplest way to assign a side-effect to an observable. The difference\n  to the `subscribe` method is that the actual stream values are\n  received, instead of [`Event`](event) objects.\n  Just like `subscribe`, this method returns a function for unsubscribing.\n  `stream.onValue` and `property.onValue` behave similarly, except that the latter also\n  pushes the initial value of the property, in case there is one.\n     */\n    onValue(f = nullSink) {\n        return this.subscribe(function (event) {\n            if (hasValue(event)) {\n                return f(event.value);\n            }\n            return more;\n        });\n    }\n    /**\n  Like [`onValue`](#onvalue), but splits the value (assuming its an array) as function arguments to `f`.\n  Only applicable for observables with arrays as values.\n     */\n    onValues(f) {\n        return this.onValue(function (args) { return f(...args); });\n    }\n    /** A synonym for [scan](#scan).\n     */\n    reduce(seed, f) {\n        return fold$1(this, seed, f);\n    }\n    sampledBy(sampler) {\n        return sampledBy(this, sampler, arguments[1]); // TODO: combinator\n    }\n    /**\n  Scans stream/property with given seed value and\n  accumulator function, resulting to a Property. For example, you might\n  use zero as seed and a \"plus\" function as the accumulator to create\n  an \"integral\" property. Instead of a function, you can also supply a\n  method name such as \".concat\", in which case this method is called on\n  the accumulator value and the new stream value is used as argument.\n  \n  Example:\n  \n  ```js\n  var plus = function (a,b) { return a + b }\n  Bacon.sequentially(1, [1,2,3]).scan(0, plus)\n  ```\n  \n  This would result to following elements in the result stream:\n  \n      seed value = 0\n      0 + 1 = 1\n      1 + 2 = 3\n      3 + 3 = 6\n  \n  When applied to a Property as in `r = p.scan(seed, f)`, there's a (hopefully insignificant) catch:\n  The starting value for `r` depends on whether `p` has an\n  initial value when scan is applied. If there's no initial value, this works\n  identically to EventStream.scan: the `seed` will be the initial value of\n  `r`. However, if `r` already has a current/initial value `x`, the\n  seed won't be output as is. Instead, the initial value of `r` will be `f(seed, x)`. This makes sense,\n  because there can only be 1 initial value for a Property at a time.\n     */\n    scan(seed, f) {\n        return scan(this, seed, f);\n    }\n    /**\n  Skips the first n elements from the stream\n     */\n    skip(count) {\n        return skip(this, count);\n    }\n    /**\n  Drops consecutive equal elements. So,\n  from `[1, 2, 2, 1]` you'd get `[1, 2, 1]`. Uses the `===` operator for equality\n  checking by default. If the isEqual argument is supplied, checks by calling\n  isEqual(oldValue, newValue). For instance, to do a deep comparison,you can\n  use the isEqual function from [underscore.js](http://underscorejs.org/)\n  like `stream.skipDuplicates(_.isEqual)`.\n     */\n    skipDuplicates(isEqual) {\n        return skipDuplicates(this, isEqual);\n    }\n    /**\n     * Returns a new stream/property which excludes all [Error](error.html) events in the source\n     */\n    skipErrors() {\n        return skipErrors(this);\n    }\n    /**\n     Skips elements from the source, until a value event\n     appears in the given `starter` stream/property. In other words, starts delivering values\n     from the source after first value appears in `starter`.\n     */\n    skipUntil(starter) {\n        return skipUntil(this, starter);\n    }\n    /**\n     Skips elements until the given predicate function returns falsy once, and then\n     lets all events pass through. Instead of a predicate you can also pass in a `Property<boolean>` to skip elements\n     while the Property holds a truthy value.\n     */\n    skipWhile(f) {\n        return skipWhile(this, f);\n    }\n    /**\n  Returns a Property that represents a\n  \"sliding window\" into the history of the values of the Observable. The\n  result Property will have a value that is an array containing the last `n`\n  values of the original observable, where `n` is at most the value of the\n  `max` argument, and at least the value of the `min` argument. If the\n  `min` argument is omitted, there's no lower limit of values.\n  \n  For example, if you have a stream `s` with value a sequence 1 - 2 - 3 - 4 - 5, the\n  respective values in `s.slidingWindow(2)` would be [] - [1] - [1,2] -\n  [2,3] - [3,4] - [4,5]. The values of `s.slidingWindow(2,2)`would be\n  [1,2] - [2,3] - [3,4] - [4,5].\n  \n     */\n    slidingWindow(maxValues, minValues = 0) {\n        return slidingWindow(this, maxValues, minValues);\n    }\n    /**\n     * subscribes given handler function to event stream. Function will receive [event](event.html) objects\n     for all new value, end and error events in the stream.\n     The subscribe() call returns a `unsubscribe` function that you can call to unsubscribe.\n     You can also unsubscribe by returning [`Bacon.noMore`](../globals.html#nomore) from the handler function as a reply\n     to an Event.\n     `stream.subscribe` and `property.subscribe` behave similarly, except that the latter also\n     pushes the initial value of the property, in case there is one.\n  \n     * @param {EventSink<V>} sink the handler function\n     * @returns {Unsub}\n     */\n    subscribe(sink = nullSink) {\n        return UpdateBarrier.wrappedSubscribe(this, sink => this.subscribeInternal(sink), sink);\n    }\n    /**\n  Takes at most n values from the stream and then ends the stream. If the stream has\n  fewer than n values then it is unaffected.\n  Equal to [`Bacon.never()`](../globals.html#never) if `n <= 0`.\n     */\n    take(count) {\n        return take(count, this);\n    }\n    /**\n  Takes elements from source until a value event appears in the other stream.\n  If other stream ends without value, it is ignored.\n     */\n    takeUntil(stopper) {\n        return takeUntil(this, stopper);\n    }\n    /**\n  Takes while given predicate function holds true, and then ends. Alternatively, you can supply a boolean Property to take elements while the Property holds `true`.\n     */\n    takeWhile(f) {\n        return takeWhile(this, f);\n    }\n    /**\n  Throttles stream/property by given amount\n  of milliseconds. Events are emitted with the minimum interval of\n  [`delay`](#observable-delay). The implementation is based on [`stream.bufferWithTime`](#stream-bufferwithtime).\n  Does not affect emitting the initial value of a [`Property`](#property).\n  \n  Example:\n  \n  ```js\n  var throttled = source.throttle(2)\n  ```\n  \n  ```\n  source:    asdf----asdf----\n  throttled: --s--f----s--f--\n  ```\n     */\n    throttle(minimumInterval) {\n        return throttle(this, minimumInterval);\n    }\n    /**\n  Returns a Promise which will be resolved with the last event coming from an Observable.\n  The global ES6 promise implementation will be used unless a promise constructor is given.\n  Use a shim if you need to support legacy browsers or platforms.\n  [caniuse promises](http://caniuse.com/#feat=promises).\n  \n  See also [firstToPromise](#firsttopromise).\n     */\n    toPromise(PromiseCtr) {\n        return toPromise(this, PromiseCtr);\n    }\n    /**\n     *Returns a textual description of the Observable. For instance, `Bacon.once(1).map(function() {}).toString()` would return \"Bacon.once(1).map(function)\".\n     **/\n    toString() {\n        if (this._name) {\n            return this._name;\n        }\n        else {\n            return this.desc.toString();\n        }\n    }\n    withDesc(desc) {\n        if (desc)\n            this.desc = desc;\n        return this;\n    }\n    /**\n  Sets the structured description of the observable. The [`toString`](#tostring) and `inspect` methods\n  use this data recursively to create a string representation for the observable. This method\n  is probably useful for Bacon core / library / plugin development only.\n  \n  For example:\n  \n      var src = Bacon.once(1)\n      var obs = src.map(function(x) { return -x })\n      console.log(obs.toString())\n      --> Bacon.once(1).map(function)\n      obs.withDescription(src, \"times\", -1)\n      console.log(obs.toString())\n      --> Bacon.once(1).times(-1)\n  \n  The method returns the same observable with mutated description.\n  \n  */\n    withDescription(context, method, ...args) {\n        this.desc = describe(context, method, ...args);\n        return this;\n    }\n    /**\n  Returns an EventStream with elements\n  pair-wise lined up with events from this and the other EventStream or Property.\n  A zipped stream will publish only when it has a value from each\n  source and will only produce values up to when any single source ends.\n  \n  The given function `f` is used to create the result value from value in the two\n  sources. If no function is given, the values are zipped into an array.\n  \n  Be careful not to have too much \"drift\" between streams. If one stream\n  produces many more values than some other excessive buffering will\n  occur inside the zipped observable.\n  \n  Example 1:\n  \n  ```js\n  var x = Bacon.fromArray([1, 2])\n  var y = Bacon.fromArray([3, 4])\n  x.zip(y, function(x, y) { return x + y })\n  \n  # produces values 4, 6\n  ```\n  \n  See also [`zipWith`](../globals.html#zipwith) and [`zipAsArray`](../globals.html/zipasarray) for zipping more than 2 sources.\n  \n     */\n    zip(other, f) {\n        return zip(this, other, f);\n    }\n}\n/**\n A reactive property. Has the concept of \"current value\".\n You can create a Property from an EventStream by using either [`toProperty`](eventstream.html#toproperty)\n or [`scan`](eventstream.html#scan) method. Note: depending on how a Property is created, it may or may not\n have an initial value. The current value stays as its last value after the stream has ended.\n\n Here are the most common ways for creating Properties:\n\n - Create a constant property with [constant](../globals.html#constant)\n - Create a property based on an EventStream with [toProperty](eventstream.html#toproperty)\n - Scan an EventStream with an accumulator function with [scan](eventstream.html#scan)\n - Create a state property based on multiple sources using [update](../globals.html#update)\n\n @typeparam V   Type of the elements/values in the stream/property\n */\nclass Property extends Observable {\n    constructor(desc, subscribe, handler) {\n        super(desc);\n        /** @internal */\n        this._isProperty = true;\n        assertFunction(subscribe);\n        this.dispatcher = new PropertyDispatcher(this, subscribe, handler);\n        registerObs(this);\n    }\n    /**\n     Combines properties with the `&&` operator. It produces a new value when either of the Properties change,\n     combining the latest values using `&&`.\n     */\n    and(other) {\n        return and(this, other);\n    }\n    /**\n     * creates a stream of changes to the Property. The stream *does not* include\n     an event for the current value of the Property at the time this method was called.\n     */\n    changes() {\n        return new EventStream(new Desc(this, \"changes\", []), (sink) => this.dispatcher.subscribe(function (event) {\n            if (!event.isInitial) {\n                return sink(event);\n            }\n            return more;\n        }));\n    }\n    concat(other) {\n        return this.transformChanges(describe(this, \"concat\", other), changes => changes.concat(other));\n    }\n    /** @hidden */\n    transformChanges(desc, f) {\n        return transformPropertyChanges(this, f, desc);\n    }\n    /**\n     For each element in the source stream, spawn a new\n     stream/property using the function `f`. Collect events from each of the spawned\n     streams into the result property. Note that instead of a function, you can provide a\n     stream/property too. Also, the return value of function `f` can be either an\n     `Observable` (stream/property) or a constant value.\n  \n     `stream.flatMap()` can be used conveniently with [`Bacon.once()`](../globals.html#once) and [`Bacon.never()`](../globals.html#never)\n     for converting and filtering at the same time, including only some of the results.\n  \n     Example - converting strings to integers, skipping empty values:\n  \n     ```js\n     stream.flatMap(function(text) {\n      return (text != \"\") ? parseInt(text) : Bacon.never()\n  })\n     ```\n     */\n    flatMap(f) {\n        return flatMap$1(this, f);\n    }\n    /**\n     A [`flatMapWithConcurrencyLimit`](#flatmapwithconcurrencylimit) with limit of 1.\n     */\n    flatMapConcat(f) {\n        return flatMapConcat(this, f);\n    }\n    /**\n     Like [`flatMap`](#flatmap), but is applied only on [`Error`](error.html) events. Returned values go into the\n     value stream, unless an error event is returned. As an example, one type of error could result in a retry and another just\n     passed through, which can be implemented using flatMapError.\n     */\n    flatMapError(f) {\n        return flatMapError(this, f);\n    }\n    flatMapEvent(f) {\n        return flatMapEvent(this, f);\n    }\n    /**\n     Like [`flatMap`](#observable-flatmap), but only spawns a new\n     stream if the previously spawned stream has ended.\n     */\n    flatMapFirst(f) {\n        return flatMapFirst(this, f);\n    }\n    /**\n     Like [`flatMap`](#flatmap), but instead of including events from\n     all spawned streams, only includes them from the latest spawned stream.\n     You can think this as switching from stream to stream.\n     Note that instead of a function, you can provide a stream/property too.\n     */\n    flatMapLatest(f) {\n        return flatMapLatest(this, f);\n    }\n    /**\n     A super method of *flatMap* family. It limits the number of open spawned streams and buffers incoming events.\n     [`flatMapConcat`](#flatmapconcat) is `flatMapWithConcurrencyLimit(1)` (only one input active),\n     and [`flatMap`](#flatmap) is `flatMapWithConcurrencyLimit \u221E` (all inputs are piped to output).\n     */\n    flatMapWithConcurrencyLimit(limit, f) {\n        return flatMapWithConcurrencyLimit(this, limit, f);\n    }\n    /**\n     Groups stream events to new streams by `keyF`. Optional `limitF` can be provided to limit grouped\n     stream life. Stream transformed by `limitF` is passed on if provided. `limitF` gets grouped stream\n     and the original event causing the stream to start as parameters.\n  \n     Calculator for grouped consecutive values until group is cancelled:\n  \n     ```\n     var events = [\n     {id: 1, type: \"add\", val: 3 },\n     {id: 2, type: \"add\", val: -1 },\n     {id: 1, type: \"add\", val: 2 },\n     {id: 2, type: \"cancel\"},\n     {id: 3, type: \"add\", val: 2 },\n     {id: 3, type: \"cancel\"},\n     {id: 1, type: \"add\", val: 1 },\n     {id: 1, type: \"add\", val: 2 },\n     {id: 1, type: \"cancel\"}\n     ]\n  \n     function keyF(event) {\n    return event.id\n  }\n  \n     function limitF(groupedStream, groupStartingEvent) {\n    var cancel = groupedStream.filter(function(x) { return x.type === \"cancel\"}).take(1)\n    var adds = groupedStream.filter(function(x) { return x.type === \"add\" })\n    return adds.takeUntil(cancel).map(\".val\")\n  }\n  \n     Bacon.sequentially(2, events)\n     .groupBy(keyF, limitF)\n     .flatMap(function(groupedStream) {\n      return groupedStream.fold(0, function(acc, x) { return acc + x })\n    })\n     .onValue(function(sum) {\n      console.log(sum)\n      // returns [-1, 2, 8] in an order\n    })\n     ```\n  \n     */\n    groupBy(keyF, limitF) {\n        return groupBy(this, keyF, limitF);\n    }\n    /**\n     Maps values using given function, returning a new\n     stream/property. Instead of a function, you can also provide a [Property](property.html),\n     in which case each element in the source stream will be mapped to the current value of\n     the given property.\n     */\n    map(f) {\n        return map$1(this, f);\n    }\n    /** Returns a Property that inverts the value of this one (using the `!` operator). **/\n    not() {\n        return not(this);\n    }\n    /**\n     Combines properties with the `||` operator. It produces a new value when either of the Properties change,\n     combining the latest values using `||`.\n     */\n    or(other) {\n        return or(this, other);\n    }\n    /**\n     Creates an EventStream by sampling the\n     property value at given interval (in milliseconds)\n     */\n    sample(interval) {\n        return sampleP(this, interval);\n    }\n    /**\n    Adds an initial \"default\" value for the\n    Property. If the Property doesn't have an initial value of it's own, the\n    given value will be used as the initial value. If the property has an\n    initial value of its own, the given value will be ignored.\n     */\n    startWith(seed) {\n        return startWithP(this, seed);\n    }\n    /** @hidden */\n    subscribeInternal(sink = nullSink) {\n        return this.dispatcher.subscribe(sink);\n    }\n    /**\n     Creates an EventStream based on this Property. The stream contains also an event for the current\n     value of this Property at the time this method was called.\n     */\n    toEventStream(options) {\n        return new EventStream(new Desc(this, \"toEventStream\", []), (sink) => this.subscribeInternal(function (event) {\n            return sink(event.toNext());\n        }), undefined, options);\n    }\n    /**\n     Returns the Property itself.\n     */\n    toProperty() {\n        assertNoArguments(arguments);\n        return this;\n    }\n    transform(transformer, desc) {\n        return transformP(this, transformer, desc);\n    }\n    /**\n     Creates an EventStream/Property by sampling a given `samplee`\n     stream/property value at each event from the this stream/property.\n  \n     @param {Observable<V2>} samplee\n     @param f function to select/calculate the result value based on the value in the source stream and the samplee\n  \n     @typeparam V2  type of values in the samplee\n     @typeparam R   type of values in the result\n     */\n    withLatestFrom(samplee, f) {\n        return withLatestFromP(this, samplee, f);\n    }\n    /**\n     Lets you run a state machine\n     on an observable. Give it an initial state object and a state\n     transformation function that processes each incoming event and\n     returns an array containing the next state and an array of output\n     events. Here's an example where we calculate the total sum of all\n     numbers in the stream and output the value on stream end:\n  \n     ```js\n     Bacon.fromArray([1,2,3])\n     .withStateMachine(0, function(sum, event) {\n      if (event.hasValue)\n        return [sum + event.value, []]\n      else if (event.isEnd)\n        return [undefined, [new Bacon.Next(sum), event]]\n      else\n        return [sum, [event]]\n    })\n     ```\n     @param initState  initial state for the state machine\n     @param f          the function that defines the state machine\n     @typeparam  State   type of machine state\n     @typeparam  Out     type of values to be emitted\n     */\n    withStateMachine(initState, f) {\n        return withStateMachine(initState, f, this);\n    }\n}\n/** @hidden */\nfunction isProperty(x) {\n    return !!x._isProperty;\n}\n// allowSync option is used for overriding the \"force async\" behaviour or EventStreams.\n// ideally, this should not exist, but right now the implementation of some operations\n// relies on using internal EventStreams that have synchronous behavior. These are not exposed\n// to the outside world, though.\n/** @hidden */\nconst allowSync = { forceAsync: false };\n/**\n * EventStream represents a stream of events. It is an Observable object, meaning\n that you can listen to events in the stream using, for instance, the [`onValue`](#onvalue) method\n with a callback.\n\n To create an EventStream, you'll want to use one of the following factory methods:\n\n  - From DOM EventTarget or Node.JS EventEmitter objects using [fromEvent](../globals.html#fromevent)\n  - From a Promise using [fromPromise](../globals.html#frompromise)\n  - From an unary callback using [fromCallback](../globals.html#fromcallback)\n  - From a Node.js style callback using [fromNodeCallback](../globals.html#fromnodecallback)\n  - From RxJs or Kefir observables using [fromESObservable](../globals.html#fromesobservable)\n  - By polling a synchronous function using [fromPoll](../globals.html#fromPoll)\n  - Emit a single event instantly using [once](../globals.html#once)\n  - Emit a single event with a delay [later](../globals.html#later)\n  - Emit the same event indefinitely using [interval](../globals.html#interval)\n  - Emit an array of events instantly [fromArray](../globals.html#fromarray)\n  - Emit an array of events with a delay [sequentially](../globals.html#sequentially)\n  - Emit an array of events repeatedly with a delay [repeatedly](../globals.html#repeatedly)\n  - Use a generator function to be called repeatedly [repeat](../globals.html#repeat)\n  - Create a stream that never emits an event, ending immediately [never](../globals.html#never)\n  - Create a stream that never emits an event, ending with a delay [silence](../globals.html#silence)\n  - Create stream using a custom binder function [fromBinder](../globals.html#frombinder)\n  - Wrap jQuery events using [asEventStream](../globals.html#_)\n\n\n @typeparam V   Type of the elements/values in the stream/property\n\n */\nclass EventStream extends Observable {\n    constructor(desc, subscribe, handler, options) {\n        super(desc);\n        /** @hidden */\n        this._isEventStream = true;\n        if (options !== allowSync) {\n            subscribe = asyncWrapSubscribe(this, subscribe);\n        }\n        this.dispatcher = new Dispatcher(this, subscribe, handler);\n        registerObs(this);\n    }\n    /**\n     Buffers stream events with given delay.\n     The buffer is flushed at most once in the given interval. So, if your input\n     contains [1,2,3,4,5,6,7], then you might get two events containing [1,2,3,4]\n     and [5,6,7] respectively, given that the flush occurs between numbers 4 and 5.\n  \n     Also works with a given \"defer-function\" instead\n     of a delay. Here's a simple example, which is equivalent to\n     stream.bufferWithTime(10):\n  \n     ```js\n     stream.bufferWithTime(function(f) { setTimeout(f, 10) })\n     ```\n  \n     * @param delay buffer duration in milliseconds\n     */\n    bufferWithTime(delay) {\n        return bufferWithTime(this, delay);\n    }\n    /**\n     Buffers stream events with given count.\n     The buffer is flushed when it contains the given number of elements or the source stream ends.\n  \n     So, if you buffer a stream of `[1, 2, 3, 4, 5]` with count `2`, you'll get output\n     events with values `[1, 2]`, `[3, 4]` and `[5]`.\n  \n     * @param {number} count\n     */\n    bufferWithCount(count) {\n        return bufferWithCount(this, count);\n    }\n    /**\n     Buffers stream events and\n     flushes when either the buffer contains the given number elements or the\n     given amount of milliseconds has passed since last buffered event.\n  \n     * @param {number | DelayFunction} delay in milliseconds or as a function\n     * @param {number} count  maximum buffer size\n     */\n    bufferWithTimeOrCount(delay, count) {\n        return bufferWithTimeOrCount(this, delay, count);\n    }\n    changes() {\n        return this;\n    }\n    concat(other, options) {\n        return concatE(this, other, options);\n    }\n    /** @hidden */\n    transformChanges(desc, f) {\n        return f(this).withDesc(desc);\n    }\n    /**\n     For each element in the source stream, spawn a new\n     stream/property using the function `f`. Collect events from each of the spawned\n     streams into the result stream/property. Note that instead of a function, you can provide a\n     stream/property too. Also, the return value of function `f` can be either an\n     `Observable` (stream/property) or a constant value.\n  \n     `stream.flatMap()` can be used conveniently with [`Bacon.once()`](../globals.html#once) and [`Bacon.never()`](../globals.html#never)\n     for converting and filtering at the same time, including only some of the results.\n  \n     Example - converting strings to integers, skipping empty values:\n  \n     ```js\n     stream.flatMap(function(text) {\n      return (text != \"\") ? parseInt(text) : Bacon.never()\n  })\n     ```\n     */\n    flatMap(f) { return flatMap$1(this, f); }\n    /**\n     A [`flatMapWithConcurrencyLimit`](#flatmapwithconcurrencylimit) with limit of 1.\n     */\n    flatMapConcat(f) { return flatMapConcat(this, f); }\n    /**\n     Like [`flatMap`](#flatmap), but is applied only on [`Error`](error.html) events. Returned values go into the\n     value stream, unless an error event is returned. As an example, one type of error could result in a retry and another just\n     passed through, which can be implemented using flatMapError.\n     */\n    flatMapError(f) { return flatMapError(this, f); }\n    /**\n     Like [`flatMap`](#observable-flatmap), but only spawns a new\n     stream if the previously spawned stream has ended.\n     */\n    flatMapFirst(f) { return flatMapFirst(this, f); }\n    /**\n     Like [`flatMap`](#flatmap), but instead of including events from\n     all spawned streams, only includes them from the latest spawned stream.\n     You can think this as switching from stream to stream.\n     Note that instead of a function, you can provide a stream/property too.\n     */\n    flatMapLatest(f) { return flatMapLatest(this, f); }\n    /**\n     A super method of *flatMap* family. It limits the number of open spawned streams and buffers incoming events.\n     [`flatMapConcat`](#flatmapconcat) is `flatMapWithConcurrencyLimit(1)` (only one input active),\n     and [`flatMap`](#flatmap) is `flatMapWithConcurrencyLimit \u221E` (all inputs are piped to output).\n     */\n    flatMapWithConcurrencyLimit(limit, f) { return flatMapWithConcurrencyLimit(this, limit, f); }\n    flatMapEvent(f) { return flatMapEvent(this, f); }\n    /**\n     Scans stream with given seed value and accumulator function, resulting to a Property.\n     Difference to [`scan`](#scan) is that the function `f` can return an [`EventStream`](eventstream.html) or a [`Property`](property.html) instead\n     of a pure value, meaning that you can use [`flatScan`](#flatscan) for asynchronous updates of state. It serializes\n     updates so that that the next update will be queued until the previous one has completed.\n  \n     * @param seed initial value to start with\n     * @param f transition function from previous state and new value to next state\n     * @typeparam V2 state and result type\n     */\n    flatScan(seed, f) {\n        return flatScan(this, seed, f);\n    }\n    /**\n     Groups stream events to new streams by `keyF`. Optional `limitF` can be provided to limit grouped\n     stream life. Stream transformed by `limitF` is passed on if provided. `limitF` gets grouped stream\n     and the original event causing the stream to start as parameters.\n  \n     Calculator for grouped consecutive values until group is cancelled:\n  \n     ```\n     var events = [\n     {id: 1, type: \"add\", val: 3 },\n     {id: 2, type: \"add\", val: -1 },\n     {id: 1, type: \"add\", val: 2 },\n     {id: 2, type: \"cancel\"},\n     {id: 3, type: \"add\", val: 2 },\n     {id: 3, type: \"cancel\"},\n     {id: 1, type: \"add\", val: 1 },\n     {id: 1, type: \"add\", val: 2 },\n     {id: 1, type: \"cancel\"}\n     ]\n  \n     function keyF(event) {\n    return event.id\n  }\n  \n     function limitF(groupedStream, groupStartingEvent) {\n    var cancel = groupedStream.filter(function(x) { return x.type === \"cancel\"}).take(1)\n    var adds = groupedStream.filter(function(x) { return x.type === \"add\" })\n    return adds.takeUntil(cancel).map(\".val\")\n  }\n  \n     Bacon.sequentially(2, events)\n     .groupBy(keyF, limitF)\n     .flatMap(function(groupedStream) {\n      return groupedStream.fold(0, function(acc, x) { return acc + x })\n    })\n     .onValue(function(sum) {\n      console.log(sum)\n      // returns [-1, 2, 8] in an order\n    })\n     ```\n  \n     */\n    groupBy(keyF, limitF) {\n        return groupBy(this, keyF, limitF);\n    }\n    /**\n   Maps values using given function, returning a new\n   stream/property. Instead of a function, you can also provide a [Property](property.html),\n   in which case each element in the source stream will be mapped to the current value of\n   the given property.\n   */\n    map(f) {\n        return map$1(this, f);\n    }\n    merge(other) {\n        assertEventStream(other);\n        return mergeAll(this, other).withDesc(new Desc(this, \"merge\", [other]));\n    }\n    /**\n     Returns a stream/property that inverts boolean values (using `!`)\n     */\n    not() { return not(this); }\n    /**\n     Adds a starting value to the stream/property, i.e. concats a\n     single-element stream containing the single seed value  with this stream.\n     */\n    // TODO: should allow V|V2 signature\n    startWith(seed) {\n        return startWithE(this, seed);\n    }\n    /** @hidden */\n    subscribeInternal(sink = nullSink) {\n        return this.dispatcher.subscribe(sink);\n    }\n    /**\n     * Returns this stream.\n     */\n    toEventStream() { return this; }\n    /**\n     Creates a Property based on the\n     EventStream.\n  \n     Without arguments, you'll get a Property without an initial value.\n     The Property will get its first actual value from the stream, and after that it'll\n     always have a current value.\n  \n     You can also give an initial value that will be used as the current value until\n     the first value comes from the stream.\n     */\n    toProperty(initValue) {\n        let usedInitValue = arguments.length\n            ? toOption(initValue)\n            : none();\n        let disp = this.dispatcher;\n        let desc = new Desc(this, \"toProperty\", Array.prototype.slice.apply(arguments));\n        let streamSubscribe = disp.subscribe;\n        return new Property(desc, streamSubscribeToPropertySubscribe(usedInitValue, streamSubscribe));\n    }\n    transform(transformer, desc) {\n        return transformE(this, transformer, desc);\n    }\n    /**\n     Creates an EventStream/Property by sampling a given `samplee`\n     stream/property value at each event from the this stream/property.\n  \n     @param {Observable<V2>} samplee\n     @param f function to select/calculate the result value based on the value in the source stream and the samplee\n  \n     @typeparam V2  type of values in the samplee\n     @typeparam R   type of values in the result\n     */\n    withLatestFrom(samplee, f) {\n        return withLatestFromE(this, samplee, f);\n    }\n    /**\n     Lets you run a state machine\n     on an observable. Give it an initial state object and a state\n     transformation function that processes each incoming event and\n     returns an array containing the next state and an array of output\n     events. Here's an example where we calculate the total sum of all\n     numbers in the stream and output the value on stream end:\n  \n     ```js\n     Bacon.fromArray([1,2,3])\n     .withStateMachine(0, function(sum, event) {\n      if (event.hasValue)\n        return [sum + event.value, []]\n      else if (event.isEnd)\n        return [undefined, [new Bacon.Next(sum), event]]\n      else\n        return [sum, [event]]\n    })\n     ```\n     @param initState  initial state for the state machine\n     @param f          the function that defines the state machine\n     @typeparam  State   type of machine state\n     @typeparam  Out     type of values to be emitted\n     */\n    withStateMachine(initState, f) {\n        return withStateMachine(initState, f, this);\n    }\n}\n/** @hidden */\nfunction newEventStream(description, subscribe) {\n    return new EventStream(description, subscribe);\n}\n/** @hidden */\nfunction newEventStreamAllowSync(description, subscribe) {\n    return new EventStream(description, subscribe, undefined, allowSync);\n}\n\nfunction symbol(key) {\n    if (typeof Symbol !== \"undefined\" && Symbol[key]) {\n        return Symbol[key];\n    }\n    else if (typeof Symbol !== \"undefined\" && typeof Symbol.for === \"function\") {\n        return Symbol[key] = Symbol.for(key);\n    }\n    else {\n        return \"@@\" + key;\n    }\n}\n\nclass ESObservable {\n    constructor(observable) {\n        this.observable = observable;\n    }\n    subscribe(observerOrOnNext, onError, onComplete) {\n        const observer = typeof observerOrOnNext === 'function'\n            ? { next: observerOrOnNext, error: onError, complete: onComplete }\n            : observerOrOnNext;\n        const subscription = {\n            closed: false,\n            unsubscribe: function () {\n                subscription.closed = true;\n                cancel();\n            }\n        };\n        const cancel = this.observable.subscribe(function (event) {\n            if (hasValue(event) && observer.next) {\n                observer.next(event.value);\n            }\n            else if (isError(event)) {\n                if (observer.error)\n                    observer.error(event.error);\n                subscription.unsubscribe();\n            }\n            else if (event.isEnd) {\n                subscription.closed = true;\n                if (observer.complete)\n                    observer.complete();\n            }\n        });\n        return subscription;\n    }\n}\nESObservable.prototype[symbol('observable')] = function () {\n    return this;\n};\nObservable.prototype.toESObservable = function () {\n    return new ESObservable(this);\n};\nObservable.prototype[symbol('observable')] = Observable.prototype.toESObservable;\n\n/**\n Creates a Property from an initial value and updates the value based on multiple inputs.\n The inputs are defined similarly to [`Bacon.when`](#bacon-when), like this:\n\n ```js\n var result = Bacon.update(\n initial,\n [x,y,z, (previous,x,y,z) => { ... }],\n [x,y,   (previous,x,y) => { ... }])\n ```\n\n As input, each function above will get the previous value of the `result` Property, along with values from the listed Observables.\n The value returned by the function will be used as the next value of `result`.\n\n Just like in [`Bacon.when`](#when), only EventStreams will trigger an update, while Properties will be just sampled.\n So, if you list a single EventStream and several Properties, the value will be updated only when an event occurs in the EventStream.\n\n Here's a simple gaming example:\n\n ```js\n let scoreMultiplier = Bacon.constant(1)\n let hitUfo = Bacon.interval(1000)\n let hitMotherShip = Bacon.later(10000)\n let score = Bacon.update(\n 0,\n [hitUfo, scoreMultiplier, (score, _, multiplier) => score + 100 * multiplier ],\n [hitMotherShip, (score, _) => score + 2000 ]\n )\n ```\n\n In the example, the `score` property is updated when either `hitUfo` or `hitMotherShip` occur. The `scoreMultiplier` Property is sampled to take multiplier into account when `hitUfo` occurs.\n\n * @param initial\n * @param {UpdatePattern<Out>} patterns\n * @returns {Property<Out>}\n */\nfunction update(initial, ...patterns) {\n    let rawPatterns = extractRawPatterns(patterns);\n    for (var i = 0; i < rawPatterns.length; i++) {\n        let pattern = rawPatterns[i];\n        pattern[1] = lateBindFirst(pattern[1]);\n    }\n    return when(...rawPatterns).scan(initial, (function (x, f) {\n        return f(x);\n    })).withDesc(new Desc(\"Bacon\", \"update\", [initial, ...patterns]));\n}\nfunction lateBindFirst(f) {\n    return function (...args) {\n        return function (i) {\n            return f(...[i].concat(args));\n        };\n    };\n}\n\n/**\n Creates an EventStream that delivers the given\n series of values (given as array) to the first subscriber. The stream ends after these\n values have been delivered. You can also send [`Bacon.Error`](classes/error.html) events, or\n any combination of pure values and error events like this:\n `Bacon.fromArray([1, new Bacon.Error()])\n\n @param   values    Array of values or events to repeat\n @typeparam V Type of stream elements\n */\nfunction fromArray(values) {\n    assertArray(values);\n    if (!values.length) {\n        return never().withDesc(new Desc(\"Bacon\", \"fromArray\", values));\n    }\n    else {\n        var i = 0;\n        var stream = new EventStream(new Desc(\"Bacon\", \"fromArray\", [values]), function (sink) {\n            var unsubd = false;\n            var reply = more;\n            var pushing = false;\n            var pushNeeded = false;\n            function push() {\n                pushNeeded = true;\n                if (pushing) {\n                    return;\n                }\n                if (i === values.length) {\n                    sink(endEvent());\n                    return false;\n                }\n                pushing = true;\n                while (pushNeeded) {\n                    pushNeeded = false;\n                    if ((reply !== noMore) && !unsubd) {\n                        var value = values[i++];\n                        reply = sink(toEvent(value));\n                        if (reply !== noMore) {\n                            if (i === values.length) {\n                                sink(endEvent());\n                            }\n                            else {\n                                UpdateBarrier.afterTransaction(stream, push);\n                            }\n                        }\n                    }\n                }\n                pushing = false;\n                return pushing;\n            }\n            UpdateBarrier.soonButNotYet(stream, push);\n            return function () {\n                unsubd = true;\n                return unsubd;\n            };\n        });\n        return stream;\n    }\n}\n\nfunction isEventSourceFn(x) {\n    return _.isFunction(x);\n}\n// Wrap DOM EventTarget, Node EventEmitter, or\n// [un]bind: (Any, (Any) -> None) -> None interfaces\n// common in MVCs as EventStream\n//\n// target - EventTarget or EventEmitter, source of events\n// eventSource - event name to bind or a function that performs custom binding\n// eventTransformer - defaults to returning the first argument to handler\n//\n// Example 1:\n//\n//   Bacon.fromEventTarget(document.body, \"click\")\n//   # => EventStream\n//\n//   Bacon.fromEventTarget(document.body, \"scroll\", {passive: true})\n//   # => EventStream\n//\n//   Bacon.fromEventTarget (new EventEmitter(), \"data\")\n//   # => EventStream\n//\n// Returns EventStream\n/** @hidden */\nvar eventMethods = [\n    [\"addEventListener\", \"removeEventListener\"],\n    [\"addListener\", \"removeListener\"],\n    [\"on\", \"off\"],\n    [\"bind\", \"unbind\"]\n];\nvar findHandlerMethods = function (target) {\n    var pair;\n    for (var i = 0; i < eventMethods.length; i++) {\n        pair = eventMethods[i];\n        var methodPair = [target[pair[0]], target[pair[1]]];\n        if (methodPair[0] && methodPair[1]) {\n            return methodPair;\n        }\n    }\n    for (var j = 0; j < eventMethods.length; j++) {\n        pair = eventMethods[j];\n        var addListener = target[pair[0]];\n        if (addListener) {\n            return [addListener, function () { }];\n        }\n    }\n    throw new Error(\"No suitable event methods in \" + target);\n};\n/**\n creates an EventStream from events\n on a DOM EventTarget or Node.JS EventEmitter object, or an object that supports event listeners using `on`/`off` methods.\n You can also pass an optional function that transforms the emitted\n events' parameters.\n\n The simple form:\n\n ```js\n Bacon.fromEvent(document.body, \"click\").onValue(function() { alert(\"Bacon!\") })\n ```\n\n Using a binder function:\n\n ```js\n Bacon.fromEvent(\n window,\n function(binder, listener) {\n    binder(\"scroll\", listener, {passive: true})\n  }\n ).onValue(function() {\n  console.log(window.scrollY)\n})\n ```\n\n @param target\n @param eventSource\n @param eventTransformer\n @typeparam V Type of stream elements\n\n */\nfunction fromEvent(target, eventSource, eventTransformer) {\n    var [sub, unsub] = findHandlerMethods(target);\n    var desc = new Desc(\"Bacon\", \"fromEvent\", [target, eventSource]);\n    return fromBinder(function (handler) {\n        if (isEventSourceFn(eventSource)) {\n            eventSource(sub.bind(target), handler);\n            return function () {\n                return eventSource(unsub.bind(target), handler);\n            };\n        }\n        else {\n            sub.call(target, eventSource, handler);\n            return function () {\n                return unsub.call(target, eventSource, handler);\n            };\n        }\n    }, eventTransformer).withDesc(desc);\n}\n\n/**\n A shorthand for combining multiple\n sources (streams, properties, constants) as array and assigning the\n side-effect function f for the values. The following example would log\n the number 3.\n\n ```js\n function f(a, b) { console.log(a + b) }\n Bacon.onValues(Bacon.constant(1), Bacon.constant(2), f)\n ```\n */\nfunction onValues(...args) {\n    return combineAsArray(args.slice(0, args.length - 1)).onValues(args[arguments.length - 1]);\n}\n\n/**\n Calls generator function which is expected to return an observable. The returned EventStream contains\n values and errors from the spawned observable. When the spawned observable ends, the generator is called\n again to spawn a new observable.\n\n This is repeated until the generator returns a falsy value\n (such as `undefined` or `false`).\n\n The generator function is called with one argument \u2014 iteration number starting from `0`.\n\n Here's an example:\n\n```js\nBacon.repeat(function(i) {\nif (i < 3) {\n  return Bacon.once(i);\n} else {\n  return false;\n}\n}).log()\n```\n\n The example will produce values 0, 1 and 2.\n\n @param {(number) => (Observable<V> | null)} generator\n @returns {EventStream<V>}\n @typeparam V Type of stream elements\n\n */\nfunction repeat(generator) {\n    var index = 0;\n    return fromBinder(function (sink) {\n        var flag = false;\n        var reply = more;\n        var unsub = function () { };\n        function handleEvent(event) {\n            if (event.isEnd) {\n                if (!flag) {\n                    flag = true;\n                }\n                else {\n                    subscribeNext();\n                }\n                return more;\n            }\n            else {\n                return reply = sink(event);\n            }\n        }\n        function subscribeNext() {\n            var next;\n            flag = true;\n            while (flag && reply !== noMore) {\n                next = generator(index++);\n                flag = false;\n                if (next) {\n                    unsub = next.subscribeInternal(handleEvent);\n                }\n                else {\n                    sink(endEvent());\n                }\n            }\n            flag = true;\n        }\n        subscribeNext();\n        return () => unsub();\n    }).withDesc(new Desc(\"Bacon\", \"repeat\", [generator]));\n}\n\n/**\n Repeats given elements indefinitely\n with given interval in milliseconds. For example, `repeatedly(10, [1,2,3])`\n would lead to `1,2,3,1,2,3...` to be repeated indefinitely.\n\n @param delay between values, in milliseconds\n @param values array of values to repeat\n @typeparam V Type of stream elements\n\n */\nfunction repeatedly(delay, values) {\n    var index = 0;\n    return fromPoll(delay, function () {\n        return values[index++ % values.length];\n    }).withDesc(new Desc(\"Bacon\", \"repeatedly\", [delay, values]));\n}\n\n/**\n Creates a stream that ends after given amount of milliseconds, without emitting any values.\n\n @param duration duration of silence in milliseconds\n @typeparam V Type of stream elements\n */\nfunction silence(duration) {\n    return later(duration, \"\")\n        .filter(false)\n        .withDesc(new Desc(\"Bacon\", \"silence\", [duration]));\n}\n\n/**\n Used to retry the call when there is an [`Error`](classes/error.html) event in the stream produced by the `source` function.\n\n ```js\n var triggeringStream, ajaxCall // <- ajaxCall gives Errors on network or server errors\n ajaxResult = triggeringStream.flatMap(function(url) {\n    return Bacon.retry({\n        source: function(attemptNumber) { return ajaxCall(url) },\n        retries: 5,\n        isRetryable: function (error) { return error.httpStatusCode !== 404; },\n        delay: function(context) { return 100; } // Just use the same delay always\n    })\n})\n ```\n * @param options (click for details)\n */\nfunction retry(options) {\n    if (!_.isFunction(options.source)) {\n        throw new Error(\"'source' option has to be a function\");\n    }\n    var source = options.source;\n    var retries = options.retries || 0;\n    var retriesDone = 0;\n    var delay = options.delay || function () {\n        return 0;\n    };\n    var isRetryable = options.isRetryable || function () {\n        return true;\n    };\n    var finished = false;\n    var errorEvent = null;\n    return repeat(function (count) {\n        function valueStream() {\n            return source(count).endOnError().transform(function (event, sink) {\n                if (isError(event)) {\n                    errorEvent = event;\n                    if (!(isRetryable(errorEvent.error) && (retries === 0 || retriesDone < retries))) {\n                        finished = true;\n                        return sink(event);\n                    }\n                    else {\n                        return more;\n                    }\n                }\n                else {\n                    if (hasValue(event)) {\n                        errorEvent = null;\n                        finished = true;\n                    }\n                    return sink(event);\n                }\n            });\n        }\n        if (finished) {\n            return undefined;\n        }\n        else if (errorEvent) {\n            var context = {\n                error: errorEvent.error,\n                retriesDone\n            };\n            var pause = silence(delay(context));\n            retriesDone++;\n            return pause.concat(once(null).flatMap(valueStream));\n        }\n        else {\n            return valueStream();\n        }\n    }).withDesc(new Desc(\"Bacon\", \"retry\", [options]));\n}\n\n/**\n Creates a stream containing given\n values (given as array). Delivered with given interval in milliseconds.\n\n @param delay between elements, in milliseconds\n @param array of values or events\n @typeparam V Type of stream elements\n\n */\nfunction sequentially(delay, values) {\n    var index = 0;\n    return fromPoll(delay, function () {\n        var value = values[index++];\n        if (index < values.length) {\n            return value;\n        }\n        else if (index === values.length) {\n            return [toEvent(value), endEvent()];\n        }\n        else {\n            return endEvent();\n        }\n    }).withDesc(new Desc(\"Bacon\", \"sequentially\", [delay, values]));\n}\n\nfunction valueAndEnd(value) {\n    return [toEvent(value), endEvent()];\n}\n/**\n * Creates an EventStream from a Promise object such as JQuery Ajax.\n This stream will contain a single value or an error, followed immediately by stream end.\n You can use the optional abort flag (i.e. \u00B4fromPromise(p, true)\u00B4 to have the `abort` method of the given promise be called when all subscribers have been removed from the created stream.\n You can also pass an optional function that transforms the promise value into Events. The default is to transform the value into `[new Bacon.Next(value), new Bacon.End()]`.\n Check out this [example](https://github.com/raimohanska/baconjs-examples/blob/master/resources/public/index.html).\n\n *\n * @param {Promise<V>} source promise object\n * @param abort should we call the `abort` method of the Promise on unsubscribe. This is a nonstandard feature you should probably ignore.\n * @param {EventTransformer<V>} eventTransformer\n * @returns {EventStream<V>}\n */\nfunction fromPromise(promise, abort, eventTransformer = valueAndEnd) {\n    return fromBinder(function (handler) {\n        const bound = promise.then(handler, (e) => handler(new Error$1(e)));\n        if (bound && typeof bound.done === \"function\") {\n            bound.done();\n        }\n        if (abort) {\n            return function () {\n                if (typeof promise.abort === \"function\") {\n                    return promise.abort();\n                }\n            };\n        }\n        else {\n            return function () {\n            };\n        }\n    }, eventTransformer).withDesc(new Desc(\"Bacon\", \"fromPromise\", [promise]));\n}\n\nfunction withMethodCallSupport(wrapped) {\n    return function (f, ...args) {\n        if (typeof f === \"object\" && args.length) {\n            var context = f;\n            var methodName = args[0];\n            f = function (...args) {\n                return context[methodName](...args);\n            };\n            args = args.slice(1);\n        }\n        return wrapped(f, ...args);\n    };\n}\nfunction partiallyApplied(f, applied) {\n    return function (...args) { return f(...(applied.concat(args))); };\n}\nconst makeFunction_ = withMethodCallSupport(function (f, ...args) {\n    if (_.isFunction(f)) {\n        if (args.length) {\n            return partiallyApplied(f, args);\n        }\n        else {\n            return f;\n        }\n    }\n    else {\n        return _.always(f);\n    }\n});\n/** @hidden */\nfunction makeFunction(f, args) {\n    return makeFunction_(f, ...args);\n}\n\n// TODO: types/doc for the object, fnname variant\n/**\n Creates an EventStream from a function that\n accepts a callback. The function is supposed to call its callback just\n once. For example:\n\n ```js\n Bacon.fromCallback(callback => callback(\"bacon\"))\n ```\n\n This would create a stream that outputs a single value \"Bacon!\" and ends\n after that. The use of setTimeout causes the value to be delayed by 1\n second.\n\n You can also give any number of arguments to [`fromCallback`](#bacon-fromcallback), which will be\n passed to the function. These arguments can be simple variables, Bacon\n EventStreams or Properties. For example the following will output \"Bacon rules\":\n\n ```js\n bacon = Bacon.constant('bacon')\n Bacon.fromCallback(function(a, b, callback) {\n  callback(a + ' ' + b);\n}, bacon, 'rules').log();\n ```\n\n * @param f\n * @param args\n * @returns {EventStream<V>}\n */\nfunction fromCallback(f, ...args) {\n    return fromBinder(function (handler) {\n        makeFunction(f, args)(handler);\n        return nop;\n    }, function (value) {\n        return [value, endEvent()];\n    }).withDesc(new Desc(\"Bacon\", \"fromCallback\", [f, ...args]));\n}\n/**\nBehaves the same way as `Bacon.fromCallback`,\nexcept that it expects the callback to be called in the Node.js convention:\n`callback(error, data)`, where error is null if everything is fine. For example:\n\n```js\nvar Bacon = require('baconjs').Bacon,\nfs = require('fs');\nvar read = Bacon.fromNodeCallback(fs.readFile, 'input.txt');\nread.onError(function(error) { console.log(\"Reading failed: \" + error); });\nread.onValue(function(value) { console.log(\"Read contents: \" + value); });\n```\n\n */\nfunction fromNodeCallback(f, ...args) {\n    return fromBinder(function (handler) {\n        makeFunction(f, args)(handler);\n        return nop;\n    }, function (error, value) {\n        if (error) {\n            return [new Error$1(error), endEvent()];\n        }\n        return [value, endEvent()];\n    }).withDesc(new Desc(\"Bacon\", \"fromNodeCallback\", [f, ...args]));\n}\n\n/**\n * Creates an EventStream from an\n [ES Observable](https://github.com/tc39/proposal-observable). Input can be any\n ES Observable implementation including RxJS and Kefir.\n */\nfunction fromESObservable(_observable) {\n    var observable;\n    if (_observable[symbol(\"observable\")]) {\n        observable = _observable[symbol(\"observable\")]();\n    }\n    else {\n        observable = _observable;\n    }\n    var desc = new Desc(\"Bacon\", \"fromESObservable\", [observable]);\n    return new EventStream(desc, function (sink) {\n        var cancel = observable.subscribe({\n            error: function (x) {\n                sink(new Error$1(x));\n                sink(new End());\n            },\n            next: function (value) { sink(new Next(value)); },\n            complete: function () {\n                sink(new End());\n            }\n        });\n        // Support RxJS Observables\n        if (cancel.unsubscribe) {\n            return function () { cancel.unsubscribe(); };\n        }\n        else {\n            return cancel;\n        }\n    });\n}\n\n/**\n An [`EventStream`](eventstream.html) that allows you to [`push`](#push) values into the stream.\n\n It also allows plugging other streams into the Bus, as inputs. The Bus practically\n merges all plugged-in streams and the values pushed using the [`push`](#push)\n method.\n */\nclass Bus extends EventStream {\n    constructor() {\n        super(new Desc(\"Bacon\", \"Bus\", []), (sink) => this.subscribeAll(sink));\n        /** @hidden */\n        this.pushing = false;\n        /** @hidden */\n        this.pushQueue = undefined;\n        /** @hidden */\n        this.ended = false;\n        /** @hidden */\n        this.subscriptions = [];\n        this.unsubAll = _.bind(this.unsubAll, this);\n        this.push = _.bind(this.push, this);\n        this.subscriptions = []; // new array for each Bus instance\n        this.ended = false;\n    }\n    /**\n     Plugs the given stream as an input to the Bus. All events from\n     the given stream will be delivered to the subscribers of the Bus.\n     Returns a function that can be used to unplug the same stream.\n  \n     The plug method practically allows you to merge in other streams after\n     the creation of the Bus.\n  \n     * @returns a function that can be called to \"unplug\" the source from Bus.\n     */\n    plug(input) {\n        assertObservable(input);\n        if (this.ended) {\n            return;\n        }\n        var sub = { input: input, unsub: undefined };\n        this.subscriptions.push(sub);\n        if (typeof this.sink !== \"undefined\") {\n            this.subscribeInput(sub);\n        }\n        return (() => this.unsubscribeInput(input));\n    }\n    /**\n     Ends the stream. Sends an [End](end.html) event to all subscribers.\n     After this call, there'll be no more events to the subscribers.\n     Also, the [`push`](#push), [`error`](#error) and [`plug`](#plug) methods have no effect.\n     */\n    end() {\n        this.ended = true;\n        this.unsubAll();\n        if (typeof this.sink === \"function\") {\n            return this.sink(endEvent());\n        }\n    }\n    /**\n     * Pushes a new value to the stream.\n     */\n    push(value) {\n        if (!this.ended && typeof this.sink === \"function\") {\n            var rootPush = !this.pushing;\n            if (!rootPush) {\n                //console.log(\"recursive push\")\n                if (!this.pushQueue)\n                    this.pushQueue = [];\n                this.pushQueue.push(value);\n                //console.log('queued', value)\n                return;\n            }\n            this.pushing = true;\n            try {\n                return this.sink(nextEvent(value));\n            }\n            finally {\n                if (rootPush && this.pushQueue) {\n                    //console.log(\"start processing queue\", this.pushQueue.length)\n                    var i = 0;\n                    while (i < this.pushQueue.length) {\n                        //console.log(\"in loop\", i, this.pushQueue[i])\n                        var v = this.pushQueue[i];\n                        this.sink(nextEvent(v));\n                        i++;\n                    }\n                    this.pushQueue = undefined;\n                }\n                this.pushing = false;\n            }\n        }\n    }\n    /**\n     * Pushes an error to this stream.\n     */\n    error(error) {\n        if (typeof this.sink === \"function\") {\n            return this.sink(new Error$1(error));\n        }\n    }\n    /** @hidden */\n    unsubAll() {\n        var iterable = this.subscriptions;\n        for (var i = 0, sub; i < iterable.length; i++) {\n            sub = iterable[i];\n            if (typeof sub.unsub === \"function\") {\n                sub.unsub();\n            }\n        }\n    }\n    /** @hidden */\n    subscribeAll(newSink) {\n        if (this.ended) {\n            newSink(endEvent());\n        }\n        else {\n            this.sink = newSink;\n            var iterable = this.subscriptions.slice();\n            for (var i = 0, subscription; i < iterable.length; i++) {\n                subscription = iterable[i];\n                this.subscribeInput(subscription);\n            }\n        }\n        return this.unsubAll;\n    }\n    /** @hidden */\n    guardedSink(input) {\n        return (event) => {\n            if (event.isEnd) {\n                this.unsubscribeInput(input);\n                return noMore;\n            }\n            else if (this.sink) {\n                return this.sink(event);\n            }\n            else {\n                return more;\n            }\n        };\n    }\n    /** @hidden */\n    subscribeInput(subscription) {\n        subscription.unsub = subscription.input.subscribeInternal(this.guardedSink(subscription.input));\n        return subscription.unsub;\n    }\n    /** @hidden */\n    unsubscribeInput(input) {\n        var iterable = this.subscriptions;\n        for (var i = 0, sub; i < iterable.length; i++) {\n            sub = iterable[i];\n            if (sub.input === input) {\n                if (typeof sub.unsub === \"function\") {\n                    sub.unsub();\n                }\n                this.subscriptions.splice(i, 1);\n                return;\n            }\n        }\n    }\n}\n\n/** @hidden */\nfunction tryF(f) {\n    return function (value) {\n        try {\n            return once(f(value));\n        }\n        catch (e) {\n            return once(new Error$1(e));\n        }\n    };\n}\n\n/**\n * JQuery/Zepto integration support\n */\nconst $ = {\n    /**\n     Creates an EventStream from events on a\n     jQuery or Zepto.js object. You can pass optional arguments to add a\n     jQuery live selector and/or a function that processes the jQuery\n     event and its parameters, if given, like this:\n  \n     ```js\n     $(\"#my-div\").asEventStream(\"click\", \".more-specific-selector\")\n     $(\"#my-div\").asEventStream(\"click\", \".more-specific-selector\", function(event, args) { return args[0] })\n     $(\"#my-div\").asEventStream(\"click\", function(event, args) { return args[0] })\n     ```\n  \n     Note: you need to install the `asEventStream` method on JQuery by calling\n     [init()](#_.aseventstream) as in `Bacon.$.init($)`.\n     */\n    asEventStream(eventName, selector, eventTransformer) {\n        if (_.isFunction(selector)) {\n            eventTransformer = selector;\n            selector = undefined;\n        }\n        return fromBinder((handler) => {\n            this.on(eventName, selector, handler);\n            return (() => this.off(eventName, selector, handler));\n        }, eventTransformer).withDesc(new Desc(this.selector || this, \"asEventStream\", [eventName]));\n    },\n    /**\n     * Installs the [asEventStream](#_.aseventstream) to the given jQuery/Zepto object (the `$` object).\n     */\n    init(jQuery) {\n        jQuery.fn.asEventStream = $.asEventStream;\n    }\n};\n\n/**\n *  Bacon.js version as string\n */\nconst version = '3.0.17';\n\nexport { $, Bus, CompositeUnsubscribe, Desc, End, Error$1 as Error, Event, EventStream, Initial, Next, Observable, Property, Value, _, combine, combineAsArray, combineTemplate, combineTwo, combineWith, concatAll, constant, fromArray, fromBinder, fromCallback, fromESObservable, fromEvent, fromEvent as fromEventTarget, fromNodeCallback, fromPoll, fromPromise, getScheduler, groupSimultaneous, hasValue, interval, isEnd, isError, isEvent, isInitial, isNext, later, mergeAll, more, never, noMore, nullSink, nullVoidSink, onValues, once, repeat, repeatedly, retry, sequentially, setScheduler, silence, spy, tryF as try, update, version, when, zipAsArray, zipWith };\n", "import { Bus } from 'baconjs'\n\nexport const windowKeyDownListener = new Bus<{ code: string }>();\nexport const windowKeyUpListener = new Bus<{ code: string }>();\n", "import { inputs } from './animate'\nimport { State } from './State/State'\nimport { windowKeyDownListener, windowKeyUpListener } from './utilities/events';\n\nconst trackedKeys = State<Record<string, boolean>>({})\nconst frameSnapshotKeys = State<Record<string, boolean>>({});\nconst setKeyDown = code => {\n    trackedKeys(keys => ({ ...keys, [code]: true }));\n}\n\nconst setKeyUp = code => {\n    trackedKeys(({ [code]: _, ...rest }) => (rest));\n}\n\ninputs.add(() => {\n    frameSnapshotKeys(trackedKeys())\n})\n\nwindowKeyDownListener\n    .onValue(({ code }) => {\n        setKeyDown(code)\n    })\n\nwindowKeyUpListener\n    .onValue(({ code }) => {\n        setKeyUp(code)\n    })\n\nexport const isKeyDown = keyString => Boolean(frameSnapshotKeys()[keyString])\n", "import { render, timeDiffS, update } from './animate'\nimport { isKeyDown } from './keys'\nimport { add, down, from, left, right, up, zero } from './Vector'\nimport { State } from './State/State'\nimport { fill, fillStyle, restore, save, rect, beginPath, closePath } from './draw'\n\nexport const pos = State(zero())\nexport const size = State(from(50))\nexport const speed = State(400);\n\nconst calculateSpeedForFrame = (): number => speed() * timeDiffS();\n\nconst moveUp = () => {\n    if (isKeyDown('KeyW')) {\n        pos(pos => add(pos, up(calculateSpeedForFrame())))\n    }\n}\nconst moveDown = () => {\n    if (isKeyDown('KeyS')) {\n        pos(pos => add(pos, down(calculateSpeedForFrame())))\n    }\n}\n\nconst moveLeft = () => {\n    if (isKeyDown('KeyA')) {\n        pos(pos => add(pos, left(calculateSpeedForFrame())))\n    }\n}\n\nconst moveRight = () => {\n    if (isKeyDown('KeyD')) {\n        pos(pos => add(pos, right(calculateSpeedForFrame())))\n    }\n}\n\nupdate.add(\n    moveUp,\n    moveDown,\n    moveLeft,\n    moveRight,\n)\n\nrender.add(() => {\n    save()\n    beginPath()\n    rect(...pos(), ...size())\n    fillStyle('black')\n    fill()\n    closePath();\n    restore()\n})\n\n", "export const uid = () => `${Date.now()}${Math.random()}`", "import { physics, removal, render } from './animate'\nimport { values } from 'ramda'\nimport { uid } from './uid'\nimport { SExtend, SExtendValue, SFilterValues, State } from './State/State'\nimport { beginPath, closePath, moveTo, restore, save, stroke, lineTo, strokeStyle, } from './draw'\n\nexport interface Hitbox {\n    label: string;\n    id: string;\n    x: number;\n    y: number;\n    x2: number;\n    y2: number;\n    width: number;\n    height: number;\n    ownerId: string;\n}\nexport const createHitBox = (\n    label: string,\n    [x, y]: Vector,\n    [width, height]: Vector,\n    ownerId: string,\n): Hitbox => {\n    return {\n        label,\n        id: uid(),\n        x,\n        y,\n        x2: x + width,\n        y2: y + height,\n        width,\n        height,\n        ownerId\n    }\n}\n\nexport const hitboxes = State<Record<string, Hitbox>>({});\nexport const hitboxInteractions = State<Record<string, string[]>>({})\nexport const hitboxRemoveQueue = State<string[]>([]);\n\nexport const attachHitboxToObject = <T extends { hitboxId?: string }>(hitbox: Hitbox, obj: T): T => ({ ...obj, hitboxId: hitbox.id })\n\nexport const isLine = (hitbox) => hitbox.x === hitbox.x2 || hitbox.y === hitbox.y2\nexport const hittest = (hitboxA, hitboxB) => {\n    if (isLine(hitboxA) || isLine(hitboxB)) return false\n    if (hitboxB.x >= hitboxA.x2) return false\n    if (hitboxA.x >= hitboxB.x2) return false\n    if (hitboxB.y >= hitboxA.y2) return false\n    if (hitboxA.y >= hitboxB.y2) return false\n    return true\n}\n\nexport const getInteractionsForHitboxId = hitboxId => {\n    return (hitboxInteractions()[hitboxId] || [])\n        .map(hitboxId => hitboxes()[hitboxId])\n}\n\nexport const removeHitbox = (hitboxId) => {\n    hitboxRemoveQueue((queue) => [...queue, hitboxId]);\n}\n\nexport const addInteraction = ({ id: idA }: Hitbox, { id: idB }: Hitbox) => {\n    hitboxInteractions(SExtend((interactions) => ({\n        [idA]: [...(interactions[idA] || []), idB],\n        [idB]: [...(interactions[idB] || []), idA],\n    })))\n}\n\nexport const checkHitboxes = () => {\n    const ht = values(hitboxes());\n    for (let i = 0; i < ht.length; i++) {\n        const hitboxA = ht[i];\n        for (let j = i + 1; j < ht.length; j++) {\n            const hitboxB = ht[j];\n            if (hittest(hitboxA, hitboxB)) {\n                addInteraction(hitboxA, hitboxB)\n            }\n        }\n    }\n}\n\nexport const getInteractions = (hitboxId) => {\n    return hitboxInteractions()[hitboxId] || []\n}\n\nexport const addHitbox = (...hitboxesToAdd: Hitbox[]) => {\n    hitboxesToAdd.forEach(hitbox => {\n        hitboxes((hitboxes) => ({ ...hitboxes, [hitbox.id]: hitbox }));\n        hitboxInteractions((interactions) => ({ ...interactions, [hitbox.id]: [] }));\n    })\n}\nexport const moveHitbox = (hitboxId: string, [x, y]: Vector) => {\n    hitboxes(SExtendValue(hitboxId, (hitbox) => {\n        return {\n            x,\n            y,\n            x2: x + hitbox.width,\n            y2: y + hitbox.height,\n        }\n    }))\n}\n\nexport const clearHitboxInteractions = () => hitboxInteractions({})\nexport const clearHitboxRemoveQueue = () => hitboxRemoveQueue([])\nexport const flushHitboxRemoveQueue = () => {\n    hitboxes(SFilterValues((_, hitboxId) => {\n        return !hitboxRemoveQueue().includes(hitboxId)    \n    }))\n}\n\nremoval.add(\n    clearHitboxInteractions,\n    flushHitboxRemoveQueue,\n    clearHitboxRemoveQueue,\n)\n\nphysics.add(checkHitboxes)\n\nrender.add(() => {\n    values(hitboxes()).forEach(({ x, x2, y, y2}) => {\n        save()\n        beginPath()\n        moveTo(x, y)\n        lineTo(x2, y)\n        lineTo(x2, y2)\n        lineTo(x, y2)\n        strokeStyle('blue')\n        closePath()\n        stroke()\n        restore()\n    })\n})\n", "import { timeDiffS, update, timeMS, removal, render } from './animate'\nimport { beginPath, fill, fillStyle, rect, restore, save } from './draw'\nimport { addHitbox, attachHitboxToObject, createHitBox, getInteractionsForHitboxId, moveHitbox, removeHitbox } from './hitbox'\nimport { allPass, values } from 'ramda'\nimport { uid } from './uid'\nimport { random } from './utilities/generic'\nimport { add, from, left, up, x, y } from './Vector'\nimport { SExtendValue, SFilterValues, SMapExtendValues, State, SValue } from './State/State'\n\nconst ACTIVE = 'ACTIVE';\nconst INACTIVE = 'INACTIVE'\nconst key = (custom) => `GAME/ENEMIES/${custom}`;\ninterface Enemy {\n    id: string;\n    pos: Vector;\n    size: Vector;\n    speed: number;\n    health: number;\n    originalHealth: number;\n    hitboxId?: string;\n    status: 'ACTIVE' | 'INACTIVE';\n}\nexport const lastSpawnTime = State(0);\nexport const enemies = State<Record<string, Enemy>>({});\n\nexport const createEnemy = (posX: number): Enemy => ({\n    id: uid(),\n    pos: from(1800, posX),\n    size: from(100, 50),\n    speed: 350,\n    health: 100,\n    originalHealth: 100,\n    hitboxId: null,\n    status: ACTIVE,\n})\n\nconst canCreate = allPass([\n    () => (timeMS() - lastSpawnTime()) > 1000\n])\n\nconst moveEnemies = () => {\n    enemies(SMapExtendValues(enemy => ({\n        pos: add(enemy.pos, left(enemy.speed * timeDiffS())),\n    })))\n    values(enemies())\n        .forEach(enemy => {\n            moveHitbox(enemy.hitboxId, enemy.pos)\n        });\n}\n\nconst isEnemyOnPage = ({ pos }) => x(pos) > 100\n\nconst canRemoveEnemy = (enemy) => {\n    if(!isEnemyOnPage(enemy)) return true;\n    if (enemy.health === 0) return true;\n    return false;\n}\n\nconst enemyRemover = () => {\n    values(enemies())\n        .forEach(enemy => {\n            if (canRemoveEnemy(enemy)) {\n                setEnemyInactive(enemy);\n                removeHitbox(enemy.hitboxId);\n            }\n        })\n}\n\nexport const spawnEnemies = () => {\n    if (canCreate()) {\n        const enemy = createEnemy(random(100, 900))\n        const hitbox = createHitBox('enemies', enemy.pos, enemy.size, enemy.id)\n\n        lastSpawnTime(timeMS());\n        enemies(SValue(enemy.id, attachHitboxToObject(hitbox, enemy)))\n        addHitbox(hitbox);\n    }\n}\n\nconst setEnemyInactive = (enemy: Enemy) => {\n    return enemies(SExtendValue(enemy.id, { status: 'INACTIVE' }));\n}\n\nexport const damageEnemy = (amount: number, enemy: Enemy) => {\n    enemies(SExtendValue(enemy.id, (e) => ({\n        health: Math.max(0, e.health - amount)\n    })))\n}\n\nremoval.add(\n    () => enemies(SFilterValues(({ status }) => status !== 'INACTIVE'))\n)\n\nupdate.add(\n    spawnEnemies,\n    moveEnemies,\n    enemyRemover,\n);\nrender.add(() => {\n    values(enemies()).forEach((enemy) => {\n        if (enemy.status === INACTIVE) return [];\n        const interactions = getInteractionsForHitboxId(enemy.hitboxId)\n        const hasTouchedBullet = interactions.some(hitbox => hitbox.label === 'bullets')\n        const healthPercentage = enemy.health / enemy.originalHealth;\n        save()\n        beginPath()\n        fillStyle('red')\n        rect(...add(enemy.pos, up(50)), ...y(enemy.size, 20))\n        fill();\n        restore()\n\n        save()\n        beginPath()\n        fillStyle('green')\n        rect(...add(enemy.pos, up(50)), ...from(x(enemy.size) * healthPercentage, 20))\n        fill();\n        restore()\n\n        save()\n        beginPath()\n        fillStyle(hasTouchedBullet ? 'blue' : 'green')\n        rect(...enemy.pos, ...enemy.size)\n        fill();\n        restore()\n    })\n})\n", "import { removal, render, timeDiffS, timeMS, update } from './animate'\nimport { addHitbox, attachHitboxToObject, createHitBox, getInteractionsForHitboxId, moveHitbox, removeHitbox } from './hitbox'\nimport { isKeyDown } from './keys'\nimport { allPass } from 'ramda'\nimport { uid } from './uid'\nimport { pos } from './user'\nimport { add, from, right, Vector, x } from './Vector'\nimport { damageEnemy, enemies } from './enemy'\nimport { State, StateImmer } from './State/State';\nimport { fill, fillStyle, restore, save, rect, beginPath } from './draw'\n\ninterface Bullet {\n    id: string;\n    pos: Vector,\n    size: Vector,\n    direction: Vector,\n    speed: number,\n    hitboxId?: string,\n    status: 'ACTIVE' | 'INACTIVE',\n}\n\nexport const lastBulletFiredTime = State(0);\nexport const bullets = StateImmer<Map<string, Bullet>>(new Map());\n\nconst createBullet = (pos): Bullet => {\n    return {\n        id: uid(),\n        pos,\n        size: from(10),\n        direction: from(0),\n        speed: 700,\n        hitboxId: null,\n        status: 'ACTIVE'\n    }\n}\n\nconst calculateBulletSpeedForFrame = (bullet) => bullet.speed * timeDiffS()\n\nconst canCreateBullet = allPass([\n    () => {\n        return isKeyDown('Space')\n    },\n    () => (timeMS() - lastBulletFiredTime()) > 100,\n])\n\n\nconst bulletCreator = () => {\n    if (canCreateBullet()) {\n        const userPosition = pos()  \n        const bullet = createBullet(userPosition)\n        const hitbox = createHitBox('bullets', bullet.pos, bullet.size, bullet.id)\n        bullets(bullets => {\n            bullets.set(bullet.id, attachHitboxToObject(hitbox, bullet))\n        })\n        lastBulletFiredTime(() => timeMS());\n        addHitbox(hitbox)\n    }\n}\n\nconst isBulletOnPage = ({ pos }) => x(pos) < 1920;\n\nconst bulletUpdate = () => {\n    bullets(bullets => {\n        bullets.forEach((bullet) => {\n            bullet.pos = add(bullet.pos, right(calculateBulletSpeedForFrame(bullet)));\n        })\n    })\n    bullets().forEach(({ hitboxId, pos }) => {\n        moveHitbox(hitboxId, pos)\n    })\n}\n\nconst bulletRemover = () => {\n    bullets().forEach((bullet) => {\n        const onPage = isBulletOnPage(bullet)\n        const interactions = getInteractionsForHitboxId(bullet.hitboxId)\n        const firstTouchedEnemyHitbox = interactions.find(hitbox => hitbox.label === 'enemies')\n        const shouldRemove = !onPage || firstTouchedEnemyHitbox;\n        if (shouldRemove) {\n            setBulletInactive(bullet)\n            removeHitbox(bullet.hitboxId)\n        }\n        if (firstTouchedEnemyHitbox) {\n            damageEnemy(10, enemies()[firstTouchedEnemyHitbox.ownerId])\n        }\n    })\n}\n\nconst setBulletInactive = ({ id }: Bullet) => {\n    bullets(bullets => {\n        bullets.get(id).status = 'INACTIVE';\n    })\n}\n\nremoval\n    .add(\n        () => bullets(bullets => {\n            bullets.forEach((bullet, id) => {\n                if (bullet.status === 'INACTIVE') {\n                    bullets.delete(id);\n                }\n            })\n        })\n    )\n\nupdate\n    .add(\n        bulletCreator,\n        bulletUpdate,\n        bulletRemover,\n    )\n\nconst keyframes = () => {}\n\n// type Color = [number, number, number, number];\n// interface Rect {\n//     x: number;\n//     y: number;\n//     width: number;\n//     height: number;\n//     stroke: boolean;\n//     strokeColor: Color;\n//     strokeWidth: number;\n//     fillColor: Color;\n// }\n\nrender\n    .add(() => {\n        bullets().forEach(({ pos, size }) => {\n            save()\n            beginPath()\n            rect(...pos, ...size)\n            fillStyle('black')\n            fill()\n            restore()\n        })\n    })\n", "import { fps, render } from './animate';\nimport { bullets } from './bullets';\nimport { hitboxes } from './hitbox';\nimport { enemies } from './enemy';\nimport { from } from './Vector';\nimport { beginPath, restore, save, font, fillText } from './draw';\n\nrender.add(() => {\n  const thingsToShow = [\n    { label: 'fps', textLog: fps() },\n    { label: 'bullets', textLog: Object.keys(bullets()).length },\n    { label: 'enemies', textLog: Object.keys(enemies()).length },\n    { label: 'hitboxes', textLog: Object.keys(hitboxes()).length },\n  ];\n  thingsToShow.forEach(({ label, textLog }, index) => {\n    save()\n    beginPath()\n    const fontSize = 40;\n  \n    const count = `${label}: ${textLog}`;\n    const pos = from(10, fontSize + (index * fontSize));\n    font(`${fontSize}px serif`)\n    fillText(count, ...pos)\n    restore()\n  })\n  \n})\n", "import { expose, wrap } from 'comlink';\nimport * as events from './utilities/events';\n\nlet canvasWorker;\nexport const attachCanvasWorker = (transferredCanvasWorker) => {\n  console.log('received canvas worker');\n  canvasWorker = wrap(transferredCanvasWorker);\n  return true;\n}\nexport const fireEvent = (key, data) => {\n  events[key].push(data);\n}\nexport const run = async () => {\n  if (!canvasWorker) throw new Error('canvasWorker has not been setup yet');\n  await import('./canvas');\n  await import('./keys');\n  await import('./user');\n  await import('./enemy');\n  await import('./bullets');\n  await import('./debug');\n  const { activate } = await import('./animate');\n  activate(canvasWorker);\n}\nconst methods = {\n  attachCanvasWorker,\n  fireEvent,\n  run,\n}\n\nexpose(methods);\nexport default methods;\n", "\n\n\n\n\nimport { transfer } from 'comlink';\nimport { createCanvas } from './canvas'\nimport { createComlinkSharedWorker, createComlinkWorker } from './utilities/worker';\n\nconst loadApp = async ({ useWorker = false }: { useWorker: boolean }) => {\n  if (useWorker === false) return await import('./app-worker');\n  const appWorker = createComlinkWorker('/src/app-worker.js', { type: 'module' });\n  return appWorker;\n}\n\nconst run = async () => {\n    const canvas = createCanvas();\n    const offscreenCanvas = canvas.transferControlToOffscreen()\n    const canvasWorker = createComlinkSharedWorker('/src/canvas-worker.js', { type: 'module' });\n    canvasWorker.setCanvas(transfer(offscreenCanvas, [offscreenCanvas]));\n\n    const app = await loadApp({ useWorker: true });\n    const clonedCanvasWorker = canvasWorker.clonePort();\n\n    await app.attachCanvasWorker(transfer(clonedCanvasWorker, [clonedCanvasWorker]));\n\n    setupListeners(app);\n    await app.run();\n}\n\nconst setupListeners = (app?: any) => {\n  window.addEventListener('keydown', ({ code }) => app.fireEvent('windowKeyDownListener', { code }))\n  window.addEventListener('keyup', ({ code }) => app.fireEvent('windowKeyUpListener', { code }))\n}\n\nif (document.readyState === \"complete\") {\n    run();\n} else {\n    window.addEventListener('DOMContentLoaded', run);\n}\n", "import { wrap } from 'comlink';\n\nexport const createComlinkWorker = (path, options) => {\n  const worker = new Worker(path, options);\n  const comlinkWorker = wrap(worker);\n  return comlinkWorker;\n}\nexport const createComlinkSharedWorker = (path, options) => {\n  const worker = new SharedWorker(path, options);\n  worker.port.start();\n  const workerComlink = wrap(worker.port);\n  const base = {\n    get port () { return worker.port },\n    clonePort() {\n      const worker = new SharedWorker(path, options);\n      worker.port.start();\n      return worker.port;\n    }\n  }\n  return new Proxy(base, {\n    get(obj, key) {\n      if (obj.hasOwnProperty(key)) {\n        return Reflect.get(obj, key);\n      }\n      return Reflect.get(workerComlink, key);\n    }\n  })\n}\n"],
  "mappings": "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A;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;ACJA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;ACLA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;ACJA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;ACJA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;ACJA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;ACLA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;ACJA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA,IAGI;AAHJ;AAAA;AAAA;AAGA,IAAI,eAAe,OAAO,OAAO,UAAU,SAAS;AAAA;AAAA;;;ACHpD;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;ACpQA,IAMa,YAQA,UAEA,QAMA;AAtBb;AAAA;AAAA;AAMO,IAAM,aAAa,CAAC,SAAgC,OAAO,SAA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",
  "names": []
}
